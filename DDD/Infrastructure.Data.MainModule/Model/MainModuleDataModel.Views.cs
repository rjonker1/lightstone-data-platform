//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Data.Mapping;
using System.Diagnostics;
using System.Text;
using Edm_EntityMappingGeneratedViews;

[assembly:
    EntityViewGeneration(typeof (ViewsForBaseEntitySets329F50D3D0AB99159C64A601E851E417D275416A50BEF05A69ADAEABF0E60009)
        )]

namespace Edm_EntityMappingGeneratedViews
{
    /// <Summary>
    ///     The type contains views for EntitySets and AssociationSets that were generated at design time.
    /// </Summary>
    [DebuggerNonUserCode]
    [GeneratedCode("EF", "v 4.0")]
    public sealed class ViewsForBaseEntitySets329F50D3D0AB99159C64A601E851E417D275416A50BEF05A69ADAEABF0E60009 :
        EntityViewContainer
    {
        /// <Summary>
        ///     The constructor stores the views for the extents and also the hash values generated based on the metadata and
        ///     mapping closure and views.
        /// </Summary>
        public ViewsForBaseEntitySets329F50D3D0AB99159C64A601E851E417D275416A50BEF05A69ADAEABF0E60009()
        {
            EdmEntityContainerName = "MainModuleUnitOfWork";
            StoreEntityContainerName = "LightstoneAppModelStoreContainer";
            HashOverMappingClosure = "35503d8959f4ab9414a20bc9f7668ed5169c5276eff89692ef6bcc2b30d29651";
            HashOverAllExtentViews = "9260c03c2dec741b4fc0eb5f73ae6744bde2f4a7638f354657e4fb85ed18c9fa";
            ViewCount = 17;
        }

        /// <Summary>
        ///     The method returns the view for the index given.
        /// </Summary>
        protected override KeyValuePair<string, string> GetViewAt(int index)
        {
            if ((index == 0))
            {
                return GetView0();
            }
            if ((index == 1))
            {
                return GetView1();
            }
            if ((index == 2))
            {
                return GetView2();
            }
            if ((index == 3))
            {
                return GetView3();
            }
            if ((index == 4))
            {
                return GetView4();
            }
            if ((index == 5))
            {
                return GetView5();
            }
            if ((index == 6))
            {
                return GetView6();
            }
            if ((index == 7))
            {
                return GetView7();
            }
            if ((index == 8))
            {
                return GetView8();
            }
            if ((index == 9))
            {
                return GetView9();
            }
            if ((index == 10))
            {
                return GetView10();
            }
            if ((index == 11))
            {
                return GetView11();
            }
            if ((index == 12))
            {
                return GetView12();
            }
            if ((index == 13))
            {
                return GetView13();
            }
            if ((index == 14))
            {
                return GetView14();
            }
            if ((index == 15))
            {
                return GetView15();
            }
            if ((index == 16))
            {
                return GetView16();
            }
            throw new IndexOutOfRangeException();
        }

        /// <Summary>
        ///     return view for LightstoneAppModelStoreContainer.BankAccount
        /// </Summary>
        private KeyValuePair<string, string> GetView0()
        {
            return new KeyValuePair<string, string>("LightstoneAppModelStoreContainer.BankAccount", @"
    SELECT VALUE -- Constructing BankAccount
        [LightstoneAppModel.Store.BankAccount](T1.BankAccount_BankAccountId, T1.BankAccount_BankAccountNumber, T1.BankAccount_Balance, T1.BankAccount_CustomerId, T1.BankAccount_Locked)
    FROM (
        SELECT 
            T.BankAccountId AS BankAccount_BankAccountId, 
            T.BankAccountNumber AS BankAccount_BankAccountNumber, 
            T.Balance AS BankAccount_Balance, 
            T.CustomerId AS BankAccount_CustomerId, 
            T.Locked AS BankAccount_Locked, 
            True AS _from0
        FROM MainModuleUnitOfWork.BankAccounts AS T
    ) AS T1");
        }

        /// <Summary>
        ///     return view for LightstoneAppModelStoreContainer.BankTransfers
        /// </Summary>
        private KeyValuePair<string, string> GetView1()
        {
            return new KeyValuePair<string, string>("LightstoneAppModelStoreContainer.BankTransfers", @"
    SELECT VALUE -- Constructing BankTransfers
        [LightstoneAppModel.Store.BankTransfers](T1.BankTransfers_BankTransferId, T1.BankTransfers_FromBankAccountId, T1.BankTransfers_ToBankAccountId, T1.BankTransfers_Amount, T1.BankTransfers_TransferDate)
    FROM (
        SELECT 
            T.BankTransferId AS BankTransfers_BankTransferId, 
            T.FromBankAccountId AS BankTransfers_FromBankAccountId, 
            T.ToBankAccountId AS BankTransfers_ToBankAccountId, 
            T.Amount AS BankTransfers_Amount, 
            T.TransferDate AS BankTransfers_TransferDate, 
            True AS _from0
        FROM MainModuleUnitOfWork.BankTransfers AS T
    ) AS T1");
        }

        /// <Summary>
        ///     return view for LightstoneAppModelStoreContainer.Country
        /// </Summary>
        private KeyValuePair<string, string> GetView2()
        {
            return new KeyValuePair<string, string>("LightstoneAppModelStoreContainer.Country", @"
    SELECT VALUE -- Constructing Country
        [LightstoneAppModel.Store.Country](T1.Country_CountryId, T1.Country_CountryName)
    FROM (
        SELECT 
            T.CountryId AS Country_CountryId, 
            T.CountryName AS Country_CountryName, 
            True AS _from0
        FROM MainModuleUnitOfWork.Countries AS T
    ) AS T1");
        }

        /// <Summary>
        ///     return view for LightstoneAppModelStoreContainer.Customer
        /// </Summary>
        private KeyValuePair<string, string> GetView3()
        {
            return new KeyValuePair<string, string>("LightstoneAppModelStoreContainer.Customer",
                "\r\n    SELECT VALUE -- Constructing Customer\r\n        [LightstoneAppModel.Store.Custom" +
                "er](T3.Customer_CustomerId, T3.Customer_CustomerCode, T3.Customer_CompanyName, T" +
                "3.Customer_ContactName, T3.Customer_ContactTitle, T3.Customer_Address, T3.Custom" +
                "er_City, T3.Customer_PostalCode, T3.Customer_Telephone, T3.Customer_Fax, T3.Cust" +
                "omer_CountryId, T3.Customer_Photo, T3.Customer_IsEnabled)\r\n    FROM (\r\n        S" +
                "ELECT T1.Customer_CustomerId, T2.Customer_CustomerCode, T2.Customer_CompanyName," +
                " T2.Customer_ContactName, T2.Customer_ContactTitle, T2.Customer_Address, T2.Cust" +
                "omer_City, T2.Customer_PostalCode, T2.Customer_Telephone, T2.Customer_Fax, T2.Cu" +
                "stomer_CountryId, T1.Customer_Photo, T2.Customer_IsEnabled, T2._from0, T1._from1" +
                "\r\n        FROM  (\r\n            SELECT \r\n                T.CustomerId AS Customer" +
                "_CustomerId, \r\n                T.Photo AS Customer_Photo, \r\n                True" +
                " AS _from1\r\n            FROM MainModuleUnitOfWork.CustomerPictures AS T) AS T1\r\n" +
                "            INNER JOIN (\r\n            SELECT \r\n                T.CustomerId AS C" +
                "ustomer_CustomerId, \r\n                T.CustomerCode AS Customer_CustomerCode, \r" +
                "\n                T.CompanyName AS Customer_CompanyName, \r\n                T.Cont" +
                "actName AS Customer_ContactName, \r\n                T.ContactTitle AS Customer_Co" +
                "ntactTitle, \r\n                T.Address.Address AS Customer_Address, \r\n         " +
                "       T.Address.City AS Customer_City, \r\n                T.Address.PostalCode A" +
                "S Customer_PostalCode, \r\n                T.Address.Telephone AS Customer_Telepho" +
                "ne, \r\n                T.Address.Fax AS Customer_Fax, \r\n                T.Country" +
                "Id AS Customer_CountryId, \r\n                T.IsEnabled AS Customer_IsEnabled, \r" +
                "\n                True AS _from0\r\n            FROM MainModuleUnitOfWork.Customers" +
                " AS T) AS T2\r\n            ON T1.Customer_CustomerId = T2.Customer_CustomerId\r\n  " +
                "  ) AS T3");
        }

        /// <Summary>
        ///     return view for LightstoneAppModelStoreContainer.Order
        /// </Summary>
        private KeyValuePair<string, string> GetView4()
        {
            return new KeyValuePair<string, string>("LightstoneAppModelStoreContainer.Order", @"
    SELECT VALUE -- Constructing Order
        [LightstoneAppModel.Store.Order](T1.Order_OrderId, T1.Order_CustomerId, T1.Order_OrderDate, T1.Order_DeliveryDate, T1.Order_ShippingName, T1.Order_ShippingAddress, T1.Order_ShippingCity, T1.Order_ShippingZip)
    FROM (
        SELECT 
            T.OrderId AS Order_OrderId, 
            T.CustomerId AS Order_CustomerId, 
            T.OrderDate AS Order_OrderDate, 
            T.DeliveryDate AS Order_DeliveryDate, 
            T.ShippingName AS Order_ShippingName, 
            T.ShippingAddress AS Order_ShippingAddress, 
            T.ShippingCity AS Order_ShippingCity, 
            T.ShippingZip AS Order_ShippingZip, 
            True AS _from0
        FROM MainModuleUnitOfWork.Orders AS T
    ) AS T1");
        }

        /// <Summary>
        ///     return view for LightstoneAppModelStoreContainer.OrderDetails
        /// </Summary>
        private KeyValuePair<string, string> GetView5()
        {
            return new KeyValuePair<string, string>("LightstoneAppModelStoreContainer.OrderDetails", @"
    SELECT VALUE -- Constructing OrderDetails
        [LightstoneAppModel.Store.OrderDetails](T1.OrderDetails_OrderDetailsId, T1.OrderDetails_OrderId, T1.OrderDetails_ProductId, T1.OrderDetails_UnitPrice, T1.OrderDetails_Amount, T1.OrderDetails_Discount)
    FROM (
        SELECT 
            T.OrderDetailsId AS OrderDetails_OrderDetailsId, 
            T.OrderId AS OrderDetails_OrderId, 
            T.ProductId AS OrderDetails_ProductId, 
            T.UnitPrice AS OrderDetails_UnitPrice, 
            T.Amount AS OrderDetails_Amount, 
            T.Discount AS OrderDetails_Discount, 
            True AS _from0
        FROM MainModuleUnitOfWork.OrderDetails AS T
    ) AS T1");
        }

        /// <Summary>
        ///     return view for LightstoneAppModelStoreContainer.Product
        /// </Summary>
        private KeyValuePair<string, string> GetView6()
        {
            return new KeyValuePair<string, string>("LightstoneAppModelStoreContainer.Product", @"
    SELECT VALUE -- Constructing Product
        [LightstoneAppModel.Store.Product](T1.Product_ProductId, T1.Product_ProductDescription, T1.Product_UnitPrice, T1.Product_UnitAmount, T1.Product_Publisher, T1.Product_AmountInStock)
    FROM (
        SELECT 
            T.ProductId AS Product_ProductId, 
            T.ProductDescription AS Product_ProductDescription, 
            T.UnitPrice AS Product_UnitPrice, 
            T.UnitAmount AS Product_UnitAmount, 
            T.Publisher AS Product_Publisher, 
            T.AmountInStock AS Product_AmountInStock, 
            True AS _from0
        FROM MainModuleUnitOfWork.Products AS T
    ) AS T1");
        }

        /// <Summary>
        ///     return view for LightstoneAppModelStoreContainer.Software
        /// </Summary>
        private KeyValuePair<string, string> GetView7()
        {
            return new KeyValuePair<string, string>("LightstoneAppModelStoreContainer.Software", @"
    SELECT VALUE -- Constructing Software
        [LightstoneAppModel.Store.Software](T1.Software_ProductId, T1.Software_LicenseCode)
    FROM (
        SELECT 
            T.ProductId AS Software_ProductId, 
            TREAT(T AS [LightstoneApp.Infrastructure.Data.MainModule.Model.Software]).LicenseCode AS Software_LicenseCode, 
            True AS _from0
        FROM MainModuleUnitOfWork.Products AS T
        WHERE T IS OF (ONLY [LightstoneApp.Infrastructure.Data.MainModule.Model.Software])
    ) AS T1");
        }

        /// <Summary>
        ///     return view for LightstoneAppModelStoreContainer.Book
        /// </Summary>
        private KeyValuePair<string, string> GetView8()
        {
            return new KeyValuePair<string, string>("LightstoneAppModelStoreContainer.Book", @"
    SELECT VALUE -- Constructing Book
        [LightstoneAppModel.Store.Book](T1.Book_ProductId, T1.Book_Publisher)
    FROM (
        SELECT 
            T.ProductId AS Book_ProductId, 
            TREAT(T AS [LightstoneApp.Infrastructure.Data.MainModule.Model.Book]).Editor AS Book_Publisher, 
            True AS _from0
        FROM MainModuleUnitOfWork.Products AS T
        WHERE T IS OF (ONLY [LightstoneApp.Infrastructure.Data.MainModule.Model.Book])
    ) AS T1");
        }

        /// <Summary>
        ///     return view for MainModuleUnitOfWork.BankAccounts
        /// </Summary>
        private KeyValuePair<string, string> GetView9()
        {
            return new KeyValuePair<string, string>("MainModuleUnitOfWork.BankAccounts", @"
    SELECT VALUE -- Constructing BankAccounts
        [LightstoneApp.Infrastructure.Data.MainModule.Model.BankAccount](T1.BankAccount_BankAccountId, T1.BankAccount_BankAccountNumber, T1.BankAccount_Balance, T1.BankAccount_CustomerId, T1.BankAccount_Locked)
    FROM (
        SELECT 
            T.BankAccountId AS BankAccount_BankAccountId, 
            T.BankAccountNumber AS BankAccount_BankAccountNumber, 
            T.Balance AS BankAccount_Balance, 
            T.CustomerId AS BankAccount_CustomerId, 
            T.Locked AS BankAccount_Locked, 
            True AS _from0
        FROM LightstoneAppModelStoreContainer.BankAccount AS T
    ) AS T1");
        }

        /// <Summary>
        ///     return view for MainModuleUnitOfWork.BankTransfers
        /// </Summary>
        private KeyValuePair<string, string> GetView10()
        {
            return new KeyValuePair<string, string>("MainModuleUnitOfWork.BankTransfers", @"
    SELECT VALUE -- Constructing BankTransfers
        [LightstoneApp.Infrastructure.Data.MainModule.Model.BankTransfer](T1.BankTransfer_BankTransferId, T1.BankTransfer_FromBankAccountId, T1.BankTransfer_ToBankAccountId, T1.BankTransfer_Amount, T1.BankTransfer_TransferDate)
    FROM (
        SELECT 
            T.BankTransferId AS BankTransfer_BankTransferId, 
            T.FromBankAccountId AS BankTransfer_FromBankAccountId, 
            T.ToBankAccountId AS BankTransfer_ToBankAccountId, 
            T.Amount AS BankTransfer_Amount, 
            T.TransferDate AS BankTransfer_TransferDate, 
            True AS _from0
        FROM LightstoneAppModelStoreContainer.BankTransfers AS T
    ) AS T1");
        }

        /// <Summary>
        ///     return view for MainModuleUnitOfWork.Countries
        /// </Summary>
        private KeyValuePair<string, string> GetView11()
        {
            return new KeyValuePair<string, string>("MainModuleUnitOfWork.Countries", @"
    SELECT VALUE -- Constructing Countries
        [LightstoneApp.Infrastructure.Data.MainModule.Model.Country](T1.Country_CountryId, T1.Country_CountryName)
    FROM (
        SELECT 
            T.CountryId AS Country_CountryId, 
            T.CountryName AS Country_CountryName, 
            True AS _from0
        FROM LightstoneAppModelStoreContainer.Country AS T
    ) AS T1");
        }

        /// <Summary>
        ///     return view for MainModuleUnitOfWork.Customers
        /// </Summary>
        private KeyValuePair<string, string> GetView12()
        {
            return new KeyValuePair<string, string>("MainModuleUnitOfWork.Customers",
                "\r\n    SELECT VALUE -- Constructing Customers\r\n        [LightstoneApp.Infrastructu" +
                "re.Data.MainModule.Model.Customer](T2.Customer_CustomerId, T2.Customer_CustomerC" +
                "ode, T2.Customer_CompanyName, T2.Customer_ContactName, T2.Customer_ContactTitle," +
                " T2.Customer_CountryId, T2.Customer_Address, T2.Customer_IsEnabled)\r\n    FROM (\r" +
                "\n        SELECT -- Constructing Address\r\n            T1.Customer_CustomerId, \r\n " +
                "           T1.Customer_CustomerCode, \r\n            T1.Customer_CompanyName, \r\n  " +
                "          T1.Customer_ContactName, \r\n            T1.Customer_ContactTitle, \r\n   " +
                "         T1.Customer_CountryId, \r\n            [LightstoneApp.Infrastructure.Data" +
                ".MainModule.Model.AddressInformation](T1.Customer_Address_Fax, T1.Customer_Addre" +
                "ss_Telephone, T1.Customer_Address_PostalCode, T1.Customer_Address_City, T1.Custo" +
                "mer_Address_Address) AS Customer_Address, \r\n            T1.Customer_IsEnabled\r\n " +
                "       FROM (\r\n            SELECT \r\n                T.CustomerId AS Customer_Cus" +
                "tomerId, \r\n                T.CustomerCode AS Customer_CustomerCode, \r\n          " +
                "      T.CompanyName AS Customer_CompanyName, \r\n                T.ContactName AS " +
                "Customer_ContactName, \r\n                T.ContactTitle AS Customer_ContactTitle," +
                " \r\n                T.CountryId AS Customer_CountryId, \r\n                T.Fax AS" +
                " Customer_Address_Fax, \r\n                T.Telephone AS Customer_Address_Telepho" +
                "ne, \r\n                T.PostalCode AS Customer_Address_PostalCode, \r\n           " +
                "     T.City AS Customer_Address_City, \r\n                T.Address AS Customer_Ad" +
                "dress_Address, \r\n                T.IsEnabled AS Customer_IsEnabled, \r\n          " +
                "      True AS _from0\r\n            FROM LightstoneAppModelStoreContainer.Customer AS " +
                "T\r\n        ) AS T1\r\n    ) AS T2");
        }

        /// <Summary>
        ///     return view for MainModuleUnitOfWork.Orders
        /// </Summary>
        private KeyValuePair<string, string> GetView13()
        {
            return new KeyValuePair<string, string>("MainModuleUnitOfWork.Orders", @"
    SELECT VALUE -- Constructing Orders
        [LightstoneApp.Infrastructure.Data.MainModule.Model.Order](T1.Order_OrderId, T1.Order_CustomerId, T1.Order_OrderDate, T1.Order_DeliveryDate, T1.Order_ShippingName, T1.Order_ShippingAddress, T1.Order_ShippingCity, T1.Order_ShippingZip)
    FROM (
        SELECT 
            T.OrderId AS Order_OrderId, 
            T.CustomerId AS Order_CustomerId, 
            T.OrderDate AS Order_OrderDate, 
            T.DeliveryDate AS Order_DeliveryDate, 
            T.ShippingName AS Order_ShippingName, 
            T.ShippingAddress AS Order_ShippingAddress, 
            T.ShippingCity AS Order_ShippingCity, 
            T.ShippingZip AS Order_ShippingZip, 
            True AS _from0
        FROM LightstoneAppModelStoreContainer.[Order] AS T
    ) AS T1");
        }

        /// <Summary>
        ///     return view for MainModuleUnitOfWork.OrderDetails
        /// </Summary>
        private KeyValuePair<string, string> GetView14()
        {
            return new KeyValuePair<string, string>("MainModuleUnitOfWork.OrderDetails", @"
    SELECT VALUE -- Constructing OrderDetails
        [LightstoneApp.Infrastructure.Data.MainModule.Model.OrderDetail](T1.OrderDetail_OrderDetailsId, T1.OrderDetail_OrderId, T1.OrderDetail_ProductId, T1.OrderDetail_UnitPrice, T1.OrderDetail_Amount, T1.OrderDetail_Discount)
    FROM (
        SELECT 
            T.OrderDetailsId AS OrderDetail_OrderDetailsId, 
            T.OrderId AS OrderDetail_OrderId, 
            T.ProductId AS OrderDetail_ProductId, 
            T.UnitPrice AS OrderDetail_UnitPrice, 
            T.Amount AS OrderDetail_Amount, 
            T.Discount AS OrderDetail_Discount, 
            True AS _from0
        FROM LightstoneAppModelStoreContainer.OrderDetails AS T
    ) AS T1");
        }

        /// <Summary>
        ///     return view for MainModuleUnitOfWork.Products
        /// </Summary>
        private KeyValuePair<string, string> GetView15()
        {
            var viewString = new StringBuilder(2280);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Products\r\n        CASE\r\n            WHEN (NOT");
            viewString.Append("(T4._from1) AND NOT(T4._from2)) THEN [LightstoneApp.Infrastructure.Data.MainModu");
            viewString.Append("le.Model.Product](T4.Product_ProductId, T4.Product_ProductDescription, T4.Produc");
            viewString.Append("t_UnitPrice, T4.Product_UnitAmount, T4.Product_Publisher, T4.Product_AmountInSto");
            viewString.Append("ck)\r\n            WHEN T4._from2 THEN [LightstoneApp.Infrastructure.Data.MainModu");
            viewString.Append("le.Model.Book](T4.Product_ProductId, T4.Product_ProductDescription, T4.Product_U");
            viewString.Append("nitPrice, T4.Product_UnitAmount, T4.Product_Publisher, T4.Product_AmountInStock,");
            viewString.Append(" T4.Book_Editor)\r\n            ELSE [LightstoneApp.Infrastructure.Data.MainModule");
            viewString.Append(".Model.Software](T4.Product_ProductId, T4.Product_ProductDescription, T4.Product");
            viewString.Append("_UnitPrice, T4.Product_UnitAmount, T4.Product_Publisher, T4.Product_AmountInStoc");
            viewString.Append("k, T4.Software_LicenseCode)\r\n        END\r\n    FROM (\r\n        SELECT T1.Product_");
            viewString.Append("ProductId, T1.Product_ProductDescription, T1.Product_UnitPrice, T1.Product_UnitA");
            viewString.Append("mount, T1.Product_Publisher, T1.Product_AmountInStock, T3.Book_Editor, T2.Softwa");
            viewString.Append("re_LicenseCode, T1._from0, (T2._from1 AND T2._from1 IS NOT NULL) AS _from1, (T3.");
            viewString.Append("_from2 AND T3._from2 IS NOT NULL) AS _from2\r\n        FROM  (\r\n            SELECT");
            viewString.Append(" \r\n                T.ProductId AS Product_ProductId, \r\n                T.Product");
            viewString.Append("Description AS Product_ProductDescription, \r\n                T.UnitPrice AS Prod");
            viewString.Append("uct_UnitPrice, \r\n                T.UnitAmount AS Product_UnitAmount, \r\n         ");
            viewString.Append("       T.Publisher AS Product_Publisher, \r\n                T.AmountInStock AS Pr");
            viewString.Append("oduct_AmountInStock, \r\n                True AS _from0\r\n            FROM NLayerAp");
            viewString.Append("pModelStoreContainer.Product AS T) AS T1\r\n            LEFT OUTER JOIN (\r\n       ");
            viewString.Append("     SELECT \r\n                T.ProductId AS Product_ProductId, \r\n              ");
            viewString.Append("  T.LicenseCode AS Software_LicenseCode, \r\n                True AS _from1\r\n     ");
            viewString.Append("       FROM LightstoneAppModelStoreContainer.Software AS T) AS T2\r\n            ON T1");
            viewString.Append(".Product_ProductId = T2.Product_ProductId\r\n            LEFT OUTER JOIN (\r\n      ");
            viewString.Append("      SELECT \r\n                T.ProductId AS Product_ProductId, \r\n             ");
            viewString.Append("   T.Publisher AS Book_Editor, \r\n                True AS _from2\r\n            FRO");
            viewString.Append("M LightstoneAppModelStoreContainer.Book AS T) AS T3\r\n            ON T1.Product_Produ");
            viewString.Append("ctId = T3.Product_ProductId\r\n    ) AS T4");
            return new KeyValuePair<string, string>("MainModuleUnitOfWork.Products", viewString.ToString());
        }

        /// <Summary>
        ///     return view for MainModuleUnitOfWork.CustomerPictures
        /// </Summary>
        private KeyValuePair<string, string> GetView16()
        {
            return new KeyValuePair<string, string>("MainModuleUnitOfWork.CustomerPictures", @"
    SELECT VALUE -- Constructing CustomerPictures
        [LightstoneApp.Infrastructure.Data.MainModule.Model.CustomerPicture](T1.CustomerPicture_CustomerId, T1.CustomerPicture_Photo)
    FROM (
        SELECT 
            T.CustomerId AS CustomerPicture_CustomerId, 
            T.Photo AS CustomerPicture_Photo, 
            True AS _from0
        FROM LightstoneAppModelStoreContainer.Customer AS T
    ) AS T1");
        }
    }
}