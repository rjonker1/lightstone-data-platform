//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightstoneApp.Presentation.Windows.WPF.ServiceAgents.Proxies.MainModule {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagedCriteria", Namespace="LightstoneApp.DistributedServices.MainModuleService")]
    [System.SerializableAttribute()]
    public partial class PagedCriteria : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageIndexField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageCount {
            get {
                return this.PageCountField;
            }
            set {
                if ((this.PageCountField.Equals(value) != true)) {
                    this.PageCountField = value;
                    this.RaisePropertyChanged("PageCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageIndex {
            get {
                return this.PageIndexField;
            }
            set {
                if ((this.PageIndexField.Equals(value) != true)) {
                    this.PageIndexField = value;
                    this.RaisePropertyChanged("PageIndex");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="TrackableCollectionOfBankTransferwCMH1Nrk", Namespace="http://schemas.datacontract.org/2004/07/LightstoneApp.Domain.Core.E" +
        "ntities", ItemName="BankTransfer")]
    [System.SerializableAttribute()]
    public class TrackableCollectionOfBankTransferwCMH1Nrk : System.Collections.Generic.List<LightstoneApp.Domain.MainModule.Entities.BankTransfer> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ExtendedPropertiesDictionary", Namespace="http://schemas.datacontract.org/2004/07/LightstoneApp.Domain.Core.E" +
        "ntities", ItemName="ExtendedProperties", KeyName="Name", ValueName="ExtendedProperty")]
    [System.SerializableAttribute()]
    public class ExtendedPropertiesDictionary : System.Collections.Generic.Dictionary<string, object> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ObjectsAddedToCollectionProperties", Namespace="http://schemas.datacontract.org/2004/07/LightstoneApp.Domain.Core.E" +
        "ntities", ItemName="AddedObjectsForProperty", KeyName="CollectionPropertyName", ValueName="AddedObjects")]
    [System.SerializableAttribute()]
    public class ObjectsAddedToCollectionProperties : System.Collections.Generic.Dictionary<string, LightstoneApp.Presentation.Windows.WPF.ServiceAgents.Proxies.MainModule.ObjectList> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ObjectList", Namespace="http://schemas.datacontract.org/2004/07/LightstoneApp.Domain.Core.E" +
        "ntities", ItemName="ObjectValue")]
    [System.SerializableAttribute()]
    public class ObjectList : System.Collections.Generic.List<object> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ObjectsRemovedFromCollectionProperties", Namespace="http://schemas.datacontract.org/2004/07/LightstoneApp.Domain.Core.E" +
        "ntities", ItemName="DeletedObjectsForProperty", KeyName="CollectionPropertyName", ValueName="DeletedObjects")]
    [System.SerializableAttribute()]
    public class ObjectsRemovedFromCollectionProperties : System.Collections.Generic.Dictionary<string, LightstoneApp.Presentation.Windows.WPF.ServiceAgents.Proxies.MainModule.ObjectList> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="OriginalValuesDictionary", Namespace="http://schemas.datacontract.org/2004/07/LightstoneApp.Domain.Core.E" +
        "ntities", ItemName="OriginalValues", KeyName="Name", ValueName="OriginalValue")]
    [System.SerializableAttribute()]
    public class OriginalValuesDictionary : System.Collections.Generic.Dictionary<string, object> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="TrackableCollectionOfBankAccountwCMH1Nrk", Namespace="http://schemas.datacontract.org/2004/07/LightstoneApp.Domain.Core.E" +
        "ntities", ItemName="BankAccount")]
    [System.SerializableAttribute()]
    public class TrackableCollectionOfBankAccountwCMH1Nrk : System.Collections.Generic.List<LightstoneApp.Domain.MainModule.Entities.BankAccount> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="TrackableCollectionOfCustomerwCMH1Nrk", Namespace="http://schemas.datacontract.org/2004/07/LightstoneApp.Domain.Core.E" +
        "ntities", ItemName="Customer")]
    [System.SerializableAttribute()]
    public class TrackableCollectionOfCustomerwCMH1Nrk : System.Collections.Generic.List<LightstoneApp.Domain.MainModule.Entities.Customer> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="TrackableCollectionOfOrderwCMH1Nrk", Namespace="http://schemas.datacontract.org/2004/07/LightstoneApp.Domain.Core.E" +
        "ntities", ItemName="Order")]
    [System.SerializableAttribute()]
    public class TrackableCollectionOfOrderwCMH1Nrk : System.Collections.Generic.List<LightstoneApp.Domain.MainModule.Entities.Order> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="TrackableCollectionOfOrderDetailwCMH1Nrk", Namespace="http://schemas.datacontract.org/2004/07/LightstoneApp.Domain.Core.E" +
        "ntities", ItemName="OrderDetail")]
    [System.SerializableAttribute()]
    public class TrackableCollectionOfOrderDetailwCMH1Nrk : System.Collections.Generic.List<LightstoneApp.Domain.MainModule.Entities.OrderDetail> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BankAccountInformation", Namespace="LightstoneApp.DistributedServices.MainModuleService")]
    [System.SerializableAttribute()]
    public partial class BankAccountInformation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BankAccountNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BankAccountNumber {
            get {
                return this.BankAccountNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.BankAccountNumberField, value) != true)) {
                    this.BankAccountNumberField = value;
                    this.RaisePropertyChanged("BankAccountNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransferInformation", Namespace="LightstoneApp.DistributedServices.MainModuleService")]
    [System.SerializableAttribute()]
    public partial class TransferInformation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DestinationAccountNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OriginAccountNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DestinationAccountNumber {
            get {
                return this.DestinationAccountNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.DestinationAccountNumberField, value) != true)) {
                    this.DestinationAccountNumberField = value;
                    this.RaisePropertyChanged("DestinationAccountNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OriginAccountNumber {
            get {
                return this.OriginAccountNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginAccountNumberField, value) != true)) {
                    this.OriginAccountNumberField = value;
                    this.RaisePropertyChanged("OriginAccountNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PublisherInformation", Namespace="LightstoneApp.DistributedServices.MainModuleService")]
    [System.SerializableAttribute()]
    public partial class PublisherInformation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PublisherNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PublisherName {
            get {
                return this.PublisherNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PublisherNameField, value) != true)) {
                    this.PublisherNameField = value;
                    this.RaisePropertyChanged("PublisherName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderInformation", Namespace="LightstoneApp.DistributedServices.MainModuleService")]
    [System.SerializableAttribute()]
    public partial class OrderInformation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustomerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateTimeFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateTimeToField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustomerId {
            get {
                return this.CustomerIdField;
            }
            set {
                if ((this.CustomerIdField.Equals(value) != true)) {
                    this.CustomerIdField = value;
                    this.RaisePropertyChanged("CustomerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateTimeFrom {
            get {
                return this.DateTimeFromField;
            }
            set {
                if ((this.DateTimeFromField.Equals(value) != true)) {
                    this.DateTimeFromField = value;
                    this.RaisePropertyChanged("DateTimeFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateTimeTo {
            get {
                return this.DateTimeToField;
            }
            set {
                if ((this.DateTimeToField.Equals(value) != true)) {
                    this.DateTimeToField = value;
                    this.RaisePropertyChanged("DateTimeTo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShippingInformation", Namespace="LightstoneApp.DistributedServices.MainModuleService")]
    [System.SerializableAttribute()]
    public partial class ShippingInformation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingZipField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShippingAddress {
            get {
                return this.ShippingAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingAddressField, value) != true)) {
                    this.ShippingAddressField = value;
                    this.RaisePropertyChanged("ShippingAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShippingCity {
            get {
                return this.ShippingCityField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingCityField, value) != true)) {
                    this.ShippingCityField = value;
                    this.RaisePropertyChanged("ShippingCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShippingName {
            get {
                return this.ShippingNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingNameField, value) != true)) {
                    this.ShippingNameField = value;
                    this.RaisePropertyChanged("ShippingName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShippingZip {
            get {
                return this.ShippingZipField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingZipField, value) != true)) {
                    this.ShippingZipField = value;
                    this.RaisePropertyChanged("ShippingZip");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceError", Namespace="LightstoneApp.DistributedServices.Core")]
    [System.SerializableAttribute()]
    public partial class ServiceError : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="LightstoneApp.DistributedServices.MainModuleService", ConfigurationName="Proxies.MainModule.IMainModuleService", SessionMode=System.ServiceModel.SessionMode.NotAllowed)]
    public interface IMainModuleService {
        
        [System.ServiceModel.OperationContractAttribute(Action="LightstoneApp.DistributedServices.MainModuleService/IMainModuleServ" +
            "ice/GetPagedBankAccounts", ReplyAction="LightstoneApp.DistributedServices.MainModuleService/IMainModuleServ" +
            "ice/GetPagedBankAccountsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LightstoneApp.Presentation.Windows.WPF.ServiceAgents.Proxies.MainModule.ServiceError), Action="LightstoneApp.DistributedServices.MainModuleService/IMainModuleServ" +
            "ice/GetPagedBankAccountsServiceErrorFault", Name="ServiceError", Namespace="LightstoneApp.DistributedServices.Core")]
        System.Collections.Generic.List<LightstoneApp.Domain.MainModule.Entities.BankAccount> GetPagedBankAccounts(LightstoneApp.Presentation.Windows.WPF.ServiceAgents.Proxies.MainModule.PagedCriteria pagedCriteria);
        
        [System.ServiceModel.OperationContractAttribute(Action="LightstoneApp.DistributedServices.MainModuleService/IMainModuleServ" +
            "ice/GetBankAccounts", ReplyAction="LightstoneApp.DistributedServices.MainModuleService/IMainModuleServ" +
            "ice/GetBankAccountsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LightstoneApp.Presentation.Windows.WPF.ServiceAgents.Proxies.MainModule.ServiceError), Action="LightstoneApp.DistributedServices.MainModuleService/IMainModuleServ" +
            "ice/GetBankAccountsServiceErrorFault", Name="ServiceError", Namespace="LightstoneApp.DistributedServices.Core")]
        System.Collections.Generic.List<LightstoneApp.Domain.MainModule.Entities.BankAccount> GetBankAccounts(LightstoneApp.Presentation.Windows.WPF.ServiceAgents.Proxies.MainModule.BankAccountInformation bankAccountInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="LightstoneApp.DistributedServices.MainModuleService/IMainModuleServ" +
            "ice/GetBankAccountByNumber", ReplyAction="LightstoneApp.DistributedServices.MainModuleService/IMainModuleServ" +
            "ice/GetBankAccountByNumberResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LightstoneApp.Presentation.Windows.WPF.ServiceAgents.Proxies.MainModule.ServiceError), Action="LightstoneApp.DistributedServices.MainModuleService/IMainModuleServ" +
            "ice/GetBankAccountByNumberServiceErrorFault", Name="ServiceError", Namespace="LightstoneApp.DistributedServices.Core")]
        LightstoneApp.Domain.MainModule.Entities.BankAccount GetBankAccountByNumber(string bankAccountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="LightstoneApp.DistributedServices.MainModuleService/IMainModuleServ" +
            "ice/ChangeBankAccount", ReplyAction="LightstoneApp.DistributedServices.MainModuleService/IMainModuleServ" +
            "ice/ChangeBankAccountResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LightstoneApp.Presentation.Windows.WPF.ServiceAgents.Proxies.MainModule.ServiceError), Action="LightstoneApp.DistributedServices.MainModuleService/IMainModuleServ" +
            "ice/ChangeBankAccountServiceErrorFault", Name="ServiceError", Namespace="LightstoneApp.DistributedServices.Core")]
        void ChangeBankAccount(LightstoneApp.Domain.MainModule.Entities.BankAccount bankAccount);
        
        [System.ServiceModel.OperationContractAttribute(Action="LightstoneApp.DistributedServices.MainModuleService/IMainModuleServ" +
            "ice/AddBankAccount", ReplyAction="LightstoneApp.DistributedServices.MainModuleService/IMainModuleServ" +
            "ice/AddBankAccountResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LightstoneApp.Presentation.Windows.WPF.ServiceAgents.Proxies.MainModule.ServiceError), Action="LightstoneApp.DistributedServices.MainModuleService/IMainModuleServ" +
            "ice/AddBankAccountServiceErrorFault", Name="ServiceError", Namespace="LightstoneApp.DistributedServices.Core")]
        void AddBankAccount(LightstoneApp.Domain.MainModule.Entities.BankAccount bankAccount);
        
        [System.ServiceModel.OperationContractAttribute(Action="LightstoneApp.DistributedServices.MainModuleService/IMainModuleServ" +
            "ice/GetPagedTransfers", ReplyAction="LightstoneApp.DistributedServices.MainModuleService/IMainModuleServ" +
            "ice/GetPagedTransfersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LightstoneApp.Presentation.Windows.WPF.ServiceAgents.Proxies.MainModule.ServiceError), Action="LightstoneApp.DistributedServices.MainModuleService/IMainModuleServ" +
            "ice/GetPagedTransfersServiceErrorFault", Name="ServiceError", Namespace="LightstoneApp.DistributedServices.Core")]
        System.Collections.Generic.List<LightstoneApp.Domain.MainModule.Entities.BankTransfer> GetPagedTransfers(LightstoneApp.Presentation.Windows.WPF.ServiceAgents.Proxies.MainModule.PagedCriteria pagedCriteria);
        
        [System.ServiceModel.OperationContractAttribute(Action="LightstoneApp.DistributedServices.MainModuleService/IMainModuleServ" +
            "ice/PerformBankTransfer", ReplyAction="LightstoneApp.DistributedServices.MainModuleService/IMainModuleServ" +
            "ice/PerformBankTransferResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LightstoneApp.Presentation.Windows.WPF.ServiceAgents.Proxies.MainModule.ServiceError), Action="LightstoneApp.DistributedServices.MainModuleService/IMainModuleServ" +
            "ice/PerformBankTransferServiceErrorFault", Name="ServiceError", Namespace="LightstoneApp.DistributedServices.Core")]
        void PerformBankTransfer(LightstoneApp.Presentation.Windows.WPF.ServiceAgents.Proxies.MainModule.TransferInformation transferInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="LightstoneApp.DistributedServices.MainModuleService/IMainModuleServ" +
            "ice/GetCustomerByCode", ReplyAction="LightstoneApp.DistributedServices.MainModuleService/IMainModuleServ" +
            "ice/GetCustomerByCodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LightstoneApp.Presentation.Windows.WPF.ServiceAgents.Proxies.MainModule.ServiceError), Action="LightstoneApp.DistributedServices.MainModuleService/IMainModuleServ" +
            "ice/GetCustomerByCodeServiceErrorFault", Name="ServiceError", Namespace="LightstoneApp.DistributedServices.Core")]
        LightstoneApp.Domain.MainModule.Entities.Customer GetCustomerByCode(string customerCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="LightstoneApp.DistributedServices.MainModuleService/IMainModuleServ" +
            "ice/ChangeCustomer", ReplyAction="LightstoneApp.DistributedServices.MainModuleService/IMainModuleServ" +
            "ice/ChangeCustomerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LightstoneApp.Presentation.Windows.WPF.ServiceAgents.Proxies.MainModule.ServiceError), Action="LightstoneApp.DistributedServices.MainModuleService/IMainModuleServ" +
            "ice/ChangeCustomerServiceErrorFault", Name="ServiceError", Namespace="LightstoneApp.DistributedServices.Core")]
        void ChangeCustomer(LightstoneApp.Domain.MainModule.Entities.Customer customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="LightstoneApp.DistributedServices.MainModuleService/IMainModuleServ" +
            "ice/AddCustomer", ReplyAction="LightstoneApp.DistributedServices.MainModuleService/IMainModuleServ" +
            "ice/AddCustomerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LightstoneApp.Presentation.Windows.WPF.ServiceAgents.Proxies.MainModule.ServiceError), Action="LightstoneApp.DistributedServices.MainModuleService/IMainModuleServ" +
            "ice/AddCustomerServiceErrorFault", Name="ServiceError", Namespace="LightstoneApp.DistributedServices.Core")]
        void AddCustomer(LightstoneApp.Domain.MainModule.Entities.Customer customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="LightstoneApp.DistributedServices.MainModuleService/IMainModuleServ" +
            "ice/RemoveCustomer", ReplyAction="LightstoneApp.DistributedServices.MainModuleService/IMainModuleServ" +
            "ice/RemoveCustomerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LightstoneApp.Presentation.Windows.WPF.ServiceAgents.Proxies.MainModule.ServiceError), Action="LightstoneApp.DistributedServices.MainModuleService/IMainModuleServ" +
            "ice/RemoveCustomerServiceErrorFault", Name="ServiceError", Namespace="LightstoneApp.DistributedServices.Core")]
        void RemoveCustomer(LightstoneApp.Domain.MainModule.Entities.Customer customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="LightstoneApp.DistributedServices.MainModuleService/IMainModuleServ" +
            "ice/GetPagedCustomer", ReplyAction="LightstoneApp.DistributedServices.MainModuleService/IMainModuleServ" +
            "ice/GetPagedCustomerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LightstoneApp.Presentation.Windows.WPF.ServiceAgents.Proxies.MainModule.ServiceError), Action="LightstoneApp.DistributedServices.MainModuleService/IMainModuleServ" +
            "ice/GetPagedCustomerServiceErrorFault", Name="ServiceError", Namespace="LightstoneApp.DistributedServices.Core")]
        System.Collections.Generic.List<LightstoneApp.Domain.MainModule.Entities.Customer> GetPagedCustomer(LightstoneApp.Presentation.Windows.WPF.ServiceAgents.Proxies.MainModule.PagedCriteria pagedCriteria);
        
        [System.ServiceModel.OperationContractAttribute(Action="LightstoneApp.DistributedServices.MainModuleService/IMainModuleServ" +
            "ice/GetPagedCountries", ReplyAction="LightstoneApp.DistributedServices.MainModuleService/IMainModuleServ" +
            "ice/GetPagedCountriesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LightstoneApp.Presentation.Windows.WPF.ServiceAgents.Proxies.MainModule.ServiceError), Action="LightstoneApp.DistributedServices.MainModuleService/IMainModuleServ" +
            "ice/GetPagedCountriesServiceErrorFault", Name="ServiceError", Namespace="LightstoneApp.DistributedServices.Core")]
        System.Collections.Generic.List<LightstoneApp.Domain.MainModule.Entities.Country> GetPagedCountries(LightstoneApp.Presentation.Windows.WPF.ServiceAgents.Proxies.MainModule.PagedCriteria pagedCriteria);
        
        [System.ServiceModel.OperationContractAttribute(Action="LightstoneApp.DistributedServices.MainModuleService/IMainModuleServ" +
            "ice/GetCountriesByName", ReplyAction="LightstoneApp.DistributedServices.MainModuleService/IMainModuleServ" +
            "ice/GetCountriesByNameResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LightstoneApp.Presentation.Windows.WPF.ServiceAgents.Proxies.MainModule.ServiceError), Action="LightstoneApp.DistributedServices.MainModuleService/IMainModuleServ" +
            "ice/GetCountriesByNameServiceErrorFault", Name="ServiceError", Namespace="LightstoneApp.DistributedServices.Core")]
        System.Collections.Generic.List<LightstoneApp.Domain.MainModule.Entities.Country> GetCountriesByName(string countryName);
        
        [System.ServiceModel.OperationContractAttribute(Action="LightstoneApp.DistributedServices.MainModuleService/IMainModuleServ" +
            "ice/GetPagedProducts", ReplyAction="LightstoneApp.DistributedServices.MainModuleService/IMainModuleServ" +
            "ice/GetPagedProductsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LightstoneApp.Presentation.Windows.WPF.ServiceAgents.Proxies.MainModule.ServiceError), Action="LightstoneApp.DistributedServices.MainModuleService/IMainModuleServ" +
            "ice/GetPagedProductsServiceErrorFault", Name="ServiceError", Namespace="LightstoneApp.DistributedServices.Core")]
        System.Collections.Generic.List<LightstoneApp.Domain.MainModule.Entities.Product> GetPagedProducts(LightstoneApp.Presentation.Windows.WPF.ServiceAgents.Proxies.MainModule.PagedCriteria pagedCriteria);
        
        [System.ServiceModel.OperationContractAttribute(Action="LightstoneApp.DistributedServices.MainModuleService/IMainModuleServ" +
            "ice/GetProductByPublisherInformation", ReplyAction="LightstoneApp.DistributedServices.MainModuleService/IMainModuleServ" +
            "ice/GetProductByPublisherInformationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LightstoneApp.Presentation.Windows.WPF.ServiceAgents.Proxies.MainModule.ServiceError), Action="LightstoneApp.DistributedServices.MainModuleService/IMainModuleServ" +
            "ice/GetProductByPublisherInformationServiceErrorFault", Name="ServiceError", Namespace="LightstoneApp.DistributedServices.Core")]
        System.Collections.Generic.List<LightstoneApp.Domain.MainModule.Entities.Product> GetProductByPublisherInformation(LightstoneApp.Presentation.Windows.WPF.ServiceAgents.Proxies.MainModule.PublisherInformation publisherInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="LightstoneApp.DistributedServices.MainModuleService/IMainModuleServ" +
            "ice/ChangeProduct", ReplyAction="LightstoneApp.DistributedServices.MainModuleService/IMainModuleServ" +
            "ice/ChangeProductResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LightstoneApp.Presentation.Windows.WPF.ServiceAgents.Proxies.MainModule.ServiceError), Action="LightstoneApp.DistributedServices.MainModuleService/IMainModuleServ" +
            "ice/ChangeProductServiceErrorFault", Name="ServiceError", Namespace="LightstoneApp.DistributedServices.Core")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(LightstoneApp.Domain.MainModule.Entities.Software))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(LightstoneApp.Domain.MainModule.Entities.Book))]
        void ChangeProduct(LightstoneApp.Domain.MainModule.Entities.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="LightstoneApp.DistributedServices.MainModuleService/IMainModuleServ" +
            "ice/AddProduct", ReplyAction="LightstoneApp.DistributedServices.MainModuleService/IMainModuleServ" +
            "ice/AddProductResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LightstoneApp.Presentation.Windows.WPF.ServiceAgents.Proxies.MainModule.ServiceError), Action="LightstoneApp.DistributedServices.MainModuleService/IMainModuleServ" +
            "ice/AddProductServiceErrorFault", Name="ServiceError", Namespace="LightstoneApp.DistributedServices.Core")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(LightstoneApp.Domain.MainModule.Entities.Software))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(LightstoneApp.Domain.MainModule.Entities.Book))]
        void AddProduct(LightstoneApp.Domain.MainModule.Entities.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="LightstoneApp.DistributedServices.MainModuleService/IMainModuleServ" +
            "ice/GetOrdersByOrderInformation", ReplyAction="LightstoneApp.DistributedServices.MainModuleService/IMainModuleServ" +
            "ice/GetOrdersByOrderInformationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LightstoneApp.Presentation.Windows.WPF.ServiceAgents.Proxies.MainModule.ServiceError), Action="LightstoneApp.DistributedServices.MainModuleService/IMainModuleServ" +
            "ice/GetOrdersByOrderInformationServiceErrorFault", Name="ServiceError", Namespace="LightstoneApp.DistributedServices.Core")]
        System.Collections.Generic.List<LightstoneApp.Domain.MainModule.Entities.Order> GetOrdersByOrderInformation(LightstoneApp.Presentation.Windows.WPF.ServiceAgents.Proxies.MainModule.OrderInformation orderInformation);
        
        [System.ServiceModel.OperationContractAttribute(Action="LightstoneApp.DistributedServices.MainModuleService/IMainModuleServ" +
            "ice/GetOrdersByDates", ReplyAction="LightstoneApp.DistributedServices.MainModuleService/IMainModuleServ" +
            "ice/GetOrdersByDatesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LightstoneApp.Presentation.Windows.WPF.ServiceAgents.Proxies.MainModule.ServiceError), Action="LightstoneApp.DistributedServices.MainModuleService/IMainModuleServ" +
            "ice/GetOrdersByDatesServiceErrorFault", Name="ServiceError", Namespace="LightstoneApp.DistributedServices.Core")]
        System.Collections.Generic.List<LightstoneApp.Domain.MainModule.Entities.Order> GetOrdersByDates(System.Nullable<System.DateTime> fromDate, System.Nullable<System.DateTime> toDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="LightstoneApp.DistributedServices.MainModuleService/IMainModuleServ" +
            "ice/GetPagedOrders", ReplyAction="LightstoneApp.DistributedServices.MainModuleService/IMainModuleServ" +
            "ice/GetPagedOrdersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LightstoneApp.Presentation.Windows.WPF.ServiceAgents.Proxies.MainModule.ServiceError), Action="LightstoneApp.DistributedServices.MainModuleService/IMainModuleServ" +
            "ice/GetPagedOrdersServiceErrorFault", Name="ServiceError", Namespace="LightstoneApp.DistributedServices.Core")]
        System.Collections.Generic.List<LightstoneApp.Domain.MainModule.Entities.Order> GetPagedOrders(LightstoneApp.Presentation.Windows.WPF.ServiceAgents.Proxies.MainModule.PagedCriteria pagedCriteria);
        
        [System.ServiceModel.OperationContractAttribute(Action="LightstoneApp.DistributedServices.MainModuleService/IMainModuleServ" +
            "ice/GetOrdersByShippingData", ReplyAction="LightstoneApp.DistributedServices.MainModuleService/IMainModuleServ" +
            "ice/GetOrdersByShippingDataResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LightstoneApp.Presentation.Windows.WPF.ServiceAgents.Proxies.MainModule.ServiceError), Action="LightstoneApp.DistributedServices.MainModuleService/IMainModuleServ" +
            "ice/GetOrdersByShippingDataServiceErrorFault", Name="ServiceError", Namespace="LightstoneApp.DistributedServices.Core")]
        System.Collections.Generic.List<LightstoneApp.Domain.MainModule.Entities.Order> GetOrdersByShippingData(LightstoneApp.Presentation.Windows.WPF.ServiceAgents.Proxies.MainModule.ShippingInformation shippingData);
        
        [System.ServiceModel.OperationContractAttribute(Action="LightstoneApp.DistributedServices.MainModuleService/IMainModuleServ" +
            "ice/ChangeOrder", ReplyAction="LightstoneApp.DistributedServices.MainModuleService/IMainModuleServ" +
            "ice/ChangeOrderResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LightstoneApp.Presentation.Windows.WPF.ServiceAgents.Proxies.MainModule.ServiceError), Action="LightstoneApp.DistributedServices.MainModuleService/IMainModuleServ" +
            "ice/ChangeOrderServiceErrorFault", Name="ServiceError", Namespace="LightstoneApp.DistributedServices.Core")]
        void ChangeOrder(LightstoneApp.Domain.MainModule.Entities.Order order);
        
        [System.ServiceModel.OperationContractAttribute(Action="LightstoneApp.DistributedServices.MainModuleService/IMainModuleServ" +
            "ice/AddOrder", ReplyAction="LightstoneApp.DistributedServices.MainModuleService/IMainModuleServ" +
            "ice/AddOrderResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(LightstoneApp.Presentation.Windows.WPF.ServiceAgents.Proxies.MainModule.ServiceError), Action="LightstoneApp.DistributedServices.MainModuleService/IMainModuleServ" +
            "ice/AddOrderServiceErrorFault", Name="ServiceError", Namespace="LightstoneApp.DistributedServices.Core")]
        void AddOrder(LightstoneApp.Domain.MainModule.Entities.Order order);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMainModuleServiceChannel : LightstoneApp.Presentation.Windows.WPF.ServiceAgents.Proxies.MainModule.IMainModuleService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MainModuleServiceClient : System.ServiceModel.ClientBase<LightstoneApp.Presentation.Windows.WPF.ServiceAgents.Proxies.MainModule.IMainModuleService>, LightstoneApp.Presentation.Windows.WPF.ServiceAgents.Proxies.MainModule.IMainModuleService {
        
        public MainModuleServiceClient() {
        }
        
        public MainModuleServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MainModuleServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MainModuleServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MainModuleServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<LightstoneApp.Domain.MainModule.Entities.BankAccount> GetPagedBankAccounts(LightstoneApp.Presentation.Windows.WPF.ServiceAgents.Proxies.MainModule.PagedCriteria pagedCriteria) {
            return base.Channel.GetPagedBankAccounts(pagedCriteria);
        }
        
        public System.Collections.Generic.List<LightstoneApp.Domain.MainModule.Entities.BankAccount> GetBankAccounts(LightstoneApp.Presentation.Windows.WPF.ServiceAgents.Proxies.MainModule.BankAccountInformation bankAccountInformation) {
            return base.Channel.GetBankAccounts(bankAccountInformation);
        }
        
        public LightstoneApp.Domain.MainModule.Entities.BankAccount GetBankAccountByNumber(string bankAccountNumber) {
            return base.Channel.GetBankAccountByNumber(bankAccountNumber);
        }
        
        public void ChangeBankAccount(LightstoneApp.Domain.MainModule.Entities.BankAccount bankAccount) {
            base.Channel.ChangeBankAccount(bankAccount);
        }
        
        public void AddBankAccount(LightstoneApp.Domain.MainModule.Entities.BankAccount bankAccount) {
            base.Channel.AddBankAccount(bankAccount);
        }
        
        public System.Collections.Generic.List<LightstoneApp.Domain.MainModule.Entities.BankTransfer> GetPagedTransfers(LightstoneApp.Presentation.Windows.WPF.ServiceAgents.Proxies.MainModule.PagedCriteria pagedCriteria) {
            return base.Channel.GetPagedTransfers(pagedCriteria);
        }
        
        public void PerformBankTransfer(LightstoneApp.Presentation.Windows.WPF.ServiceAgents.Proxies.MainModule.TransferInformation transferInformation) {
            base.Channel.PerformBankTransfer(transferInformation);
        }
        
        public LightstoneApp.Domain.MainModule.Entities.Customer GetCustomerByCode(string customerCode) {
            return base.Channel.GetCustomerByCode(customerCode);
        }
        
        public void ChangeCustomer(LightstoneApp.Domain.MainModule.Entities.Customer customer) {
            base.Channel.ChangeCustomer(customer);
        }
        
        public void AddCustomer(LightstoneApp.Domain.MainModule.Entities.Customer customer) {
            base.Channel.AddCustomer(customer);
        }
        
        public void RemoveCustomer(LightstoneApp.Domain.MainModule.Entities.Customer customer) {
            base.Channel.RemoveCustomer(customer);
        }
        
        public System.Collections.Generic.List<LightstoneApp.Domain.MainModule.Entities.Customer> GetPagedCustomer(LightstoneApp.Presentation.Windows.WPF.ServiceAgents.Proxies.MainModule.PagedCriteria pagedCriteria) {
            return base.Channel.GetPagedCustomer(pagedCriteria);
        }
        
        public System.Collections.Generic.List<LightstoneApp.Domain.MainModule.Entities.Country> GetPagedCountries(LightstoneApp.Presentation.Windows.WPF.ServiceAgents.Proxies.MainModule.PagedCriteria pagedCriteria) {
            return base.Channel.GetPagedCountries(pagedCriteria);
        }
        
        public System.Collections.Generic.List<LightstoneApp.Domain.MainModule.Entities.Country> GetCountriesByName(string countryName) {
            return base.Channel.GetCountriesByName(countryName);
        }
        
        public System.Collections.Generic.List<LightstoneApp.Domain.MainModule.Entities.Product> GetPagedProducts(LightstoneApp.Presentation.Windows.WPF.ServiceAgents.Proxies.MainModule.PagedCriteria pagedCriteria) {
            return base.Channel.GetPagedProducts(pagedCriteria);
        }
        
        public System.Collections.Generic.List<LightstoneApp.Domain.MainModule.Entities.Product> GetProductByPublisherInformation(LightstoneApp.Presentation.Windows.WPF.ServiceAgents.Proxies.MainModule.PublisherInformation publisherInformation) {
            return base.Channel.GetProductByPublisherInformation(publisherInformation);
        }
        
        public void ChangeProduct(LightstoneApp.Domain.MainModule.Entities.Product product) {
            base.Channel.ChangeProduct(product);
        }
        
        public void AddProduct(LightstoneApp.Domain.MainModule.Entities.Product product) {
            base.Channel.AddProduct(product);
        }
        
        public System.Collections.Generic.List<LightstoneApp.Domain.MainModule.Entities.Order> GetOrdersByOrderInformation(LightstoneApp.Presentation.Windows.WPF.ServiceAgents.Proxies.MainModule.OrderInformation orderInformation) {
            return base.Channel.GetOrdersByOrderInformation(orderInformation);
        }
        
        public System.Collections.Generic.List<LightstoneApp.Domain.MainModule.Entities.Order> GetOrdersByDates(System.Nullable<System.DateTime> fromDate, System.Nullable<System.DateTime> toDate) {
            return base.Channel.GetOrdersByDates(fromDate, toDate);
        }
        
        public System.Collections.Generic.List<LightstoneApp.Domain.MainModule.Entities.Order> GetPagedOrders(LightstoneApp.Presentation.Windows.WPF.ServiceAgents.Proxies.MainModule.PagedCriteria pagedCriteria) {
            return base.Channel.GetPagedOrders(pagedCriteria);
        }
        
        public System.Collections.Generic.List<LightstoneApp.Domain.MainModule.Entities.Order> GetOrdersByShippingData(LightstoneApp.Presentation.Windows.WPF.ServiceAgents.Proxies.MainModule.ShippingInformation shippingData) {
            return base.Channel.GetOrdersByShippingData(shippingData);
        }
        
        public void ChangeOrder(LightstoneApp.Domain.MainModule.Entities.Order order) {
            base.Channel.ChangeOrder(order);
        }
        
        public void AddOrder(LightstoneApp.Domain.MainModule.Entities.Order order) {
            base.Channel.AddOrder(order);
        }
    }
}
