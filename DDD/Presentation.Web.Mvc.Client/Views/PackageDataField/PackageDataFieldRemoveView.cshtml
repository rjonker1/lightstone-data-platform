@using LightstoneApp.Presentation.Web.Mvc.Client.Resources

@model LightstoneApp.Presentation.Web.Mvc.Client.ViewModels.PackageDataFieldCrudViewModel

@{ 
	ViewBag.Title = "Remove PackageDataField"; 
	}

<h2>@ViewBag.Title</h2>

<h3>@Html.Label(PresentationResources.DeleteSure)</h3>
@using (Html.BeginForm()) {
	@Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

	<fieldset>
		<legend>PackageDataField</legend>

			@Html.HiddenFor(model => model.PackageDataField.Id)

		<div class="newline">
			<div class="label">
				@Html.DisplayNameFor(model => model.PackageDataField.DataFieldId):
			</div>
			<div class="field">
				@Html.DisplayFor(model => model.PackageDataField.DataFieldId)
			</div>
			<div class="label">
				@Html.DisplayNameFor(model => model.PackageDataField.PackageId):
			</div>
			<div class="field">
				@Html.DisplayFor(model => model.PackageDataField.PackageId)
			</div>
		</div>
		<div class="newline">
			<div class="label">
				@Html.DisplayNameFor(model => model.PackageDataField.Priority):
			</div>
			<div class="field">
				@Html.DisplayFor(model => model.PackageDataField.Priority)
			</div>
			<div class="label">
				@Html.DisplayNameFor(model => model.PackageDataField.Selected):
			</div>
			<div class="field">
				@Html.DisplayFor(model => model.PackageDataField.Selected)
			</div>
		</div>
		<div class="newline">
			<div class="label">
				@Html.DisplayNameFor(model => model.PackageDataField.UnifiedName):
			</div>
			<div class="field">
				@Html.DisplayFor(model => model.PackageDataField.UnifiedName)
			</div>
		</div>
		<div class="buttons">
			<p>
				<input type="submit" name="remove" value="@PresentationResources.Remove" />
			</p>
		</div>		
	</fieldset>
}

<div>
	@Html.ActionLink(PresentationResources.GoBack, "Find")
</div>
