<?xml version="1.0"?>
<doc>
    <assembly>
        <name>LightstoneApp.Infrastructure.Data.Core.Fakes</name>
    </assembly>
    <members>
        <member name="T:LightstoneApp.Infrastructure.Data.Core.Commits.Fakes.ShimCommit">
            <summary>Shim type of LightstoneApp.Infrastructure.Data.Core.Commits.Commit</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Commits.Fakes.ShimCommit.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Commits.Fakes.ShimCommit.#ctor(LightstoneApp.Infrastructure.Data.Core.Commits.Commit)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Commits.Fakes.ShimCommit.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Commits.Fakes.ShimCommit.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Commits.Fakes.ShimCommit.AggregateIdentifierGet">
            <summary>Sets the shim of Commit.get_AggregateIdentifier()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Commits.Fakes.ShimCommit.AggregateIdentifierSetString">
            <summary>Sets the shim of Commit.set_AggregateIdentifier(String value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Commits.Fakes.ShimCommit.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Commits.Fakes.ShimCommit.Constructor">
            <summary>Sets the shim of Commit.Commit()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Commits.Fakes.ShimCommit.ConstructorGuidStringStringIEnumerableOfIDomainEventString">
            <summary>Sets the shim of Commit.Commit(Guid transactionIdentifier, String correlationId, String aggregateId, IEnumerable`1&lt;IDomainEvent&gt; uncommittedEvents, String userAccount)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Commits.Fakes.ShimCommit.CorrelationIdGet">
            <summary>Sets the shim of Commit.get_CorrelationId()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Commits.Fakes.ShimCommit.CorrelationIdSetString">
            <summary>Sets the shim of Commit.set_CorrelationId(String value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Commits.Fakes.ShimCommit.CreatedOnGet">
            <summary>Sets the shim of Commit.get_CreatedOn()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Commits.Fakes.ShimCommit.CreatedOnSetDateTimeOffset">
            <summary>Sets the shim of Commit.set_CreatedOn(DateTimeOffset value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Commits.Fakes.ShimCommit.EventsGet">
            <summary>Sets the shim of Commit.get_Events()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Commits.Fakes.ShimCommit.EventsSetIEnumerableOfIDomainEvent">
            <summary>Sets the shim of Commit.set_Events(IEnumerable`1&lt;IDomainEvent&gt; value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Commits.Fakes.ShimCommit.IdGet">
            <summary>Sets the shim of Commit.get_Id()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Commits.Fakes.ShimCommit.IdSetString">
            <summary>Sets the shim of Commit.set_Id(String value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Commits.Fakes.ShimCommit.IsDispatchedGet">
            <summary>Sets the shim of Commit.get_IsDispatched()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Commits.Fakes.ShimCommit.IsDispatchedSetBoolean">
            <summary>Sets the shim of Commit.set_IsDispatched(Boolean value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Commits.Fakes.ShimCommit.MarkAsDispatched">
            <summary>Sets the shim of Commit.MarkAsDispatched()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Commits.Fakes.ShimCommit.TransactionIdentifierGet">
            <summary>Sets the shim of Commit.get_TransactionIdentifier()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Commits.Fakes.ShimCommit.TransactionIdentifierSetString">
            <summary>Sets the shim of Commit.set_TransactionIdentifier(String value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Commits.Fakes.ShimCommit.UserAccountGet">
            <summary>Sets the shim of Commit.get_UserAccount()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Commits.Fakes.ShimCommit.UserAccountSetString">
            <summary>Sets the shim of Commit.set_UserAccount(String value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Commits.Fakes.ShimCommit._set_Idb__0IDomainEvent">
            <summary>Sets the shim of Commit.&lt;set_Id&gt;b__0(IDomainEvent e)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Commits.Fakes.ShimCommit._set_Idb__1Int32IDomainEvent">
            <summary>Sets the shim of Commit.&lt;set_Id&gt;b__1(Int32 idx, IDomainEvent evt)</summary>
        </member>
        <member name="T:LightstoneApp.Infrastructure.Data.Core.Commits.Fakes.ShimCommit.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Commits.Fakes.ShimCommit.AllInstances.AggregateIdentifierGet">
            <summary>Sets the shim of Commit.get_AggregateIdentifier()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Commits.Fakes.ShimCommit.AllInstances.AggregateIdentifierSetString">
            <summary>Sets the shim of Commit.set_AggregateIdentifier(String value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Commits.Fakes.ShimCommit.AllInstances.CorrelationIdGet">
            <summary>Sets the shim of Commit.get_CorrelationId()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Commits.Fakes.ShimCommit.AllInstances.CorrelationIdSetString">
            <summary>Sets the shim of Commit.set_CorrelationId(String value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Commits.Fakes.ShimCommit.AllInstances.CreatedOnGet">
            <summary>Sets the shim of Commit.get_CreatedOn()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Commits.Fakes.ShimCommit.AllInstances.CreatedOnSetDateTimeOffset">
            <summary>Sets the shim of Commit.set_CreatedOn(DateTimeOffset value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Commits.Fakes.ShimCommit.AllInstances.EventsGet">
            <summary>Sets the shim of Commit.get_Events()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Commits.Fakes.ShimCommit.AllInstances.EventsSetIEnumerableOfIDomainEvent">
            <summary>Sets the shim of Commit.set_Events(IEnumerable`1&lt;IDomainEvent&gt; value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Commits.Fakes.ShimCommit.AllInstances.IdGet">
            <summary>Sets the shim of Commit.get_Id()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Commits.Fakes.ShimCommit.AllInstances.IdSetString">
            <summary>Sets the shim of Commit.set_Id(String value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Commits.Fakes.ShimCommit.AllInstances.IsDispatchedGet">
            <summary>Sets the shim of Commit.get_IsDispatched()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Commits.Fakes.ShimCommit.AllInstances.IsDispatchedSetBoolean">
            <summary>Sets the shim of Commit.set_IsDispatched(Boolean value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Commits.Fakes.ShimCommit.AllInstances.MarkAsDispatched">
            <summary>Sets the shim of Commit.MarkAsDispatched()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Commits.Fakes.ShimCommit.AllInstances.TransactionIdentifierGet">
            <summary>Sets the shim of Commit.get_TransactionIdentifier()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Commits.Fakes.ShimCommit.AllInstances.TransactionIdentifierSetString">
            <summary>Sets the shim of Commit.set_TransactionIdentifier(String value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Commits.Fakes.ShimCommit.AllInstances.UserAccountGet">
            <summary>Sets the shim of Commit.get_UserAccount()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Commits.Fakes.ShimCommit.AllInstances.UserAccountSetString">
            <summary>Sets the shim of Commit.set_UserAccount(String value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Commits.Fakes.ShimCommit.AllInstances._set_Idb__1Int32IDomainEvent">
            <summary>Sets the shim of Commit.&lt;set_Id&gt;b__1(Int32 idx, IDomainEvent evt)</summary>
        </member>
        <member name="T:LightstoneApp.Infrastructure.Data.Core.Commits.Fakes.ShimCommit.ShimFactory">
            <summary>Shim type of LightstoneApp.Infrastructure.Data.Core.Commits.Commit+Factory</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Commits.Fakes.ShimCommit.ShimFactory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Commits.Fakes.ShimCommit.ShimFactory.#ctor(LightstoneApp.Infrastructure.Data.Core.Commits.Commit.Factory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Commits.Fakes.ShimCommit.ShimFactory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Commits.Fakes.ShimCommit.ShimFactory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Commits.Fakes.ShimCommit.ShimFactory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Commits.Fakes.ShimCommit.ShimFactory.Constructor">
            <summary>Sets the shim of Factory.Factory()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Commits.Fakes.ShimCommit.ShimFactory.CreateForGuidStringIAggregateString">
            <summary>Sets the shim of Factory.CreateFor(Guid transactionIdentifier, String correlationId, IAggregate aggregate, String userAccount)</summary>
        </member>
        <member name="T:LightstoneApp.Infrastructure.Data.Core.Commits.Fakes.ShimCommit.ShimFactory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Commits.Fakes.ShimCommit.ShimFactory.AllInstances.CreateForGuidStringIAggregateString">
            <summary>Sets the shim of Factory.CreateFor(Guid transactionIdentifier, String correlationId, IAggregate aggregate, String userAccount)</summary>
        </member>
        <member name="T:LightstoneApp.Infrastructure.Data.Core.Events.Fakes.ShimMessage">
            <summary>Shim type of LightstoneApp.Infrastructure.Data.Core.Events.Message</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Events.Fakes.ShimMessage.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Events.Fakes.ShimMessage.#ctor(LightstoneApp.Infrastructure.Data.Core.Events.Message)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Events.Fakes.ShimMessage.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Events.Fakes.ShimMessage.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Events.Fakes.ShimMessage.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Events.Fakes.ShimMessage.BodyGet">
            <summary>Sets the shim of Message.get_Body()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Events.Fakes.ShimMessage.BodySetByteArray">
            <summary>Sets the shim of Message.set_Body(Byte[] value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Events.Fakes.ShimMessage.BodyStreamGet">
            <summary>Sets the shim of Message.get_BodyStream()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Events.Fakes.ShimMessage.Constructor">
            <summary>Sets the shim of Message.Message()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Events.Fakes.ShimMessage.ConversationGroupIdGet">
            <summary>Sets the shim of Message.get_ConversationGroupId()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Events.Fakes.ShimMessage.ConversationGroupIdSetGuid">
            <summary>Sets the shim of Message.set_ConversationGroupId(Guid value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Events.Fakes.ShimMessage.ConversationHandleGet">
            <summary>Sets the shim of Message.get_ConversationHandle()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Events.Fakes.ShimMessage.ConversationHandleSetGuid">
            <summary>Sets the shim of Message.set_ConversationHandle(Guid value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Events.Fakes.ShimMessage.LoadSqlDataReader">
            <summary>Sets the shim of Message.Load(SqlDataReader reader)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Events.Fakes.ShimMessage.MessageSequenceNumberGet">
            <summary>Sets the shim of Message.get_MessageSequenceNumber()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Events.Fakes.ShimMessage.MessageSequenceNumberSetInt64">
            <summary>Sets the shim of Message.set_MessageSequenceNumber(Int64 value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Events.Fakes.ShimMessage.MessageTypeNameGet">
            <summary>Sets the shim of Message.get_MessageTypeName()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Events.Fakes.ShimMessage.MessageTypeNameSetString">
            <summary>Sets the shim of Message.set_MessageTypeName(String value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Events.Fakes.ShimMessage.ServiceContractNameGet">
            <summary>Sets the shim of Message.get_ServiceContractName()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Events.Fakes.ShimMessage.ServiceContractNameSetString">
            <summary>Sets the shim of Message.set_ServiceContractName(String value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Events.Fakes.ShimMessage.ServiceNameGet">
            <summary>Sets the shim of Message.get_ServiceName()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Events.Fakes.ShimMessage.ServiceNameSetString">
            <summary>Sets the shim of Message.set_ServiceName(String value)</summary>
        </member>
        <member name="T:LightstoneApp.Infrastructure.Data.Core.Events.Fakes.ShimMessage.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Events.Fakes.ShimMessage.AllInstances.BodyGet">
            <summary>Sets the shim of Message.get_Body()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Events.Fakes.ShimMessage.AllInstances.BodySetByteArray">
            <summary>Sets the shim of Message.set_Body(Byte[] value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Events.Fakes.ShimMessage.AllInstances.BodyStreamGet">
            <summary>Sets the shim of Message.get_BodyStream()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Events.Fakes.ShimMessage.AllInstances.ConversationGroupIdGet">
            <summary>Sets the shim of Message.get_ConversationGroupId()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Events.Fakes.ShimMessage.AllInstances.ConversationGroupIdSetGuid">
            <summary>Sets the shim of Message.set_ConversationGroupId(Guid value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Events.Fakes.ShimMessage.AllInstances.ConversationHandleGet">
            <summary>Sets the shim of Message.get_ConversationHandle()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Events.Fakes.ShimMessage.AllInstances.ConversationHandleSetGuid">
            <summary>Sets the shim of Message.set_ConversationHandle(Guid value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Events.Fakes.ShimMessage.AllInstances.MessageSequenceNumberGet">
            <summary>Sets the shim of Message.get_MessageSequenceNumber()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Events.Fakes.ShimMessage.AllInstances.MessageSequenceNumberSetInt64">
            <summary>Sets the shim of Message.set_MessageSequenceNumber(Int64 value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Events.Fakes.ShimMessage.AllInstances.MessageTypeNameGet">
            <summary>Sets the shim of Message.get_MessageTypeName()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Events.Fakes.ShimMessage.AllInstances.MessageTypeNameSetString">
            <summary>Sets the shim of Message.set_MessageTypeName(String value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Events.Fakes.ShimMessage.AllInstances.ServiceContractNameGet">
            <summary>Sets the shim of Message.get_ServiceContractName()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Events.Fakes.ShimMessage.AllInstances.ServiceContractNameSetString">
            <summary>Sets the shim of Message.set_ServiceContractName(String value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Events.Fakes.ShimMessage.AllInstances.ServiceNameGet">
            <summary>Sets the shim of Message.get_ServiceName()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Events.Fakes.ShimMessage.AllInstances.ServiceNameSetString">
            <summary>Sets the shim of Message.set_ServiceName(String value)</summary>
        </member>
        <member name="T:LightstoneApp.Infrastructure.Data.Core.Events.Fakes.ShimServiceBrokerWrapper">
            <summary>Shim type of LightstoneApp.Infrastructure.Data.Core.Events.ServiceBrokerWrapper</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Events.Fakes.ShimServiceBrokerWrapper.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Events.Fakes.ShimServiceBrokerWrapper.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Events.Fakes.ShimServiceBrokerWrapper.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Events.Fakes.ShimServiceBrokerWrapper.BeginConversationIDbTransactionStringStringString">
            <summary>Sets the shim of ServiceBrokerWrapper.BeginConversation(IDbTransaction transaction, String initiatorServiceName, String targetServiceName, String messageContractName)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Events.Fakes.ShimServiceBrokerWrapper.BeginConversationIDbTransactionStringStringStringBoolean">
            <summary>Sets the shim of ServiceBrokerWrapper.BeginConversation(IDbTransaction transaction, String initiatorServiceName, String targetServiceName, String messageContractName, Boolean encryption)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Events.Fakes.ShimServiceBrokerWrapper.BeginConversationIDbTransactionStringStringStringInt32">
            <summary>Sets the shim of ServiceBrokerWrapper.BeginConversation(IDbTransaction transaction, String initiatorServiceName, String targetServiceName, String messageContractName, Int32 lifetime)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Events.Fakes.ShimServiceBrokerWrapper.BeginConversationIDbTransactionStringStringStringInt32Boolean">
            <summary>Sets the shim of ServiceBrokerWrapper.BeginConversation(IDbTransaction transaction, String initiatorServiceName, String targetServiceName, String messageContractName, Int32 lifetime, Boolean encryption)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Events.Fakes.ShimServiceBrokerWrapper.BeginConversationInternalIDbTransactionStringStringStringNullableOfInt32NullableOfBoolean">
            <summary>Sets the shim of ServiceBrokerWrapper.BeginConversationInternal(IDbTransaction transaction, String initiatorServiceName, String targetServiceName, String messageContractName, Nullable`1&lt;Int32&gt; lifetime, Nullable`1&lt;Boolean&gt; encryption)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Events.Fakes.ShimServiceBrokerWrapper.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Events.Fakes.ShimServiceBrokerWrapper.EndConversationIDbTransactionGuid">
            <summary>Sets the shim of ServiceBrokerWrapper.EndConversation(IDbTransaction transaction, Guid conversationHandle)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Events.Fakes.ShimServiceBrokerWrapper.EndConversationIDbTransactionGuidBoolean">
            <summary>Sets the shim of ServiceBrokerWrapper.EndConversation(IDbTransaction transaction, Guid conversationHandle, Boolean withCleanup)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Events.Fakes.ShimServiceBrokerWrapper.EndConversationIDbTransactionGuidInt32String">
            <summary>Sets the shim of ServiceBrokerWrapper.EndConversation(IDbTransaction transaction, Guid conversationHandle, Int32 errorCode, String errorDescription)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Events.Fakes.ShimServiceBrokerWrapper.EndConversationInternalIDbTransactionGuidBooleanNullableOfInt32StringBoolean">
            <summary>Sets the shim of ServiceBrokerWrapper.EndConversationInternal(IDbTransaction transaction, Guid conversationHandle, Boolean withError, Nullable`1&lt;Int32&gt; errorCode, String errorDescription, Boolean withCleanup)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Events.Fakes.ShimServiceBrokerWrapper.EnsureSqlTransactionIDbTransaction">
            <summary>Sets the shim of ServiceBrokerWrapper.EnsureSqlTransaction(IDbTransaction transaction)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Events.Fakes.ShimServiceBrokerWrapper.GetBytesString">
            <summary>Sets the shim of ServiceBrokerWrapper.GetBytes(String str)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Events.Fakes.ShimServiceBrokerWrapper.GetStringByteArray">
            <summary>Sets the shim of ServiceBrokerWrapper.GetString(Byte[] bytes)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Events.Fakes.ShimServiceBrokerWrapper.QueryMessageCountInternalSqlTransactionStringString">
            <summary>Sets the shim of ServiceBrokerWrapper.QueryMessageCountInternal(SqlTransaction transaction, String queueName, String messageType)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Events.Fakes.ShimServiceBrokerWrapper.QueryMessageCountSqlTransactionStringString">
            <summary>Sets the shim of ServiceBrokerWrapper.QueryMessageCount(SqlTransaction transaction, String queueName, String messageType)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Events.Fakes.ShimServiceBrokerWrapper.ReceiveIDbTransactionString">
            <summary>Sets the shim of ServiceBrokerWrapper.Receive(IDbTransaction transaction, String queueName)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Events.Fakes.ShimServiceBrokerWrapper.ReceiveIDbTransactionStringGuid">
            <summary>Sets the shim of ServiceBrokerWrapper.Receive(IDbTransaction transaction, String queueName, Guid conversationHandle)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Events.Fakes.ShimServiceBrokerWrapper.ReceiveInternalIDbTransactionStringNullableOfGuidBooleanNullableOfInt32">
            <summary>Sets the shim of ServiceBrokerWrapper.ReceiveInternal(IDbTransaction transaction, String queueName, Nullable`1&lt;Guid&gt; conversationHandle, Boolean wait, Nullable`1&lt;Int32&gt; waitTimeout)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Events.Fakes.ShimServiceBrokerWrapper.SendIDbTransactionGuidString">
            <summary>Sets the shim of ServiceBrokerWrapper.Send(IDbTransaction transaction, Guid conversationHandle, String messageType)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Events.Fakes.ShimServiceBrokerWrapper.SendIDbTransactionGuidStringByteArray">
            <summary>Sets the shim of ServiceBrokerWrapper.Send(IDbTransaction transaction, Guid conversationHandle, String messageType, Byte[] body)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Events.Fakes.ShimServiceBrokerWrapper.SendInternalIDbTransactionGuidStringByteArray">
            <summary>Sets the shim of ServiceBrokerWrapper.SendInternal(IDbTransaction transaction, Guid conversationHandle, String messageType, Byte[] body)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Events.Fakes.ShimServiceBrokerWrapper.WaitAndReceiveIDbTransactionStringGuidInt32">
            <summary>Sets the shim of ServiceBrokerWrapper.WaitAndReceive(IDbTransaction transaction, String queueName, Guid conversationHandle, Int32 waitTimeout)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Events.Fakes.ShimServiceBrokerWrapper.WaitAndReceiveIDbTransactionStringInt32">
            <summary>Sets the shim of ServiceBrokerWrapper.WaitAndReceive(IDbTransaction transaction, String queueName, Int32 waitTimeout)</summary>
        </member>
        <member name="T:LightstoneApp.Infrastructure.Data.Core.Extensions.Fakes.ShimIQueryableExtensions">
            <summary>Shim type of LightstoneApp.Infrastructure.Data.Core.Extensions.IQueryableExtensions</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Extensions.Fakes.ShimIQueryableExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Extensions.Fakes.ShimIQueryableExtensions.AnalyzeExpressionPathOf2ExpressionOfFuncOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String})">
            <summary>Sets the shim of IQueryableExtensions.AnalyzeExpressionPath(Expression`1&lt;Func`2&lt;!!0,!!1&gt;&gt; expression)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Extensions.Fakes.ShimIQueryableExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Extensions.Fakes.ShimIQueryableExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Extensions.Fakes.ShimIQueryableExtensions.IncludeOf1IQueryableOfM0ExpressionOfFuncOfM0Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Linq.IQueryable{``0}})">
            <summary>Sets the shim of IQueryableExtensions.Include(IQueryable`1&lt;!!0&gt; queryable, Expression`1&lt;Func`2&lt;!!0,Object&gt;&gt; path)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Extensions.Fakes.ShimIQueryableExtensions.IncludeOf1IQueryableOfM0String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.String,System.Linq.IQueryable{``0}})">
            <summary>Sets the shim of IQueryableExtensions.Include(IQueryable`1&lt;!!0&gt; queryable, String path)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Extensions.Fakes.ShimIQueryableExtensions.PaginateOf2IQueryableOfM0ExpressionOfFuncOfM0M1Int32Int32Boolean``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Int32,System.Boolean,System.Linq.IQueryable{``0}})">
            <summary>Sets the shim of IQueryableExtensions.Paginate(IQueryable`1&lt;!!0&gt; queryable, Expression`1&lt;Func`2&lt;!!0,!!1&gt;&gt; orderBy, Int32 pageIndex, Int32 pageCount, Boolean ascending)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Extensions.Fakes.ShimIQueryableExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:LightstoneApp.Infrastructure.Data.Core.Extensions.Fakes.ShimListExtensions">
            <summary>Shim type of LightstoneApp.Infrastructure.Data.Core.Extensions.ListExtensions</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Extensions.Fakes.ShimListExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Extensions.Fakes.ShimListExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Extensions.Fakes.ShimListExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Extensions.Fakes.ShimListExtensions.ToMemorySetOf1ListOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{``0},LightstoneApp.Infrastructure.Data.Core.MemorySet{``0}})">
            <summary>Sets the shim of ListExtensions.ToMemorySet(List`1&lt;!!0&gt; list)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Extensions.Fakes.ShimListExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:LightstoneApp.Infrastructure.Data.Core.Extensions.Fakes.ShimObjectStateManagerExtensions">
            <summary>Shim type of LightstoneApp.Infrastructure.Data.Core.Extensions.ObjectStateManagerExtensions</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Extensions.Fakes.ShimObjectStateManagerExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Extensions.Fakes.ShimObjectStateManagerExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Extensions.Fakes.ShimObjectStateManagerExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Extensions.Fakes.ShimObjectStateManagerExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Extensions.Fakes.ShimObjectStateManagerExtensions.DumpAsHtmlObjectStateManager">
            <summary>Sets the shim of ObjectStateManagerExtensions.DumpAsHtml(ObjectStateManager manager)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Extensions.Fakes.ShimObjectStateManagerExtensions.DumpAsHtmlObjectStateManagerEntityKey">
            <summary>Sets the shim of ObjectStateManagerExtensions.DumpAsHtml(ObjectStateManager manager, EntityKey entityKey)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Extensions.Fakes.ShimObjectStateManagerExtensions.DumpObjectStateManager">
            <summary>Sets the shim of ObjectStateManagerExtensions.Dump(ObjectStateManager manager)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Extensions.Fakes.ShimObjectStateManagerExtensions.DumpObjectStateManagerEntityKey">
            <summary>Sets the shim of ObjectStateManagerExtensions.Dump(ObjectStateManager manager, EntityKey entityKey)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Extensions.Fakes.ShimObjectStateManagerExtensions.DumpObjectStateManagerIEnumerableOfObjectStateEntry">
            <summary>Sets the shim of ObjectStateManagerExtensions.Dump(ObjectStateManager manager, IEnumerable`1&lt;ObjectStateEntry&gt; objectStateEntries)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Extensions.Fakes.ShimObjectStateManagerExtensions.DumpObjectStateManagerIEnumerableOfObjectStateEntryEntityKeyBoolean">
            <summary>Sets the shim of ObjectStateManagerExtensions.Dump(ObjectStateManager manager, IEnumerable`1&lt;ObjectStateEntry&gt; objectStateEntries, EntityKey entityKey, Boolean asHtml)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Extensions.Fakes.ShimObjectStateManagerExtensions.ObjectStateEntryToStringObjectStateEntry">
            <summary>Sets the shim of ObjectStateManagerExtensions.ObjectStateEntryToString(ObjectStateEntry entry)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Extensions.Fakes.ShimObjectStateManagerExtensions.ObjectToStringObject">
            <summary>Sets the shim of ObjectStateManagerExtensions.ObjectToString(Object obj)</summary>
        </member>
        <member name="T:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimExtendedRepository`1">
            <summary>Shim type of LightstoneApp.Infrastructure.Data.Core.ExtendedRepository`1</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimExtendedRepository`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimExtendedRepository`1.#ctor(LightstoneApp.Infrastructure.Data.Core.ExtendedRepository{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimExtendedRepository`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimExtendedRepository`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimExtendedRepository`1.Bind(LightstoneApp.Domain.Core.IExtendedRepository{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimExtendedRepository`1.Bind(LightstoneApp.Domain.Core.IRepository{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimExtendedRepository`1.GetAllOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of ExtendedRepository`1.GetAll()</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimExtendedRepository`1.GetBySpecOf1ISpecificationOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{LightstoneApp.Domain.Core.Specification.ISpecification{``0},System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of ExtendedRepository`1.GetBySpec(ISpecification`1&lt;!!0&gt; specification)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimExtendedRepository`1.GetFilteredElementsOf1ExpressionOfFuncOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of ExtendedRepository`1.GetFilteredElements(Expression`1&lt;Func`2&lt;!!0,Boolean&gt;&gt; filter)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimExtendedRepository`1.GetFilteredElementsOf2ExpressionOfFuncOfM0BooleanExpressionOfFuncOfM0M1Boolean``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Boolean,System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of ExtendedRepository`1.GetFilteredElements(Expression`1&lt;Func`2&lt;!!0,Boolean&gt;&gt; filter, Expression`1&lt;Func`2&lt;!!0,!!1&gt;&gt; orderByExpression, Boolean ascending)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimExtendedRepository`1.GetPagedElementsOf2Int32Int32ExpressionOfFuncOfM0M1Boolean``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Boolean,System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of ExtendedRepository`1.GetPagedElements(Int32 pageIndex, Int32 pageCount, Expression`1&lt;Func`2&lt;!!0,!!1&gt;&gt; orderByExpression, Boolean ascending)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimExtendedRepository`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimExtendedRepository`1.ConstructorIQueryableUnitOfWorkITraceManager">
            <summary>Sets the shim of ExtendedRepository`1.ExtendedRepository`1(IQueryableUnitOfWork unitOfWork, ITraceManager traceManager)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimExtendedRepository`1.ModifyICollectionOfT0">
            <summary>Sets the shim of ExtendedRepository`1.Modify(ICollection`1&lt;!0&gt; items)</summary>
        </member>
        <member name="T:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimExtendedRepository`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimExtendedRepository`1.AllInstances.GetAllOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{LightstoneApp.Infrastructure.Data.Core.ExtendedRepository{`0},System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of ExtendedRepository`1.GetAll()</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimExtendedRepository`1.AllInstances.GetBySpecOf1ISpecificationOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{LightstoneApp.Infrastructure.Data.Core.ExtendedRepository{`0},LightstoneApp.Domain.Core.Specification.ISpecification{``0},System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of ExtendedRepository`1.GetBySpec(ISpecification`1&lt;!!0&gt; specification)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimExtendedRepository`1.AllInstances.GetFilteredElementsOf1ExpressionOfFuncOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{LightstoneApp.Infrastructure.Data.Core.ExtendedRepository{`0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of ExtendedRepository`1.GetFilteredElements(Expression`1&lt;Func`2&lt;!!0,Boolean&gt;&gt; filter)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimExtendedRepository`1.AllInstances.GetFilteredElementsOf2ExpressionOfFuncOfM0BooleanExpressionOfFuncOfM0M1Boolean``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{LightstoneApp.Infrastructure.Data.Core.ExtendedRepository{`0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Boolean,System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of ExtendedRepository`1.GetFilteredElements(Expression`1&lt;Func`2&lt;!!0,Boolean&gt;&gt; filter, Expression`1&lt;Func`2&lt;!!0,!!1&gt;&gt; orderByExpression, Boolean ascending)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimExtendedRepository`1.AllInstances.GetPagedElementsOf2Int32Int32ExpressionOfFuncOfM0M1Boolean``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{LightstoneApp.Infrastructure.Data.Core.ExtendedRepository{`0},System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Boolean,System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of ExtendedRepository`1.GetPagedElements(Int32 pageIndex, Int32 pageCount, Expression`1&lt;Func`2&lt;!!0,!!1&gt;&gt; orderByExpression, Boolean ascending)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimExtendedRepository`1.AllInstances.ModifyICollectionOfT0">
            <summary>Sets the shim of ExtendedRepository`1.Modify(ICollection`1&lt;!0&gt; items)</summary>
        </member>
        <member name="T:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimMemorySet`1">
            <summary>Shim type of LightstoneApp.Infrastructure.Data.Core.MemorySet`1</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimMemorySet`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimMemorySet`1.#ctor(LightstoneApp.Infrastructure.Data.Core.MemorySet{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimMemorySet`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimMemorySet`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimMemorySet`1.Bind(System.Data.Entity.Core.Objects.IObjectSet{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimMemorySet`1.Bind(System.Linq.IQueryable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimMemorySet`1.Bind(System.Linq.IQueryable{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimMemorySet`1.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimMemorySet`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimMemorySet`1.AddObjectT0">
            <summary>Sets the shim of MemorySet`1.AddObject(!0 entity)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimMemorySet`1.AttachT0">
            <summary>Sets the shim of MemorySet`1.Attach(!0 entity)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimMemorySet`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimMemorySet`1.ConstructorListOfT0">
            <summary>Sets the shim of MemorySet`1.MemorySet`1(List`1&lt;!0&gt; innerList)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimMemorySet`1.DeleteObjectT0">
            <summary>Sets the shim of MemorySet`1.DeleteObject(!0 entity)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimMemorySet`1.DetachT0">
            <summary>Sets the shim of MemorySet`1.Detach(!0 entity)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimMemorySet`1.ElementTypeGet">
            <summary>Sets the shim of MemorySet`1.get_ElementType()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimMemorySet`1.ExpressionGet">
            <summary>Sets the shim of MemorySet`1.get_Expression()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimMemorySet`1.GetEnumerator">
            <summary>Sets the shim of MemorySet`1.GetEnumerator()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimMemorySet`1.IncludeString">
            <summary>Sets the shim of MemorySet`1.Include(String path)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimMemorySet`1.ProviderGet">
            <summary>Sets the shim of MemorySet`1.get_Provider()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimMemorySet`1.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of MemorySet`1.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimMemorySet`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimMemorySet`1.AllInstances.AddObjectT0">
            <summary>Sets the shim of MemorySet`1.AddObject(!0 entity)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimMemorySet`1.AllInstances.AttachT0">
            <summary>Sets the shim of MemorySet`1.Attach(!0 entity)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimMemorySet`1.AllInstances.DeleteObjectT0">
            <summary>Sets the shim of MemorySet`1.DeleteObject(!0 entity)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimMemorySet`1.AllInstances.DetachT0">
            <summary>Sets the shim of MemorySet`1.Detach(!0 entity)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimMemorySet`1.AllInstances.ElementTypeGet">
            <summary>Sets the shim of MemorySet`1.get_ElementType()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimMemorySet`1.AllInstances.ExpressionGet">
            <summary>Sets the shim of MemorySet`1.get_Expression()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimMemorySet`1.AllInstances.GetEnumerator">
            <summary>Sets the shim of MemorySet`1.GetEnumerator()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimMemorySet`1.AllInstances.IncludeString">
            <summary>Sets the shim of MemorySet`1.Include(String path)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimMemorySet`1.AllInstances.ProviderGet">
            <summary>Sets the shim of MemorySet`1.get_Provider()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimMemorySet`1.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of MemorySet`1.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimQueryableUtils">
            <summary>Shim type of LightstoneApp.Infrastructure.Data.Core.QueryableUtils</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimQueryableUtils.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimQueryableUtils.#ctor(LightstoneApp.Infrastructure.Data.Core.QueryableUtils)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimQueryableUtils.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimQueryableUtils.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimQueryableUtils.CallOrderByOf1IQueryableOfM0StringBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.String,System.Boolean,System.Linq.IQueryable{``0}})">
            <summary>Sets the shim of QueryableUtils.CallOrderBy(IQueryable`1&lt;!!0&gt; source, String propertyName, Boolean ascending)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimQueryableUtils.GenerateSelectorOf1StringTypeOut``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{System.String,System.Type,System.Linq.Expressions.LambdaExpression})">
            <summary>Sets the shim of QueryableUtils.GenerateSelector(String propertyName, Type&amp; resultType)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimQueryableUtils.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimQueryableUtils.Constructor">
            <summary>Sets the shim of QueryableUtils.QueryableUtils()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimQueryableUtils.StaticConstructor">
            <summary>Sets the shim of QueryableUtils.QueryableUtils()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimQueryableUtils._cctorb__0MethodInfo">
            <summary>Sets the shim of QueryableUtils.&lt;.cctor&gt;b__0(MethodInfo method)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimQueryableUtils._cctorb__1MethodInfo">
            <summary>Sets the shim of QueryableUtils.&lt;.cctor&gt;b__1(MethodInfo method)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimQueryableUtils._cctorb__2MethodInfo">
            <summary>Sets the shim of QueryableUtils.&lt;.cctor&gt;b__2(MethodInfo method)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimQueryableUtils._cctorb__3MethodInfo">
            <summary>Sets the shim of QueryableUtils.&lt;.cctor&gt;b__3(MethodInfo method)</summary>
        </member>
        <member name="T:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimQueryableUtils.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimRepository`1">
            <summary>Shim type of LightstoneApp.Infrastructure.Data.Core.Repository`1</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimRepository`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimRepository`1.#ctor(LightstoneApp.Infrastructure.Data.Core.Repository{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimRepository`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimRepository`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimRepository`1.Bind(LightstoneApp.Domain.Core.IRepository{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimRepository`1.GetFilteredElementsOf1ExpressionOfFuncOfT0BooleanExpressionOfFuncOfT0M0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean,System.Collections.Generic.IEnumerable{`0}})">
            <summary>Sets the shim of Repository`1.GetFilteredElements(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; filter, Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; orderByExpression, Boolean ascending)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimRepository`1.GetFilteredElementsOf1ExpressionOfFuncOfT0BooleanInt32Int32ExpressionOfFuncOfT0M0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean,System.Collections.Generic.IEnumerable{`0}})">
            <summary>Sets the shim of Repository`1.GetFilteredElements(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; filter, Int32 pageIndex, Int32 pageCount, Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; orderByExpression, Boolean ascending)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimRepository`1.GetPagedElementsOf1Int32Int32ExpressionOfFuncOfT0M0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean,System.Collections.Generic.IEnumerable{`0}})">
            <summary>Sets the shim of Repository`1.GetPagedElements(Int32 pageIndex, Int32 pageCount, Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; orderByExpression, Boolean ascending)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimRepository`1.GetPagedElementsOf1Int32Int32ExpressionOfFuncOfT0M0ISpecificationOfT0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{`0,``0}},LightstoneApp.Domain.Core.Specification.ISpecification{`0},System.Boolean,System.Collections.Generic.IEnumerable{`0}})">
            <summary>Sets the shim of Repository`1.GetPagedElements(Int32 pageIndex, Int32 pageCount, Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; orderByExpression, ISpecification`1&lt;!0&gt; specification, Boolean ascending)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimRepository`1.AddT0">
            <summary>Sets the shim of Repository`1.Add(!0 item)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimRepository`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimRepository`1.ConstructorIQueryableUnitOfWorkITraceManager">
            <summary>Sets the shim of Repository`1.Repository`1(IQueryableUnitOfWork unitOfWork, ITraceManager traceManager)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimRepository`1.CreateSet">
            <summary>Sets the shim of Repository`1.CreateSet()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimRepository`1.GetAll">
            <summary>Sets the shim of Repository`1.GetAll()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimRepository`1.GetBySpecISpecificationOfT0">
            <summary>Sets the shim of Repository`1.GetBySpec(ISpecification`1&lt;!0&gt; specification)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimRepository`1.GetFilteredElementsExpressionOfFuncOfT0Boolean">
            <summary>Sets the shim of Repository`1.GetFilteredElements(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; filter)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimRepository`1.ModifyT0">
            <summary>Sets the shim of Repository`1.Modify(!0 item)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimRepository`1.RegisterItemT0">
            <summary>Sets the shim of Repository`1.RegisterItem(!0 item)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimRepository`1.RemoveT0">
            <summary>Sets the shim of Repository`1.Remove(!0 item)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimRepository`1.UnitOfWorkGet">
            <summary>Sets the shim of Repository`1.get_UnitOfWork()</summary>
        </member>
        <member name="T:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimRepository`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimRepository`1.AllInstances.GetFilteredElementsOf1ExpressionOfFuncOfT0BooleanExpressionOfFuncOfT0M0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{LightstoneApp.Infrastructure.Data.Core.Repository{`0},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean,System.Collections.Generic.IEnumerable{`0}})">
            <summary>Sets the shim of Repository`1.GetFilteredElements(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; filter, Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; orderByExpression, Boolean ascending)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimRepository`1.AllInstances.GetFilteredElementsOf1ExpressionOfFuncOfT0BooleanInt32Int32ExpressionOfFuncOfT0M0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{LightstoneApp.Infrastructure.Data.Core.Repository{`0},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean,System.Collections.Generic.IEnumerable{`0}})">
            <summary>Sets the shim of Repository`1.GetFilteredElements(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; filter, Int32 pageIndex, Int32 pageCount, Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; orderByExpression, Boolean ascending)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimRepository`1.AllInstances.GetPagedElementsOf1Int32Int32ExpressionOfFuncOfT0M0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{LightstoneApp.Infrastructure.Data.Core.Repository{`0},System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean,System.Collections.Generic.IEnumerable{`0}})">
            <summary>Sets the shim of Repository`1.GetPagedElements(Int32 pageIndex, Int32 pageCount, Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; orderByExpression, Boolean ascending)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimRepository`1.AllInstances.GetPagedElementsOf1Int32Int32ExpressionOfFuncOfT0M0ISpecificationOfT0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{LightstoneApp.Infrastructure.Data.Core.Repository{`0},System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{`0,``0}},LightstoneApp.Domain.Core.Specification.ISpecification{`0},System.Boolean,System.Collections.Generic.IEnumerable{`0}})">
            <summary>Sets the shim of Repository`1.GetPagedElements(Int32 pageIndex, Int32 pageCount, Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; orderByExpression, ISpecification`1&lt;!0&gt; specification, Boolean ascending)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimRepository`1.AllInstances.AddT0">
            <summary>Sets the shim of Repository`1.Add(!0 item)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimRepository`1.AllInstances.CreateSet">
            <summary>Sets the shim of Repository`1.CreateSet()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimRepository`1.AllInstances.GetAll">
            <summary>Sets the shim of Repository`1.GetAll()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimRepository`1.AllInstances.GetBySpecISpecificationOfT0">
            <summary>Sets the shim of Repository`1.GetBySpec(ISpecification`1&lt;!0&gt; specification)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimRepository`1.AllInstances.GetFilteredElementsExpressionOfFuncOfT0Boolean">
            <summary>Sets the shim of Repository`1.GetFilteredElements(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; filter)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimRepository`1.AllInstances.ModifyT0">
            <summary>Sets the shim of Repository`1.Modify(!0 item)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimRepository`1.AllInstances.RegisterItemT0">
            <summary>Sets the shim of Repository`1.RegisterItem(!0 item)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimRepository`1.AllInstances.RemoveT0">
            <summary>Sets the shim of Repository`1.Remove(!0 item)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimRepository`1.AllInstances.UnitOfWorkGet">
            <summary>Sets the shim of Repository`1.get_UnitOfWork()</summary>
        </member>
        <member name="T:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimTrackUtils">
            <summary>Shim type of LightstoneApp.Infrastructure.Data.Core.TrackUtils</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimTrackUtils.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimTrackUtils.#ctor(LightstoneApp.Infrastructure.Data.Core.TrackUtils)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimTrackUtils.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimTrackUtils.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimTrackUtils.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimTrackUtils.Constructor">
            <summary>Sets the shim of TrackUtils.TrackUtils()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimTrackUtils.GetEntityStateNullableOfTrackState">
            <summary>Sets the shim of TrackUtils.GetEntityState(Nullable`1&lt;TrackState&gt; entityState)</summary>
        </member>
        <member name="T:LightstoneApp.Infrastructure.Data.Core.Fakes.ShimTrackUtils.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:LightstoneApp.Infrastructure.Data.Core.Fakes.StubExtendedRepository`1">
            <summary>Stub type of LightstoneApp.Infrastructure.Data.Core.ExtendedRepository`1</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.StubExtendedRepository`1.#ctor(LightstoneApp.Infrastructure.Data.Core.IQueryableUnitOfWork,LightstoneApp.Infrastructure.CrossCutting.Logging.ITraceManager)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.StubExtendedRepository`1.Add(`0)">
            <summary>Sets the stub of Repository`1.Add(!0 item)</summary>
        </member>
        <member name="F:LightstoneApp.Infrastructure.Data.Core.Fakes.StubExtendedRepository`1.AddT0">
            <summary>Sets the stub of Repository`1.Add(!0 item)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.StubExtendedRepository`1.GetAll">
            <summary>Sets the stub of Repository`1.GetAll()</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.StubExtendedRepository`1.GetAll``1">
            <summary>Sets the stub of ExtendedRepository`1.GetAll()</summary>
        </member>
        <member name="F:LightstoneApp.Infrastructure.Data.Core.Fakes.StubExtendedRepository`1.GetAll01">
            <summary>Sets the stub of Repository`1.GetAll()</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.StubExtendedRepository`1.GetAllOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets stubs of GetAll()</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.StubExtendedRepository`1.GetBySpec``1(LightstoneApp.Domain.Core.Specification.ISpecification{``0})">
            <summary>Sets the stub of ExtendedRepository`1.GetBySpec(ISpecification`1&lt;!!0&gt; specification)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.StubExtendedRepository`1.GetBySpec(LightstoneApp.Domain.Core.Specification.ISpecification{`0})">
            <summary>Sets the stub of Repository`1.GetBySpec(ISpecification`1&lt;!0&gt; specification)</summary>
        </member>
        <member name="F:LightstoneApp.Infrastructure.Data.Core.Fakes.StubExtendedRepository`1.GetBySpecISpecificationOfT0">
            <summary>Sets the stub of Repository`1.GetBySpec(ISpecification`1&lt;!0&gt; specification)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.StubExtendedRepository`1.GetBySpecOf1ISpecificationOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{LightstoneApp.Domain.Core.Specification.ISpecification{``0},System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets stubs of GetBySpec(ISpecification`1&lt;!!0&gt; specification)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.StubExtendedRepository`1.GetFilteredElements(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Sets the stub of Repository`1.GetFilteredElements(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; filter)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.StubExtendedRepository`1.GetFilteredElements``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>Sets the stub of Repository`1.GetFilteredElements(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; filter, Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; orderByExpression, Boolean ascending)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.StubExtendedRepository`1.GetFilteredElements``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>Sets the stub of Repository`1.GetFilteredElements(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; filter, Int32 pageIndex, Int32 pageCount, Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; orderByExpression, Boolean ascending)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.StubExtendedRepository`1.GetFilteredElements``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>Sets the stub of ExtendedRepository`1.GetFilteredElements(Expression`1&lt;Func`2&lt;!!0,Boolean&gt;&gt; filter)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.StubExtendedRepository`1.GetFilteredElements``2(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Boolean)">
            <summary>Sets the stub of ExtendedRepository`1.GetFilteredElements(Expression`1&lt;Func`2&lt;!!0,Boolean&gt;&gt; filter, Expression`1&lt;Func`2&lt;!!0,!!1&gt;&gt; orderByExpression, Boolean ascending)</summary>
        </member>
        <member name="F:LightstoneApp.Infrastructure.Data.Core.Fakes.StubExtendedRepository`1.GetFilteredElementsExpressionOfFuncOfT0Boolean">
            <summary>Sets the stub of Repository`1.GetFilteredElements(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; filter)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.StubExtendedRepository`1.GetFilteredElementsOf1ExpressionOfFuncOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets stubs of GetFilteredElements(Expression`1&lt;Func`2&lt;!!0,Boolean&gt;&gt; filter)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.StubExtendedRepository`1.GetFilteredElementsOf1ExpressionOfFuncOfT0BooleanExpressionOfFuncOfT0M0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean,System.Collections.Generic.IEnumerable{`0}})">
            <summary>Sets stubs of GetFilteredElements(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; filter, Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; orderByExpression, Boolean ascending)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.StubExtendedRepository`1.GetFilteredElementsOf1ExpressionOfFuncOfT0BooleanInt32Int32ExpressionOfFuncOfT0M0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean,System.Collections.Generic.IEnumerable{`0}})">
            <summary>Sets stubs of GetFilteredElements(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; filter, Int32 pageIndex, Int32 pageCount, Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; orderByExpression, Boolean ascending)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.StubExtendedRepository`1.GetFilteredElementsOf2ExpressionOfFuncOfM0BooleanExpressionOfFuncOfM0M1Boolean``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Boolean,System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets stubs of GetFilteredElements(Expression`1&lt;Func`2&lt;!!0,Boolean&gt;&gt; filter, Expression`1&lt;Func`2&lt;!!0,!!1&gt;&gt; orderByExpression, Boolean ascending)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.StubExtendedRepository`1.GetPagedElements``1(System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>Sets the stub of Repository`1.GetPagedElements(Int32 pageIndex, Int32 pageCount, Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; orderByExpression, Boolean ascending)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.StubExtendedRepository`1.GetPagedElements``1(System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{`0,``0}},LightstoneApp.Domain.Core.Specification.ISpecification{`0},System.Boolean)">
            <summary>Sets the stub of Repository`1.GetPagedElements(Int32 pageIndex, Int32 pageCount, Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; orderByExpression, ISpecification`1&lt;!0&gt; specification, Boolean ascending)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.StubExtendedRepository`1.GetPagedElements``2(System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Boolean)">
            <summary>Sets the stub of ExtendedRepository`1.GetPagedElements(Int32 pageIndex, Int32 pageCount, Expression`1&lt;Func`2&lt;!!0,!!1&gt;&gt; orderByExpression, Boolean ascending)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.StubExtendedRepository`1.GetPagedElementsOf1Int32Int32ExpressionOfFuncOfT0M0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean,System.Collections.Generic.IEnumerable{`0}})">
            <summary>Sets stubs of GetPagedElements(Int32 pageIndex, Int32 pageCount, Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; orderByExpression, Boolean ascending)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.StubExtendedRepository`1.GetPagedElementsOf1Int32Int32ExpressionOfFuncOfT0M0ISpecificationOfT0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{`0,``0}},LightstoneApp.Domain.Core.Specification.ISpecification{`0},System.Boolean,System.Collections.Generic.IEnumerable{`0}})">
            <summary>Sets stubs of GetPagedElements(Int32 pageIndex, Int32 pageCount, Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; orderByExpression, ISpecification`1&lt;!0&gt; specification, Boolean ascending)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.StubExtendedRepository`1.GetPagedElementsOf2Int32Int32ExpressionOfFuncOfM0M1Boolean``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Boolean,System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets stubs of GetPagedElements(Int32 pageIndex, Int32 pageCount, Expression`1&lt;Func`2&lt;!!0,!!1&gt;&gt; orderByExpression, Boolean ascending)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.StubExtendedRepository`1.InitializeStub">
            <summary>Initializes a new instance of type StubExtendedRepository</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.StubExtendedRepository`1.Modify(`0)">
            <summary>Sets the stub of Repository`1.Modify(!0 item)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.StubExtendedRepository`1.Modify(System.Collections.Generic.ICollection{`0})">
            <summary>Sets the stub of ExtendedRepository`1.Modify(ICollection`1&lt;!0&gt; items)</summary>
        </member>
        <member name="F:LightstoneApp.Infrastructure.Data.Core.Fakes.StubExtendedRepository`1.ModifyICollectionOfT0">
            <summary>Sets the stub of ExtendedRepository`1.Modify(ICollection`1&lt;!0&gt; items)</summary>
        </member>
        <member name="F:LightstoneApp.Infrastructure.Data.Core.Fakes.StubExtendedRepository`1.ModifyT0">
            <summary>Sets the stub of Repository`1.Modify(!0 item)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.StubExtendedRepository`1.RegisterItem(`0)">
            <summary>Sets the stub of Repository`1.RegisterItem(!0 item)</summary>
        </member>
        <member name="F:LightstoneApp.Infrastructure.Data.Core.Fakes.StubExtendedRepository`1.RegisterItemT0">
            <summary>Sets the stub of Repository`1.RegisterItem(!0 item)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.StubExtendedRepository`1.Remove(`0)">
            <summary>Sets the stub of Repository`1.Remove(!0 item)</summary>
        </member>
        <member name="F:LightstoneApp.Infrastructure.Data.Core.Fakes.StubExtendedRepository`1.RemoveT0">
            <summary>Sets the stub of Repository`1.Remove(!0 item)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Fakes.StubExtendedRepository`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Fakes.StubExtendedRepository`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Fakes.StubExtendedRepository`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:LightstoneApp.Infrastructure.Data.Core.Fakes.StubIQueryableUnitOfWork">
            <summary>Stub type of LightstoneApp.Infrastructure.Data.Core.IQueryableUnitOfWork</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.StubIQueryableUnitOfWork.#ctor">
            <summary>Initializes a new instance of type StubIQueryableUnitOfWork</summary>
        </member>
        <member name="F:LightstoneApp.Infrastructure.Data.Core.Fakes.StubIQueryableUnitOfWork.Commit">
            <summary>Sets the stub of IUnitOfWork.Commit()</summary>
        </member>
        <member name="F:LightstoneApp.Infrastructure.Data.Core.Fakes.StubIQueryableUnitOfWork.CommitAndRefreshChanges">
            <summary>Sets the stub of IUnitOfWork.CommitAndRefreshChanges()</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.StubIQueryableUnitOfWork.CreateSetOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.Core.Objects.IObjectSet{``0}})">
            <summary>Sets stubs of CreateSet()</summary>
        </member>
        <member name="F:LightstoneApp.Infrastructure.Data.Core.Fakes.StubIQueryableUnitOfWork.Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:LightstoneApp.Infrastructure.Data.Core.Fakes.StubIQueryableUnitOfWork.ExecuteCommandStringObjectArray">
            <summary>Sets the stub of ISQL.ExecuteCommand(String sqlCommand, Object[] parameters)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.StubIQueryableUnitOfWork.ExecuteQueryOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets stubs of ExecuteQuery(String sqlQuery, Object[] parameters)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.StubIQueryableUnitOfWork.ladc::LightstoneApp#Domain#Core#ISQL#ExecuteCommand(System.String,System.Object[])">
            <summary>Sets the stub of ISQL.ExecuteCommand(String sqlCommand, Object[] parameters)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.StubIQueryableUnitOfWork.ladc::LightstoneApp#Domain#Core#ISQL#ExecuteQuery``1(System.String,System.Object[])">
            <summary>Sets the stub of ISQL.ExecuteQuery(String sqlQuery, Object[] parameters)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.StubIQueryableUnitOfWork.ladc::LightstoneApp#Domain#Core#IUnitOfWork#Commit">
            <summary>Sets the stub of IUnitOfWork.Commit()</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.StubIQueryableUnitOfWork.ladc::LightstoneApp#Domain#Core#IUnitOfWork#CommitAndRefreshChanges">
            <summary>Sets the stub of IUnitOfWork.CommitAndRefreshChanges()</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.StubIQueryableUnitOfWork.ladc::LightstoneApp#Domain#Core#IUnitOfWork#RegisterChanges``1(``0)">
            <summary>Sets the stub of IUnitOfWork.RegisterChanges(!!0 item)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.StubIQueryableUnitOfWork.ladc::LightstoneApp#Domain#Core#IUnitOfWork#RollbackChanges">
            <summary>Sets the stub of IUnitOfWork.RollbackChanges()</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.StubIQueryableUnitOfWork.laidc::LightstoneApp#Infrastructure#Data#Core#IQueryableUnitOfWork#CreateSet``1">
            <summary>Sets the stub of IQueryableUnitOfWork.CreateSet()</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.StubIQueryableUnitOfWork.RegisterChangesOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0})">
            <summary>Sets stubs of RegisterChanges(!!0 item)</summary>
        </member>
        <member name="F:LightstoneApp.Infrastructure.Data.Core.Fakes.StubIQueryableUnitOfWork.RollbackChanges">
            <summary>Sets the stub of IUnitOfWork.RollbackChanges()</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.StubIQueryableUnitOfWork.global::System#IDisposable#Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="T:LightstoneApp.Infrastructure.Data.Core.Fakes.StubQueryableUtils">
            <summary>Stub type of LightstoneApp.Infrastructure.Data.Core.QueryableUtils</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.StubQueryableUtils.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.StubQueryableUtils.InitializeStub">
            <summary>Initializes a new instance of type StubQueryableUtils</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Fakes.StubQueryableUtils.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Fakes.StubQueryableUtils.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Fakes.StubQueryableUtils.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:LightstoneApp.Infrastructure.Data.Core.Fakes.StubRepository`1">
            <summary>Stub type of LightstoneApp.Infrastructure.Data.Core.Repository`1</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.StubRepository`1.#ctor(LightstoneApp.Infrastructure.Data.Core.IQueryableUnitOfWork,LightstoneApp.Infrastructure.CrossCutting.Logging.ITraceManager)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.StubRepository`1.Add(`0)">
            <summary>Sets the stub of Repository`1.Add(!0 item)</summary>
        </member>
        <member name="F:LightstoneApp.Infrastructure.Data.Core.Fakes.StubRepository`1.AddT0">
            <summary>Sets the stub of Repository`1.Add(!0 item)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.StubRepository`1.GetAll">
            <summary>Sets the stub of Repository`1.GetAll()</summary>
        </member>
        <member name="F:LightstoneApp.Infrastructure.Data.Core.Fakes.StubRepository`1.GetAll01">
            <summary>Sets the stub of Repository`1.GetAll()</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.StubRepository`1.GetBySpec(LightstoneApp.Domain.Core.Specification.ISpecification{`0})">
            <summary>Sets the stub of Repository`1.GetBySpec(ISpecification`1&lt;!0&gt; specification)</summary>
        </member>
        <member name="F:LightstoneApp.Infrastructure.Data.Core.Fakes.StubRepository`1.GetBySpecISpecificationOfT0">
            <summary>Sets the stub of Repository`1.GetBySpec(ISpecification`1&lt;!0&gt; specification)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.StubRepository`1.GetFilteredElements(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Sets the stub of Repository`1.GetFilteredElements(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; filter)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.StubRepository`1.GetFilteredElements``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>Sets the stub of Repository`1.GetFilteredElements(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; filter, Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; orderByExpression, Boolean ascending)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.StubRepository`1.GetFilteredElements``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>Sets the stub of Repository`1.GetFilteredElements(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; filter, Int32 pageIndex, Int32 pageCount, Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; orderByExpression, Boolean ascending)</summary>
        </member>
        <member name="F:LightstoneApp.Infrastructure.Data.Core.Fakes.StubRepository`1.GetFilteredElementsExpressionOfFuncOfT0Boolean">
            <summary>Sets the stub of Repository`1.GetFilteredElements(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; filter)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.StubRepository`1.GetFilteredElementsOf1ExpressionOfFuncOfT0BooleanExpressionOfFuncOfT0M0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean,System.Collections.Generic.IEnumerable{`0}})">
            <summary>Sets stubs of GetFilteredElements(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; filter, Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; orderByExpression, Boolean ascending)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.StubRepository`1.GetFilteredElementsOf1ExpressionOfFuncOfT0BooleanInt32Int32ExpressionOfFuncOfT0M0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean,System.Collections.Generic.IEnumerable{`0}})">
            <summary>Sets stubs of GetFilteredElements(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; filter, Int32 pageIndex, Int32 pageCount, Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; orderByExpression, Boolean ascending)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.StubRepository`1.GetPagedElements``1(System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>Sets the stub of Repository`1.GetPagedElements(Int32 pageIndex, Int32 pageCount, Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; orderByExpression, Boolean ascending)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.StubRepository`1.GetPagedElements``1(System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{`0,``0}},LightstoneApp.Domain.Core.Specification.ISpecification{`0},System.Boolean)">
            <summary>Sets the stub of Repository`1.GetPagedElements(Int32 pageIndex, Int32 pageCount, Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; orderByExpression, ISpecification`1&lt;!0&gt; specification, Boolean ascending)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.StubRepository`1.GetPagedElementsOf1Int32Int32ExpressionOfFuncOfT0M0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean,System.Collections.Generic.IEnumerable{`0}})">
            <summary>Sets stubs of GetPagedElements(Int32 pageIndex, Int32 pageCount, Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; orderByExpression, Boolean ascending)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.StubRepository`1.GetPagedElementsOf1Int32Int32ExpressionOfFuncOfT0M0ISpecificationOfT0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{`0,``0}},LightstoneApp.Domain.Core.Specification.ISpecification{`0},System.Boolean,System.Collections.Generic.IEnumerable{`0}})">
            <summary>Sets stubs of GetPagedElements(Int32 pageIndex, Int32 pageCount, Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; orderByExpression, ISpecification`1&lt;!0&gt; specification, Boolean ascending)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.StubRepository`1.InitializeStub">
            <summary>Initializes a new instance of type StubRepository</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.StubRepository`1.Modify(`0)">
            <summary>Sets the stub of Repository`1.Modify(!0 item)</summary>
        </member>
        <member name="F:LightstoneApp.Infrastructure.Data.Core.Fakes.StubRepository`1.ModifyT0">
            <summary>Sets the stub of Repository`1.Modify(!0 item)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.StubRepository`1.RegisterItem(`0)">
            <summary>Sets the stub of Repository`1.RegisterItem(!0 item)</summary>
        </member>
        <member name="F:LightstoneApp.Infrastructure.Data.Core.Fakes.StubRepository`1.RegisterItemT0">
            <summary>Sets the stub of Repository`1.RegisterItem(!0 item)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.StubRepository`1.Remove(`0)">
            <summary>Sets the stub of Repository`1.Remove(!0 item)</summary>
        </member>
        <member name="F:LightstoneApp.Infrastructure.Data.Core.Fakes.StubRepository`1.RemoveT0">
            <summary>Sets the stub of Repository`1.Remove(!0 item)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Fakes.StubRepository`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Fakes.StubRepository`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Fakes.StubRepository`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:LightstoneApp.Infrastructure.Data.Core.Fakes.StubTrackUtils">
            <summary>Stub type of LightstoneApp.Infrastructure.Data.Core.TrackUtils</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.StubTrackUtils.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Fakes.StubTrackUtils.InitializeStub">
            <summary>Initializes a new instance of type StubTrackUtils</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Fakes.StubTrackUtils.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Fakes.StubTrackUtils.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Fakes.StubTrackUtils.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimEvents_Stream">
            <summary>Shim type of LightstoneApp.Infrastructure.Data.Core.Indexes.Events_Stream</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimEvents_Stream.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimEvents_Stream.#ctor(LightstoneApp.Infrastructure.Data.Core.Indexes.Events_Stream)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimEvents_Stream.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimEvents_Stream.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimEvents_Stream.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimEvents_Stream.Constructor">
            <summary>Sets the shim of Events_Stream.Events_Stream()</summary>
        </member>
        <member name="T:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimEvents_Stream.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimEvents_Stream.ShimEvent">
            <summary>Shim type of LightstoneApp.Infrastructure.Data.Core.Indexes.Events_Stream+Event</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimEvents_Stream.ShimEvent.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimEvents_Stream.ShimEvent.#ctor(LightstoneApp.Infrastructure.Data.Core.Indexes.Events_Stream.Event)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimEvents_Stream.ShimEvent.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimEvents_Stream.ShimEvent.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimEvents_Stream.ShimEvent.AggregateIdentifierGet">
            <summary>Sets the shim of Event.get_AggregateIdentifier()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimEvents_Stream.ShimEvent.AggregateIdentifierSetString">
            <summary>Sets the shim of Event.set_AggregateIdentifier(String value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimEvents_Stream.ShimEvent.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimEvents_Stream.ShimEvent.CommitIdGet">
            <summary>Sets the shim of Event.get_CommitId()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimEvents_Stream.ShimEvent.CommitIdSetString">
            <summary>Sets the shim of Event.set_CommitId(String value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimEvents_Stream.ShimEvent.Constructor">
            <summary>Sets the shim of Event.Event()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimEvents_Stream.ShimEvent.CorrelationIdGet">
            <summary>Sets the shim of Event.get_CorrelationId()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimEvents_Stream.ShimEvent.CorrelationIdSetString">
            <summary>Sets the shim of Event.set_CorrelationId(String value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimEvents_Stream.ShimEvent.CreatedOnGet">
            <summary>Sets the shim of Event.get_CreatedOn()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimEvents_Stream.ShimEvent.CreatedOnSetDateTimeOffset">
            <summary>Sets the shim of Event.set_CreatedOn(DateTimeOffset value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimEvents_Stream.ShimEvent.EventDataGet">
            <summary>Sets the shim of Event.get_EventData()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimEvents_Stream.ShimEvent.EventDataSetIDomainEvent">
            <summary>Sets the shim of Event.set_EventData(IDomainEvent value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimEvents_Stream.ShimEvent.EventTypeGet">
            <summary>Sets the shim of Event.get_EventType()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimEvents_Stream.ShimEvent.EventTypeSetString">
            <summary>Sets the shim of Event.set_EventType(String value)</summary>
        </member>
        <member name="T:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimEvents_Stream.ShimEvent.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimEvents_Stream.ShimEvent.AllInstances.AggregateIdentifierGet">
            <summary>Sets the shim of Event.get_AggregateIdentifier()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimEvents_Stream.ShimEvent.AllInstances.AggregateIdentifierSetString">
            <summary>Sets the shim of Event.set_AggregateIdentifier(String value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimEvents_Stream.ShimEvent.AllInstances.CommitIdGet">
            <summary>Sets the shim of Event.get_CommitId()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimEvents_Stream.ShimEvent.AllInstances.CommitIdSetString">
            <summary>Sets the shim of Event.set_CommitId(String value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimEvents_Stream.ShimEvent.AllInstances.CorrelationIdGet">
            <summary>Sets the shim of Event.get_CorrelationId()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimEvents_Stream.ShimEvent.AllInstances.CorrelationIdSetString">
            <summary>Sets the shim of Event.set_CorrelationId(String value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimEvents_Stream.ShimEvent.AllInstances.CreatedOnGet">
            <summary>Sets the shim of Event.get_CreatedOn()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimEvents_Stream.ShimEvent.AllInstances.CreatedOnSetDateTimeOffset">
            <summary>Sets the shim of Event.set_CreatedOn(DateTimeOffset value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimEvents_Stream.ShimEvent.AllInstances.EventDataGet">
            <summary>Sets the shim of Event.get_EventData()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimEvents_Stream.ShimEvent.AllInstances.EventDataSetIDomainEvent">
            <summary>Sets the shim of Event.set_EventData(IDomainEvent value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimEvents_Stream.ShimEvent.AllInstances.EventTypeGet">
            <summary>Sets the shim of Event.get_EventType()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimEvents_Stream.ShimEvent.AllInstances.EventTypeSetString">
            <summary>Sets the shim of Event.set_EventType(String value)</summary>
        </member>
        <member name="T:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimHistory_Stream">
            <summary>Shim type of LightstoneApp.Infrastructure.Data.Core.Indexes.History_Stream</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimHistory_Stream.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimHistory_Stream.#ctor(LightstoneApp.Infrastructure.Data.Core.Indexes.History_Stream)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimHistory_Stream.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimHistory_Stream.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimHistory_Stream.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimHistory_Stream.Constructor">
            <summary>Sets the shim of History_Stream.History_Stream()</summary>
        </member>
        <member name="T:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimHistory_Stream.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimHistory_Stream.ShimMoment">
            <summary>Shim type of LightstoneApp.Infrastructure.Data.Core.Indexes.History_Stream+Moment</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimHistory_Stream.ShimMoment.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimHistory_Stream.ShimMoment.#ctor(LightstoneApp.Infrastructure.Data.Core.Indexes.History_Stream.Moment)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimHistory_Stream.ShimMoment.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimHistory_Stream.ShimMoment.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimHistory_Stream.ShimMoment.AggregateIdentifierGet">
            <summary>Sets the shim of Moment.get_AggregateIdentifier()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimHistory_Stream.ShimMoment.AggregateIdentifierSetString">
            <summary>Sets the shim of Moment.set_AggregateIdentifier(String value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimHistory_Stream.ShimMoment.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimHistory_Stream.ShimMoment.Constructor">
            <summary>Sets the shim of Moment.Moment()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimHistory_Stream.ShimMoment.CorrelationIdGet">
            <summary>Sets the shim of Moment.get_CorrelationId()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimHistory_Stream.ShimMoment.CorrelationIdSetString">
            <summary>Sets the shim of Moment.set_CorrelationId(String value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimHistory_Stream.ShimMoment.CreatedOnGet">
            <summary>Sets the shim of Moment.get_CreatedOn()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimHistory_Stream.ShimMoment.CreatedOnSetDateTimeOffset">
            <summary>Sets the shim of Moment.set_CreatedOn(DateTimeOffset value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimHistory_Stream.ShimMoment.DataGet">
            <summary>Sets the shim of Moment.get_Data()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimHistory_Stream.ShimMoment.DataSetObject">
            <summary>Sets the shim of Moment.set_Data(Object value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimHistory_Stream.ShimMoment.IdGet">
            <summary>Sets the shim of Moment.get_Id()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimHistory_Stream.ShimMoment.IdSetString">
            <summary>Sets the shim of Moment.set_Id(String value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimHistory_Stream.ShimMoment.MomentTypeGet">
            <summary>Sets the shim of Moment.get_MomentType()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimHistory_Stream.ShimMoment.MomentTypeSetHistory_StreamMomentType">
            <summary>Sets the shim of Moment.set_MomentType(MomentType value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimHistory_Stream.ShimMoment.TypeGet">
            <summary>Sets the shim of Moment.get_Type()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimHistory_Stream.ShimMoment.TypeSetString">
            <summary>Sets the shim of Moment.set_Type(String value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimHistory_Stream.ShimMoment.UserAccountGet">
            <summary>Sets the shim of Moment.get_UserAccount()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimHistory_Stream.ShimMoment.UserAccountSetString">
            <summary>Sets the shim of Moment.set_UserAccount(String value)</summary>
        </member>
        <member name="T:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimHistory_Stream.ShimMoment.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimHistory_Stream.ShimMoment.AllInstances.AggregateIdentifierGet">
            <summary>Sets the shim of Moment.get_AggregateIdentifier()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimHistory_Stream.ShimMoment.AllInstances.AggregateIdentifierSetString">
            <summary>Sets the shim of Moment.set_AggregateIdentifier(String value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimHistory_Stream.ShimMoment.AllInstances.CorrelationIdGet">
            <summary>Sets the shim of Moment.get_CorrelationId()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimHistory_Stream.ShimMoment.AllInstances.CorrelationIdSetString">
            <summary>Sets the shim of Moment.set_CorrelationId(String value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimHistory_Stream.ShimMoment.AllInstances.CreatedOnGet">
            <summary>Sets the shim of Moment.get_CreatedOn()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimHistory_Stream.ShimMoment.AllInstances.CreatedOnSetDateTimeOffset">
            <summary>Sets the shim of Moment.set_CreatedOn(DateTimeOffset value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimHistory_Stream.ShimMoment.AllInstances.DataGet">
            <summary>Sets the shim of Moment.get_Data()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimHistory_Stream.ShimMoment.AllInstances.DataSetObject">
            <summary>Sets the shim of Moment.set_Data(Object value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimHistory_Stream.ShimMoment.AllInstances.IdGet">
            <summary>Sets the shim of Moment.get_Id()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimHistory_Stream.ShimMoment.AllInstances.IdSetString">
            <summary>Sets the shim of Moment.set_Id(String value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimHistory_Stream.ShimMoment.AllInstances.MomentTypeGet">
            <summary>Sets the shim of Moment.get_MomentType()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimHistory_Stream.ShimMoment.AllInstances.MomentTypeSetHistory_StreamMomentType">
            <summary>Sets the shim of Moment.set_MomentType(MomentType value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimHistory_Stream.ShimMoment.AllInstances.TypeGet">
            <summary>Sets the shim of Moment.get_Type()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimHistory_Stream.ShimMoment.AllInstances.TypeSetString">
            <summary>Sets the shim of Moment.set_Type(String value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimHistory_Stream.ShimMoment.AllInstances.UserAccountGet">
            <summary>Sets the shim of Moment.get_UserAccount()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimHistory_Stream.ShimMoment.AllInstances.UserAccountSetString">
            <summary>Sets the shim of Moment.set_UserAccount(String value)</summary>
        </member>
        <member name="T:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimHistory_Stream_Aggregation">
            <summary>Shim type of LightstoneApp.Infrastructure.Data.Core.Indexes.History_Stream_Aggregation</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimHistory_Stream_Aggregation.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimHistory_Stream_Aggregation.#ctor(LightstoneApp.Infrastructure.Data.Core.Indexes.History_Stream_Aggregation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimHistory_Stream_Aggregation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimHistory_Stream_Aggregation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimHistory_Stream_Aggregation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimHistory_Stream_Aggregation.Constructor">
            <summary>Sets the shim of History_Stream_Aggregation.History_Stream_Aggregation()</summary>
        </member>
        <member name="T:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimHistory_Stream_Aggregation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimHistory_Stream_Aggregation.ShimMomentCloud">
            <summary>Shim type of LightstoneApp.Infrastructure.Data.Core.Indexes.History_Stream_Aggregation+MomentCloud</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimHistory_Stream_Aggregation.ShimMomentCloud.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimHistory_Stream_Aggregation.ShimMomentCloud.#ctor(LightstoneApp.Infrastructure.Data.Core.Indexes.History_Stream_Aggregation.MomentCloud)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimHistory_Stream_Aggregation.ShimMomentCloud.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimHistory_Stream_Aggregation.ShimMomentCloud.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimHistory_Stream_Aggregation.ShimMomentCloud.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimHistory_Stream_Aggregation.ShimMomentCloud.Constructor">
            <summary>Sets the shim of MomentCloud.MomentCloud()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimHistory_Stream_Aggregation.ShimMomentCloud.CountGet">
            <summary>Sets the shim of MomentCloud.get_Count()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimHistory_Stream_Aggregation.ShimMomentCloud.CountSetInt32">
            <summary>Sets the shim of MomentCloud.set_Count(Int32 value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimHistory_Stream_Aggregation.ShimMomentCloud.MomentTypeGet">
            <summary>Sets the shim of MomentCloud.get_MomentType()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimHistory_Stream_Aggregation.ShimMomentCloud.MomentTypeSetHistory_Stream_AggregationMomentType">
            <summary>Sets the shim of MomentCloud.set_MomentType(MomentType value)</summary>
        </member>
        <member name="T:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimHistory_Stream_Aggregation.ShimMomentCloud.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimHistory_Stream_Aggregation.ShimMomentCloud.AllInstances.CountGet">
            <summary>Sets the shim of MomentCloud.get_Count()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimHistory_Stream_Aggregation.ShimMomentCloud.AllInstances.CountSetInt32">
            <summary>Sets the shim of MomentCloud.set_Count(Int32 value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimHistory_Stream_Aggregation.ShimMomentCloud.AllInstances.MomentTypeGet">
            <summary>Sets the shim of MomentCloud.get_MomentType()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.ShimHistory_Stream_Aggregation.ShimMomentCloud.AllInstances.MomentTypeSetHistory_Stream_AggregationMomentType">
            <summary>Sets the shim of MomentCloud.set_MomentType(MomentType value)</summary>
        </member>
        <member name="T:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.StubEvents_Stream">
            <summary>Stub type of LightstoneApp.Infrastructure.Data.Core.Indexes.Events_Stream</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.StubEvents_Stream.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.StubEvents_Stream.ApplyReduceFunctionIfExists(Raven.Abstractions.Data.IndexQuery,System.Collections.Generic.IEnumerable{System.Object})">
            <summary>Sets the stub of AbstractIndexCreationTask`2.ApplyReduceFunctionIfExists(IndexQuery indexQuery, IEnumerable`1&lt;Object&gt; enumerable)</summary>
        </member>
        <member name="F:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.StubEvents_Stream.ApplyReduceFunctionIfExistsIndexQueryIEnumerableOfObject">
            <summary>Sets the stub of AbstractIndexCreationTask`2.ApplyReduceFunctionIfExists(IndexQuery indexQuery, IEnumerable`1&lt;Object&gt; enumerable)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.StubEvents_Stream.CreateIndexDefinition">
            <summary>Sets the stub of AbstractIndexCreationTask`2.CreateIndexDefinition()</summary>
        </member>
        <member name="F:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.StubEvents_Stream.CreateIndexDefinition01">
            <summary>Sets the stub of AbstractIndexCreationTask`2.CreateIndexDefinition()</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.StubEvents_Stream.Execute(Raven.Client.Connection.IDatabaseCommands,Raven.Client.Document.DocumentConvention)">
            <summary>Sets the stub of AbstractIndexCreationTask.Execute(IDatabaseCommands databaseCommands, DocumentConvention documentConvention)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.StubEvents_Stream.ExecuteAsync(Raven.Client.Connection.Async.IAsyncDatabaseCommands,Raven.Client.Document.DocumentConvention)">
            <summary>Sets the stub of AbstractIndexCreationTask.ExecuteAsync(IAsyncDatabaseCommands asyncDatabaseCommands, DocumentConvention documentConvention)</summary>
        </member>
        <member name="F:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.StubEvents_Stream.ExecuteAsyncIAsyncDatabaseCommandsDocumentConvention">
            <summary>Sets the stub of AbstractIndexCreationTask.ExecuteAsync(IAsyncDatabaseCommands asyncDatabaseCommands, DocumentConvention documentConvention)</summary>
        </member>
        <member name="F:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.StubEvents_Stream.ExecuteIDatabaseCommandsDocumentConvention">
            <summary>Sets the stub of AbstractIndexCreationTask.Execute(IDatabaseCommands databaseCommands, DocumentConvention documentConvention)</summary>
        </member>
        <member name="F:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.StubEvents_Stream.IndexNameGet">
            <summary>Sets the stub of AbstractIndexCreationTask.get_IndexName()</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.StubEvents_Stream.InitializeStub">
            <summary>Initializes a new instance of type StubEvents_Stream</summary>
        </member>
        <member name="F:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.StubEvents_Stream.IsMapReduceGet">
            <summary>Sets the stub of AbstractIndexCreationTask`2.get_IsMapReduce()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.StubEvents_Stream.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.StubEvents_Stream.IndexName">
            <summary>Sets the stub of AbstractIndexCreationTask.get_IndexName()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.StubEvents_Stream.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.StubEvents_Stream.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.StubEvents_Stream.IsMapReduce">
            <summary>Sets the stub of AbstractIndexCreationTask`2.get_IsMapReduce()</summary>
        </member>
        <member name="T:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.StubHistory_Stream">
            <summary>Stub type of LightstoneApp.Infrastructure.Data.Core.Indexes.History_Stream</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.StubHistory_Stream.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.StubHistory_Stream.ApplyReduceFunctionIfExists(Raven.Abstractions.Data.IndexQuery,System.Collections.Generic.IEnumerable{System.Object})">
            <summary>Sets the stub of AbstractGenericIndexCreationTask`1.ApplyReduceFunctionIfExists(IndexQuery indexQuery, IEnumerable`1&lt;Object&gt; enumerable)</summary>
        </member>
        <member name="F:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.StubHistory_Stream.ApplyReduceFunctionIfExistsIndexQueryIEnumerableOfObject">
            <summary>Sets the stub of AbstractGenericIndexCreationTask`1.ApplyReduceFunctionIfExists(IndexQuery indexQuery, IEnumerable`1&lt;Object&gt; enumerable)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.StubHistory_Stream.CreateIndexDefinition">
            <summary>Sets the stub of AbstractMultiMapIndexCreationTask`1.CreateIndexDefinition()</summary>
        </member>
        <member name="F:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.StubHistory_Stream.CreateIndexDefinition01">
            <summary>Sets the stub of AbstractMultiMapIndexCreationTask`1.CreateIndexDefinition()</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.StubHistory_Stream.Execute(Raven.Client.Connection.IDatabaseCommands,Raven.Client.Document.DocumentConvention)">
            <summary>Sets the stub of AbstractIndexCreationTask.Execute(IDatabaseCommands databaseCommands, DocumentConvention documentConvention)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.StubHistory_Stream.ExecuteAsync(Raven.Client.Connection.Async.IAsyncDatabaseCommands,Raven.Client.Document.DocumentConvention)">
            <summary>Sets the stub of AbstractIndexCreationTask.ExecuteAsync(IAsyncDatabaseCommands asyncDatabaseCommands, DocumentConvention documentConvention)</summary>
        </member>
        <member name="F:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.StubHistory_Stream.ExecuteAsyncIAsyncDatabaseCommandsDocumentConvention">
            <summary>Sets the stub of AbstractIndexCreationTask.ExecuteAsync(IAsyncDatabaseCommands asyncDatabaseCommands, DocumentConvention documentConvention)</summary>
        </member>
        <member name="F:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.StubHistory_Stream.ExecuteIDatabaseCommandsDocumentConvention">
            <summary>Sets the stub of AbstractIndexCreationTask.Execute(IDatabaseCommands databaseCommands, DocumentConvention documentConvention)</summary>
        </member>
        <member name="F:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.StubHistory_Stream.IndexNameGet">
            <summary>Sets the stub of AbstractIndexCreationTask.get_IndexName()</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.StubHistory_Stream.InitializeStub">
            <summary>Initializes a new instance of type StubHistory_Stream</summary>
        </member>
        <member name="F:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.StubHistory_Stream.IsMapReduceGet">
            <summary>Sets the stub of AbstractGenericIndexCreationTask`1.get_IsMapReduce()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.StubHistory_Stream.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.StubHistory_Stream.IndexName">
            <summary>Sets the stub of AbstractIndexCreationTask.get_IndexName()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.StubHistory_Stream.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.StubHistory_Stream.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.StubHistory_Stream.IsMapReduce">
            <summary>Sets the stub of AbstractGenericIndexCreationTask`1.get_IsMapReduce()</summary>
        </member>
        <member name="T:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.StubHistory_Stream_Aggregation">
            <summary>Stub type of LightstoneApp.Infrastructure.Data.Core.Indexes.History_Stream_Aggregation</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.StubHistory_Stream_Aggregation.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.StubHistory_Stream_Aggregation.ApplyReduceFunctionIfExists(Raven.Abstractions.Data.IndexQuery,System.Collections.Generic.IEnumerable{System.Object})">
            <summary>Sets the stub of AbstractGenericIndexCreationTask`1.ApplyReduceFunctionIfExists(IndexQuery indexQuery, IEnumerable`1&lt;Object&gt; enumerable)</summary>
        </member>
        <member name="F:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.StubHistory_Stream_Aggregation.ApplyReduceFunctionIfExistsIndexQueryIEnumerableOfObject">
            <summary>Sets the stub of AbstractGenericIndexCreationTask`1.ApplyReduceFunctionIfExists(IndexQuery indexQuery, IEnumerable`1&lt;Object&gt; enumerable)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.StubHistory_Stream_Aggregation.CreateIndexDefinition">
            <summary>Sets the stub of AbstractMultiMapIndexCreationTask`1.CreateIndexDefinition()</summary>
        </member>
        <member name="F:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.StubHistory_Stream_Aggregation.CreateIndexDefinition01">
            <summary>Sets the stub of AbstractMultiMapIndexCreationTask`1.CreateIndexDefinition()</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.StubHistory_Stream_Aggregation.Execute(Raven.Client.Connection.IDatabaseCommands,Raven.Client.Document.DocumentConvention)">
            <summary>Sets the stub of AbstractIndexCreationTask.Execute(IDatabaseCommands databaseCommands, DocumentConvention documentConvention)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.StubHistory_Stream_Aggregation.ExecuteAsync(Raven.Client.Connection.Async.IAsyncDatabaseCommands,Raven.Client.Document.DocumentConvention)">
            <summary>Sets the stub of AbstractIndexCreationTask.ExecuteAsync(IAsyncDatabaseCommands asyncDatabaseCommands, DocumentConvention documentConvention)</summary>
        </member>
        <member name="F:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.StubHistory_Stream_Aggregation.ExecuteAsyncIAsyncDatabaseCommandsDocumentConvention">
            <summary>Sets the stub of AbstractIndexCreationTask.ExecuteAsync(IAsyncDatabaseCommands asyncDatabaseCommands, DocumentConvention documentConvention)</summary>
        </member>
        <member name="F:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.StubHistory_Stream_Aggregation.ExecuteIDatabaseCommandsDocumentConvention">
            <summary>Sets the stub of AbstractIndexCreationTask.Execute(IDatabaseCommands databaseCommands, DocumentConvention documentConvention)</summary>
        </member>
        <member name="F:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.StubHistory_Stream_Aggregation.IndexNameGet">
            <summary>Sets the stub of AbstractIndexCreationTask.get_IndexName()</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.StubHistory_Stream_Aggregation.InitializeStub">
            <summary>Initializes a new instance of type StubHistory_Stream_Aggregation</summary>
        </member>
        <member name="F:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.StubHistory_Stream_Aggregation.IsMapReduceGet">
            <summary>Sets the stub of AbstractGenericIndexCreationTask`1.get_IsMapReduce()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.StubHistory_Stream_Aggregation.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.StubHistory_Stream_Aggregation.IndexName">
            <summary>Sets the stub of AbstractIndexCreationTask.get_IndexName()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.StubHistory_Stream_Aggregation.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.StubHistory_Stream_Aggregation.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Indexes.Fakes.StubHistory_Stream_Aggregation.IsMapReduce">
            <summary>Sets the stub of AbstractGenericIndexCreationTask`1.get_IsMapReduce()</summary>
        </member>
        <member name="T:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandException">
            <summary>Shim type of LightstoneApp.Infrastructure.Data.Core.Requests.CommandException</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandException.#ctor(LightstoneApp.Infrastructure.Data.Core.Requests.CommandException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandException.CommandGet">
            <summary>Sets the shim of CommandException.get_Command()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandException.CommandSetObject">
            <summary>Sets the shim of CommandException.set_Command(Object value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandException.Constructor">
            <summary>Sets the shim of CommandException.CommandException()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandException.ConstructorStringObjectStringException">
            <summary>Sets the shim of CommandException.CommandException(String correlationId, Object rawCommand, String userAccount, Exception error)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandException.CorrelationIdGet">
            <summary>Sets the shim of CommandException.get_CorrelationId()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandException.CorrelationIdSetString">
            <summary>Sets the shim of CommandException.set_CorrelationId(String value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandException.CreatedOnGet">
            <summary>Sets the shim of CommandException.get_CreatedOn()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandException.CreatedOnSetDateTimeOffset">
            <summary>Sets the shim of CommandException.set_CreatedOn(DateTimeOffset value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandException.ErrorGet">
            <summary>Sets the shim of CommandException.get_Error()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandException.ErrorSetException">
            <summary>Sets the shim of CommandException.set_Error(Exception value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandException.IdGet">
            <summary>Sets the shim of CommandException.get_Id()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandException.IdSetString">
            <summary>Sets the shim of CommandException.set_Id(String value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandException.UserAccountGet">
            <summary>Sets the shim of CommandException.get_UserAccount()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandException.UserAccountSetString">
            <summary>Sets the shim of CommandException.set_UserAccount(String value)</summary>
        </member>
        <member name="T:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandException.AllInstances.CommandGet">
            <summary>Sets the shim of CommandException.get_Command()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandException.AllInstances.CommandSetObject">
            <summary>Sets the shim of CommandException.set_Command(Object value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandException.AllInstances.CorrelationIdGet">
            <summary>Sets the shim of CommandException.get_CorrelationId()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandException.AllInstances.CorrelationIdSetString">
            <summary>Sets the shim of CommandException.set_CorrelationId(String value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandException.AllInstances.CreatedOnGet">
            <summary>Sets the shim of CommandException.get_CreatedOn()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandException.AllInstances.CreatedOnSetDateTimeOffset">
            <summary>Sets the shim of CommandException.set_CreatedOn(DateTimeOffset value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandException.AllInstances.ErrorGet">
            <summary>Sets the shim of CommandException.get_Error()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandException.AllInstances.ErrorSetException">
            <summary>Sets the shim of CommandException.set_Error(Exception value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandException.AllInstances.IdGet">
            <summary>Sets the shim of CommandException.get_Id()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandException.AllInstances.IdSetString">
            <summary>Sets the shim of CommandException.set_Id(String value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandException.AllInstances.UserAccountGet">
            <summary>Sets the shim of CommandException.get_UserAccount()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandException.AllInstances.UserAccountSetString">
            <summary>Sets the shim of CommandException.set_UserAccount(String value)</summary>
        </member>
        <member name="T:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandRequest">
            <summary>Shim type of LightstoneApp.Infrastructure.Data.Core.Requests.CommandRequest</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandRequest.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandRequest.#ctor(LightstoneApp.Infrastructure.Data.Core.Requests.CommandRequest)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandRequest.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandRequest.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandRequest.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandRequest.CommandGet">
            <summary>Sets the shim of CommandRequest.get_Command()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandRequest.CommandSetObject">
            <summary>Sets the shim of CommandRequest.set_Command(Object value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandRequest.Constructor">
            <summary>Sets the shim of CommandRequest.CommandRequest()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandRequest.ConstructorStringObjectString">
            <summary>Sets the shim of CommandRequest.CommandRequest(String correlationId, Object rawCommand, String userAccount)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandRequest.CorrelationIdGet">
            <summary>Sets the shim of CommandRequest.get_CorrelationId()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandRequest.CorrelationIdSetString">
            <summary>Sets the shim of CommandRequest.set_CorrelationId(String value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandRequest.CreatedOnGet">
            <summary>Sets the shim of CommandRequest.get_CreatedOn()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandRequest.CreatedOnSetDateTimeOffset">
            <summary>Sets the shim of CommandRequest.set_CreatedOn(DateTimeOffset value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandRequest.IdGet">
            <summary>Sets the shim of CommandRequest.get_Id()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandRequest.IdSetString">
            <summary>Sets the shim of CommandRequest.set_Id(String value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandRequest.UserAccountGet">
            <summary>Sets the shim of CommandRequest.get_UserAccount()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandRequest.UserAccountSetString">
            <summary>Sets the shim of CommandRequest.set_UserAccount(String value)</summary>
        </member>
        <member name="T:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandRequest.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandRequest.AllInstances.CommandGet">
            <summary>Sets the shim of CommandRequest.get_Command()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandRequest.AllInstances.CommandSetObject">
            <summary>Sets the shim of CommandRequest.set_Command(Object value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandRequest.AllInstances.CorrelationIdGet">
            <summary>Sets the shim of CommandRequest.get_CorrelationId()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandRequest.AllInstances.CorrelationIdSetString">
            <summary>Sets the shim of CommandRequest.set_CorrelationId(String value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandRequest.AllInstances.CreatedOnGet">
            <summary>Sets the shim of CommandRequest.get_CreatedOn()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandRequest.AllInstances.CreatedOnSetDateTimeOffset">
            <summary>Sets the shim of CommandRequest.set_CreatedOn(DateTimeOffset value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandRequest.AllInstances.IdGet">
            <summary>Sets the shim of CommandRequest.get_Id()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandRequest.AllInstances.IdSetString">
            <summary>Sets the shim of CommandRequest.set_Id(String value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandRequest.AllInstances.UserAccountGet">
            <summary>Sets the shim of CommandRequest.get_UserAccount()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandRequest.AllInstances.UserAccountSetString">
            <summary>Sets the shim of CommandRequest.set_UserAccount(String value)</summary>
        </member>
        <member name="T:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandResponse">
            <summary>Shim type of LightstoneApp.Infrastructure.Data.Core.Requests.CommandResponse</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandResponse.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandResponse.#ctor(LightstoneApp.Infrastructure.Data.Core.Requests.CommandResponse)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandResponse.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandResponse.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandResponse.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandResponse.Constructor">
            <summary>Sets the shim of CommandResponse.CommandResponse()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandResponse.ConstructorStringObjectString">
            <summary>Sets the shim of CommandResponse.CommandResponse(String correlationId, Object rawResponse, String userAccount)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandResponse.CorrelationIdGet">
            <summary>Sets the shim of CommandResponse.get_CorrelationId()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandResponse.CorrelationIdSetString">
            <summary>Sets the shim of CommandResponse.set_CorrelationId(String value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandResponse.CreatedOnGet">
            <summary>Sets the shim of CommandResponse.get_CreatedOn()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandResponse.CreatedOnSetDateTimeOffset">
            <summary>Sets the shim of CommandResponse.set_CreatedOn(DateTimeOffset value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandResponse.IdGet">
            <summary>Sets the shim of CommandResponse.get_Id()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandResponse.IdSetString">
            <summary>Sets the shim of CommandResponse.set_Id(String value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandResponse.ResponseGet">
            <summary>Sets the shim of CommandResponse.get_Response()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandResponse.ResponseSetObject">
            <summary>Sets the shim of CommandResponse.set_Response(Object value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandResponse.UserAccountGet">
            <summary>Sets the shim of CommandResponse.get_UserAccount()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandResponse.UserAccountSetString">
            <summary>Sets the shim of CommandResponse.set_UserAccount(String value)</summary>
        </member>
        <member name="T:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandResponse.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandResponse.AllInstances.CorrelationIdGet">
            <summary>Sets the shim of CommandResponse.get_CorrelationId()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandResponse.AllInstances.CorrelationIdSetString">
            <summary>Sets the shim of CommandResponse.set_CorrelationId(String value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandResponse.AllInstances.CreatedOnGet">
            <summary>Sets the shim of CommandResponse.get_CreatedOn()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandResponse.AllInstances.CreatedOnSetDateTimeOffset">
            <summary>Sets the shim of CommandResponse.set_CreatedOn(DateTimeOffset value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandResponse.AllInstances.IdGet">
            <summary>Sets the shim of CommandResponse.get_Id()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandResponse.AllInstances.IdSetString">
            <summary>Sets the shim of CommandResponse.set_Id(String value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandResponse.AllInstances.ResponseGet">
            <summary>Sets the shim of CommandResponse.get_Response()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandResponse.AllInstances.ResponseSetObject">
            <summary>Sets the shim of CommandResponse.set_Response(Object value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandResponse.AllInstances.UserAccountGet">
            <summary>Sets the shim of CommandResponse.get_UserAccount()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.ShimCommandResponse.AllInstances.UserAccountSetString">
            <summary>Sets the shim of CommandResponse.set_UserAccount(String value)</summary>
        </member>
        <member name="T:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.StubCommandException">
            <summary>Stub type of LightstoneApp.Infrastructure.Data.Core.Requests.CommandException</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.StubCommandException.#ctor(System.String,System.Object,System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.StubCommandException.InitializeStub">
            <summary>Initializes a new instance of type StubCommandException</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.StubCommandException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.StubCommandException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.StubCommandException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.StubCommandRequest">
            <summary>Stub type of LightstoneApp.Infrastructure.Data.Core.Requests.CommandRequest</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.StubCommandRequest.#ctor(System.String,System.Object,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.StubCommandRequest.InitializeStub">
            <summary>Initializes a new instance of type StubCommandRequest</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.StubCommandRequest.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.StubCommandRequest.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.StubCommandRequest.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.StubCommandResponse">
            <summary>Stub type of LightstoneApp.Infrastructure.Data.Core.Requests.CommandResponse</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.StubCommandResponse.#ctor(System.String,System.Object,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.StubCommandResponse.InitializeStub">
            <summary>Initializes a new instance of type StubCommandResponse</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.StubCommandResponse.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.StubCommandResponse.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Requests.Fakes.StubCommandResponse.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:LightstoneApp.Infrastructure.Data.Core.Runtime.Fakes.ShimOperationContext">
            <summary>Shim type of LightstoneApp.Infrastructure.Data.Core.Runtime.OperationContext</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Runtime.Fakes.ShimOperationContext.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Runtime.Fakes.ShimOperationContext.#ctor(LightstoneApp.Infrastructure.Data.Core.Runtime.OperationContext)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Runtime.Fakes.ShimOperationContext.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Runtime.Fakes.ShimOperationContext.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Runtime.Fakes.ShimOperationContext.Bind(LightstoneApp.Infrastructure.CrossCutting.NetFramework.IOperationContext)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Runtime.Fakes.ShimOperationContext.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Runtime.Fakes.ShimOperationContext.GetOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0})">
            <summary>Sets the shim of OperationContext.Get(String key)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Runtime.Fakes.ShimOperationContext.AddStringObject">
            <summary>Sets the shim of OperationContext.Add(String key, Object value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Runtime.Fakes.ShimOperationContext.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Runtime.Fakes.ShimOperationContext.Constructor">
            <summary>Sets the shim of OperationContext.OperationContext()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Runtime.Fakes.ShimOperationContext.CorrelationIdGet">
            <summary>Sets the shim of OperationContext.get_CorrelationId()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Runtime.Fakes.ShimOperationContext.CorrelationIdSetString">
            <summary>Sets the shim of OperationContext.set_CorrelationId(String value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Runtime.Fakes.ShimOperationContext.Dispose">
            <summary>Sets the shim of OperationContext.Dispose()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Runtime.Fakes.ShimOperationContext.ForOperationString">
            <summary>Sets the shim of OperationContext.ForOperation(String correlationId)</summary>
        </member>
        <member name="T:LightstoneApp.Infrastructure.Data.Core.Runtime.Fakes.ShimOperationContext.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Runtime.Fakes.ShimOperationContext.AllInstances.GetOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{LightstoneApp.Infrastructure.Data.Core.Runtime.OperationContext,System.String,``0})">
            <summary>Sets the shim of OperationContext.Get(String key)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Runtime.Fakes.ShimOperationContext.AllInstances.AddStringObject">
            <summary>Sets the shim of OperationContext.Add(String key, Object value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Runtime.Fakes.ShimOperationContext.AllInstances.CorrelationIdGet">
            <summary>Sets the shim of OperationContext.get_CorrelationId()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Runtime.Fakes.ShimOperationContext.AllInstances.CorrelationIdSetString">
            <summary>Sets the shim of OperationContext.set_CorrelationId(String value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Runtime.Fakes.ShimOperationContext.AllInstances.Dispose">
            <summary>Sets the shim of OperationContext.Dispose()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Runtime.Fakes.ShimOperationContext.AllInstances.ForOperationString">
            <summary>Sets the shim of OperationContext.ForOperation(String correlationId)</summary>
        </member>
        <member name="T:LightstoneApp.Infrastructure.Data.Core.Runtime.Fakes.StubOperationContext">
            <summary>Stub type of LightstoneApp.Infrastructure.Data.Core.Runtime.OperationContext</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Runtime.Fakes.StubOperationContext.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Runtime.Fakes.StubOperationContext.InitializeStub">
            <summary>Initializes a new instance of type StubOperationContext</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Runtime.Fakes.StubOperationContext.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Runtime.Fakes.StubOperationContext.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Runtime.Fakes.StubOperationContext.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:LightstoneApp.Infrastructure.Data.Core.Security.Events.Fakes.ShimUserCreated">
            <summary>Shim type of LightstoneApp.Infrastructure.Data.Core.Security.Events.UserCreated</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Security.Events.Fakes.ShimUserCreated.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Security.Events.Fakes.ShimUserCreated.#ctor(LightstoneApp.Infrastructure.Data.Core.Security.Events.UserCreated)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Security.Events.Fakes.ShimUserCreated.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Security.Events.Fakes.ShimUserCreated.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Security.Events.Fakes.ShimUserCreated.Bind(LightstoneApp.Infrastructure.CrossCutting.NetFramework.IDomainEvent)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Security.Events.Fakes.ShimUserCreated.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Security.Events.Fakes.ShimUserCreated.ConstructorStringStringString">
            <summary>Sets the shim of UserCreated.UserCreated(String aggregateId, String fullName, String username)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Security.Events.Fakes.ShimUserCreated.FullNameGet">
            <summary>Sets the shim of UserCreated.get_FullName()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Security.Events.Fakes.ShimUserCreated.FullNameSetString">
            <summary>Sets the shim of UserCreated.set_FullName(String value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Security.Events.Fakes.ShimUserCreated.UsernameGet">
            <summary>Sets the shim of UserCreated.get_Username()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Security.Events.Fakes.ShimUserCreated.UsernameSetString">
            <summary>Sets the shim of UserCreated.set_Username(String value)</summary>
        </member>
        <member name="T:LightstoneApp.Infrastructure.Data.Core.Security.Events.Fakes.ShimUserCreated.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Security.Events.Fakes.ShimUserCreated.AllInstances.FullNameGet">
            <summary>Sets the shim of UserCreated.get_FullName()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Security.Events.Fakes.ShimUserCreated.AllInstances.FullNameSetString">
            <summary>Sets the shim of UserCreated.set_FullName(String value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Security.Events.Fakes.ShimUserCreated.AllInstances.UsernameGet">
            <summary>Sets the shim of UserCreated.get_Username()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Security.Events.Fakes.ShimUserCreated.AllInstances.UsernameSetString">
            <summary>Sets the shim of UserCreated.set_Username(String value)</summary>
        </member>
        <member name="T:LightstoneApp.Infrastructure.Data.Core.Security.Events.Fakes.StubUserCreated">
            <summary>Stub type of LightstoneApp.Infrastructure.Data.Core.Security.Events.UserCreated</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Security.Events.Fakes.StubUserCreated.#ctor(System.String,System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Security.Events.Fakes.StubUserCreated.InitializeStub">
            <summary>Initializes a new instance of type StubUserCreated</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Security.Events.Fakes.StubUserCreated.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Security.Events.Fakes.StubUserCreated.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Security.Events.Fakes.StubUserCreated.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:LightstoneApp.Infrastructure.Data.Core.Security.Fakes.ShimUser">
            <summary>Shim type of LightstoneApp.Infrastructure.Data.Core.Security.User</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Security.Fakes.ShimUser.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Security.Fakes.ShimUser.#ctor(LightstoneApp.Infrastructure.Data.Core.Security.User)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Security.Fakes.ShimUser.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Security.Fakes.ShimUser.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Security.Fakes.ShimUser.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Security.Fakes.ShimUser.Constructor">
            <summary>Sets the shim of User.User()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Security.Fakes.ShimUser.FullNameGet">
            <summary>Sets the shim of User.get_FullName()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Security.Fakes.ShimUser.FullNameSetString">
            <summary>Sets the shim of User.set_FullName(String value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Security.Fakes.ShimUser.SetupCompleted">
            <summary>Sets the shim of User.SetupCompleted()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Security.Fakes.ShimUser.UsernameGet">
            <summary>Sets the shim of User.get_Username()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Security.Fakes.ShimUser.UsernameSetString">
            <summary>Sets the shim of User.set_Username(String value)</summary>
        </member>
        <member name="T:LightstoneApp.Infrastructure.Data.Core.Security.Fakes.ShimUser.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Security.Fakes.ShimUser.AllInstances.FullNameGet">
            <summary>Sets the shim of User.get_FullName()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Security.Fakes.ShimUser.AllInstances.FullNameSetString">
            <summary>Sets the shim of User.set_FullName(String value)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Security.Fakes.ShimUser.AllInstances.SetupCompleted">
            <summary>Sets the shim of User.SetupCompleted()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Security.Fakes.ShimUser.AllInstances.UsernameGet">
            <summary>Sets the shim of User.get_Username()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Security.Fakes.ShimUser.AllInstances.UsernameSetString">
            <summary>Sets the shim of User.set_Username(String value)</summary>
        </member>
        <member name="T:LightstoneApp.Infrastructure.Data.Core.Security.Fakes.ShimUser.ShimFactory">
            <summary>Shim type of LightstoneApp.Infrastructure.Data.Core.Security.User+Factory</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Security.Fakes.ShimUser.ShimFactory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Security.Fakes.ShimUser.ShimFactory.#ctor(LightstoneApp.Infrastructure.Data.Core.Security.User.Factory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Security.Fakes.ShimUser.ShimFactory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Security.Fakes.ShimUser.ShimFactory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Security.Fakes.ShimUser.ShimFactory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Security.Fakes.ShimUser.ShimFactory.Constructor">
            <summary>Sets the shim of Factory.Factory()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Security.Fakes.ShimUser.ShimFactory.CreatePersonStringString">
            <summary>Sets the shim of Factory.CreatePerson(String firstName, String lastName)</summary>
        </member>
        <member name="T:LightstoneApp.Infrastructure.Data.Core.Security.Fakes.ShimUser.ShimFactory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Security.Fakes.ShimUser.ShimFactory.AllInstances.CreatePersonStringString">
            <summary>Sets the shim of Factory.CreatePerson(String firstName, String lastName)</summary>
        </member>
        <member name="T:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.ShimQueryableUtils">
            <summary>Shim type of LightstoneApp.Infrastructure.Data.Core.Seedwork.QueryableUtils</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.ShimQueryableUtils.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.ShimQueryableUtils.#ctor(LightstoneApp.Infrastructure.Data.Core.Seedwork.QueryableUtils)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.ShimQueryableUtils.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.ShimQueryableUtils.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.ShimQueryableUtils.CallOrderByOf1IQueryableOfM0StringBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},System.String,System.Boolean,System.Linq.IQueryable{``0}})">
            <summary>Sets the shim of QueryableUtils.CallOrderBy(IQueryable`1&lt;!!0&gt; source, String propertyName, Boolean ascending)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.ShimQueryableUtils.GenerateSelectorOf1StringTypeOut``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{System.String,System.Type,System.Linq.Expressions.LambdaExpression})">
            <summary>Sets the shim of QueryableUtils.GenerateSelector(String propertyName, Type&amp; resultType)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.ShimQueryableUtils.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.ShimQueryableUtils.Constructor">
            <summary>Sets the shim of QueryableUtils.QueryableUtils()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.ShimQueryableUtils.StaticConstructor">
            <summary>Sets the shim of QueryableUtils.QueryableUtils()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.ShimQueryableUtils._cctorb__0MethodInfo">
            <summary>Sets the shim of QueryableUtils.&lt;.cctor&gt;b__0(MethodInfo method)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.ShimQueryableUtils._cctorb__1MethodInfo">
            <summary>Sets the shim of QueryableUtils.&lt;.cctor&gt;b__1(MethodInfo method)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.ShimQueryableUtils._cctorb__2MethodInfo">
            <summary>Sets the shim of QueryableUtils.&lt;.cctor&gt;b__2(MethodInfo method)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.ShimQueryableUtils._cctorb__3MethodInfo">
            <summary>Sets the shim of QueryableUtils.&lt;.cctor&gt;b__3(MethodInfo method)</summary>
        </member>
        <member name="T:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.ShimQueryableUtils.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.ShimRepository`1">
            <summary>Shim type of LightstoneApp.Infrastructure.Data.Core.Seedwork.Repository`1</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.ShimRepository`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.ShimRepository`1.#ctor(LightstoneApp.Infrastructure.Data.Core.Seedwork.Repository{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.ShimRepository`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.ShimRepository`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.ShimRepository`1.Bind(LightstoneApp.Domain.Core.Seedwork.IRepository{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.ShimRepository`1.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.ShimRepository`1.AddT0">
            <summary>Sets the shim of Repository`1.Add(!0 item)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.ShimRepository`1.AllMatchingAsyncExpressionOfFuncOfT0BooleanListOfString">
            <summary>Sets the shim of Repository`1.AllMatchingAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; filter, List`1&lt;String&gt; includes)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.ShimRepository`1.AllMatchingCountAsyncExpressionOfFuncOfT0BooleanListOfString">
            <summary>Sets the shim of Repository`1.AllMatchingCountAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; filter, List`1&lt;String&gt; includes)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.ShimRepository`1.AllMatchingCountExpressionOfFuncOfT0BooleanListOfString">
            <summary>Sets the shim of Repository`1.AllMatchingCount(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; filter, List`1&lt;String&gt; includes)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.ShimRepository`1.AllMatchingExpressionOfFuncOfT0BooleanListOfString">
            <summary>Sets the shim of Repository`1.AllMatching(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; filter, List`1&lt;String&gt; includes)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.ShimRepository`1.AllMatchingPagedAsyncExpressionOfFuncOfT0BooleanListOfStringInt32Int32ListOfStringBoolean">
            <summary>Sets the shim of Repository`1.AllMatchingPagedAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; filter, List`1&lt;String&gt; includes, Int32 pageGo, Int32 pageSize, List`1&lt;String&gt; orderBy, Boolean orderAscendent)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.ShimRepository`1.AllMatchingPagedExpressionOfFuncOfT0BooleanListOfStringInt32Int32ListOfStringBoolean">
            <summary>Sets the shim of Repository`1.AllMatchingPaged(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; filter, List`1&lt;String&gt; includes, Int32 pageGo, Int32 pageSize, List`1&lt;String&gt; orderBy, Boolean orderAscendent)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.ShimRepository`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.ShimRepository`1.ConstructorIUnitOfWork">
            <summary>Sets the shim of Repository`1.Repository`1(IUnitOfWork unitOfWork)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.ShimRepository`1.Dispose">
            <summary>Sets the shim of Repository`1.Dispose()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.ShimRepository`1.GetAllAsyncListOfString">
            <summary>Sets the shim of Repository`1.GetAllAsync(List`1&lt;String&gt; includes)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.ShimRepository`1.GetAllListOfString">
            <summary>Sets the shim of Repository`1.GetAll(List`1&lt;String&gt; includes)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.ShimRepository`1.GetAsyncListOfObject">
            <summary>Sets the shim of Repository`1.GetAsync(List`1&lt;Object&gt; keyValues)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.ShimRepository`1.GetListOfObject">
            <summary>Sets the shim of Repository`1.Get(List`1&lt;Object&gt; keyValues)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.ShimRepository`1.MergeT0T0">
            <summary>Sets the shim of Repository`1.Merge(!0 persisted, !0 current)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.ShimRepository`1.ModifyT0">
            <summary>Sets the shim of Repository`1.Modify(!0 item)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.ShimRepository`1.RemoveT0">
            <summary>Sets the shim of Repository`1.Remove(!0 item)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.ShimRepository`1.UnitOfWorkGet">
            <summary>Sets the shim of Repository`1.get_UnitOfWork()</summary>
        </member>
        <member name="T:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.ShimRepository`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.ShimRepository`1.AllInstances.AddT0">
            <summary>Sets the shim of Repository`1.Add(!0 item)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.ShimRepository`1.AllInstances.AllMatchingAsyncExpressionOfFuncOfT0BooleanListOfString">
            <summary>Sets the shim of Repository`1.AllMatchingAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; filter, List`1&lt;String&gt; includes)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.ShimRepository`1.AllInstances.AllMatchingCountAsyncExpressionOfFuncOfT0BooleanListOfString">
            <summary>Sets the shim of Repository`1.AllMatchingCountAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; filter, List`1&lt;String&gt; includes)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.ShimRepository`1.AllInstances.AllMatchingCountExpressionOfFuncOfT0BooleanListOfString">
            <summary>Sets the shim of Repository`1.AllMatchingCount(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; filter, List`1&lt;String&gt; includes)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.ShimRepository`1.AllInstances.AllMatchingExpressionOfFuncOfT0BooleanListOfString">
            <summary>Sets the shim of Repository`1.AllMatching(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; filter, List`1&lt;String&gt; includes)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.ShimRepository`1.AllInstances.AllMatchingPagedAsyncExpressionOfFuncOfT0BooleanListOfStringInt32Int32ListOfStringBoolean">
            <summary>Sets the shim of Repository`1.AllMatchingPagedAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; filter, List`1&lt;String&gt; includes, Int32 pageGo, Int32 pageSize, List`1&lt;String&gt; orderBy, Boolean orderAscendent)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.ShimRepository`1.AllInstances.AllMatchingPagedExpressionOfFuncOfT0BooleanListOfStringInt32Int32ListOfStringBoolean">
            <summary>Sets the shim of Repository`1.AllMatchingPaged(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; filter, List`1&lt;String&gt; includes, Int32 pageGo, Int32 pageSize, List`1&lt;String&gt; orderBy, Boolean orderAscendent)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.ShimRepository`1.AllInstances.Dispose">
            <summary>Sets the shim of Repository`1.Dispose()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.ShimRepository`1.AllInstances.GetAllAsyncListOfString">
            <summary>Sets the shim of Repository`1.GetAllAsync(List`1&lt;String&gt; includes)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.ShimRepository`1.AllInstances.GetAllListOfString">
            <summary>Sets the shim of Repository`1.GetAll(List`1&lt;String&gt; includes)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.ShimRepository`1.AllInstances.GetAsyncListOfObject">
            <summary>Sets the shim of Repository`1.GetAsync(List`1&lt;Object&gt; keyValues)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.ShimRepository`1.AllInstances.GetListOfObject">
            <summary>Sets the shim of Repository`1.Get(List`1&lt;Object&gt; keyValues)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.ShimRepository`1.AllInstances.MergeT0T0">
            <summary>Sets the shim of Repository`1.Merge(!0 persisted, !0 current)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.ShimRepository`1.AllInstances.ModifyT0">
            <summary>Sets the shim of Repository`1.Modify(!0 item)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.ShimRepository`1.AllInstances.RemoveT0">
            <summary>Sets the shim of Repository`1.Remove(!0 item)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.ShimRepository`1.AllInstances.UnitOfWorkGet">
            <summary>Sets the shim of Repository`1.get_UnitOfWork()</summary>
        </member>
        <member name="T:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.ShimTrackUtils">
            <summary>Shim type of LightstoneApp.Infrastructure.Data.Core.Seedwork.TrackUtils</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.ShimTrackUtils.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.ShimTrackUtils.#ctor(LightstoneApp.Infrastructure.Data.Core.Seedwork.TrackUtils)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.ShimTrackUtils.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.ShimTrackUtils.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.ShimTrackUtils.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.ShimTrackUtils.Constructor">
            <summary>Sets the shim of TrackUtils.TrackUtils()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.ShimTrackUtils.GetEntityStateNullableOfTrackState">
            <summary>Sets the shim of TrackUtils.GetEntityState(Nullable`1&lt;TrackState&gt; entityState)</summary>
        </member>
        <member name="T:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.ShimTrackUtils.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.StubQueryableUtils">
            <summary>Stub type of LightstoneApp.Infrastructure.Data.Core.Seedwork.QueryableUtils</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.StubQueryableUtils.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.StubQueryableUtils.InitializeStub">
            <summary>Initializes a new instance of type StubQueryableUtils</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.StubQueryableUtils.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.StubQueryableUtils.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.StubQueryableUtils.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.StubRepository`1">
            <summary>Stub type of LightstoneApp.Infrastructure.Data.Core.Seedwork.Repository`1</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.StubRepository`1.#ctor(LightstoneApp.Domain.Core.Seedwork.IUnitOfWork)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.StubRepository`1.Add(`0)">
            <summary>Sets the stub of Repository`1.Add(!0 item)</summary>
        </member>
        <member name="F:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.StubRepository`1.AddT0">
            <summary>Sets the stub of Repository`1.Add(!0 item)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.StubRepository`1.AllMatching(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Collections.Generic.List{System.String})">
            <summary>Sets the stub of Repository`1.AllMatching(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; filter, List`1&lt;String&gt; includes)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.StubRepository`1.AllMatchingAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Collections.Generic.List{System.String})">
            <summary>Sets the stub of Repository`1.AllMatchingAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; filter, List`1&lt;String&gt; includes)</summary>
        </member>
        <member name="F:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.StubRepository`1.AllMatchingAsyncExpressionOfFuncOfT0BooleanListOfString">
            <summary>Sets the stub of Repository`1.AllMatchingAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; filter, List`1&lt;String&gt; includes)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.StubRepository`1.AllMatchingCount(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Collections.Generic.List{System.String})">
            <summary>Sets the stub of Repository`1.AllMatchingCount(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; filter, List`1&lt;String&gt; includes)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.StubRepository`1.AllMatchingCountAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Collections.Generic.List{System.String})">
            <summary>Sets the stub of Repository`1.AllMatchingCountAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; filter, List`1&lt;String&gt; includes)</summary>
        </member>
        <member name="F:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.StubRepository`1.AllMatchingCountAsyncExpressionOfFuncOfT0BooleanListOfString">
            <summary>Sets the stub of Repository`1.AllMatchingCountAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; filter, List`1&lt;String&gt; includes)</summary>
        </member>
        <member name="F:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.StubRepository`1.AllMatchingCountExpressionOfFuncOfT0BooleanListOfString">
            <summary>Sets the stub of Repository`1.AllMatchingCount(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; filter, List`1&lt;String&gt; includes)</summary>
        </member>
        <member name="F:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.StubRepository`1.AllMatchingExpressionOfFuncOfT0BooleanListOfString">
            <summary>Sets the stub of Repository`1.AllMatching(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; filter, List`1&lt;String&gt; includes)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.StubRepository`1.AllMatchingPaged(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Collections.Generic.List{System.String},System.Int32,System.Int32,System.Collections.Generic.List{System.String},System.Boolean)">
            <summary>Sets the stub of Repository`1.AllMatchingPaged(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; filter, List`1&lt;String&gt; includes, Int32 pageGo, Int32 pageSize, List`1&lt;String&gt; orderBy, Boolean orderAscendent)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.StubRepository`1.AllMatchingPagedAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Collections.Generic.List{System.String},System.Int32,System.Int32,System.Collections.Generic.List{System.String},System.Boolean)">
            <summary>Sets the stub of Repository`1.AllMatchingPagedAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; filter, List`1&lt;String&gt; includes, Int32 pageGo, Int32 pageSize, List`1&lt;String&gt; orderBy, Boolean orderAscendent)</summary>
        </member>
        <member name="F:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.StubRepository`1.AllMatchingPagedAsyncExpressionOfFuncOfT0BooleanListOfStringInt32Int32ListOfStringBoolean">
            <summary>Sets the stub of Repository`1.AllMatchingPagedAsync(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; filter, List`1&lt;String&gt; includes, Int32 pageGo, Int32 pageSize, List`1&lt;String&gt; orderBy, Boolean orderAscendent)</summary>
        </member>
        <member name="F:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.StubRepository`1.AllMatchingPagedExpressionOfFuncOfT0BooleanListOfStringInt32Int32ListOfStringBoolean">
            <summary>Sets the stub of Repository`1.AllMatchingPaged(Expression`1&lt;Func`2&lt;!0,Boolean&gt;&gt; filter, List`1&lt;String&gt; includes, Int32 pageGo, Int32 pageSize, List`1&lt;String&gt; orderBy, Boolean orderAscendent)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.StubRepository`1.Get(System.Collections.Generic.List{System.Object})">
            <summary>Sets the stub of Repository`1.Get(List`1&lt;Object&gt; keyValues)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.StubRepository`1.GetAll(System.Collections.Generic.List{System.String})">
            <summary>Sets the stub of Repository`1.GetAll(List`1&lt;String&gt; includes)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.StubRepository`1.GetAllAsync(System.Collections.Generic.List{System.String})">
            <summary>Sets the stub of Repository`1.GetAllAsync(List`1&lt;String&gt; includes)</summary>
        </member>
        <member name="F:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.StubRepository`1.GetAllAsyncListOfString">
            <summary>Sets the stub of Repository`1.GetAllAsync(List`1&lt;String&gt; includes)</summary>
        </member>
        <member name="F:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.StubRepository`1.GetAllListOfString">
            <summary>Sets the stub of Repository`1.GetAll(List`1&lt;String&gt; includes)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.StubRepository`1.GetAsync(System.Collections.Generic.List{System.Object})">
            <summary>Sets the stub of Repository`1.GetAsync(List`1&lt;Object&gt; keyValues)</summary>
        </member>
        <member name="F:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.StubRepository`1.GetAsyncListOfObject">
            <summary>Sets the stub of Repository`1.GetAsync(List`1&lt;Object&gt; keyValues)</summary>
        </member>
        <member name="F:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.StubRepository`1.GetListOfObject">
            <summary>Sets the stub of Repository`1.Get(List`1&lt;Object&gt; keyValues)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.StubRepository`1.InitializeStub">
            <summary>Initializes a new instance of type StubRepository</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.StubRepository`1.Merge(`0,`0)">
            <summary>Sets the stub of Repository`1.Merge(!0 persisted, !0 current)</summary>
        </member>
        <member name="F:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.StubRepository`1.MergeT0T0">
            <summary>Sets the stub of Repository`1.Merge(!0 persisted, !0 current)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.StubRepository`1.Modify(`0)">
            <summary>Sets the stub of Repository`1.Modify(!0 item)</summary>
        </member>
        <member name="F:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.StubRepository`1.ModifyT0">
            <summary>Sets the stub of Repository`1.Modify(!0 item)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.StubRepository`1.Remove(`0)">
            <summary>Sets the stub of Repository`1.Remove(!0 item)</summary>
        </member>
        <member name="F:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.StubRepository`1.RemoveT0">
            <summary>Sets the stub of Repository`1.Remove(!0 item)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.StubRepository`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.StubRepository`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.StubRepository`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.StubTrackUtils">
            <summary>Stub type of LightstoneApp.Infrastructure.Data.Core.Seedwork.TrackUtils</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.StubTrackUtils.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.StubTrackUtils.InitializeStub">
            <summary>Initializes a new instance of type StubTrackUtils</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.StubTrackUtils.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.StubTrackUtils.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Seedwork.Fakes.StubTrackUtils.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:LightstoneApp.Infrastructure.Data.Core.Services.Fakes.ShimServiceBrokerMessagePublisher">
            <summary>Shim type of LightstoneApp.Infrastructure.Data.Core.Services.ServiceBrokerMessagePublisher</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Services.Fakes.ShimServiceBrokerMessagePublisher.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Services.Fakes.ShimServiceBrokerMessagePublisher.#ctor(LightstoneApp.Infrastructure.Data.Core.Services.ServiceBrokerMessagePublisher)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Services.Fakes.ShimServiceBrokerMessagePublisher.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Services.Fakes.ShimServiceBrokerMessagePublisher.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Services.Fakes.ShimServiceBrokerMessagePublisher.Bind(LightstoneApp.Infrastructure.CrossCutting.NetFramework.IMessagePublisher)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Services.Fakes.ShimServiceBrokerMessagePublisher.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Services.Fakes.ShimServiceBrokerMessagePublisher.Constructor">
            <summary>Sets the shim of ServiceBrokerMessagePublisher.ServiceBrokerMessagePublisher()</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Services.Fakes.ShimServiceBrokerMessagePublisher.PublishIApplicationEvent">
            <summary>Sets the shim of ServiceBrokerMessagePublisher.Publish(IApplicationEvent applicationEvent)</summary>
        </member>
        <member name="T:LightstoneApp.Infrastructure.Data.Core.Services.Fakes.ShimServiceBrokerMessagePublisher.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Services.Fakes.ShimServiceBrokerMessagePublisher.AllInstances.PublishIApplicationEvent">
            <summary>Sets the shim of ServiceBrokerMessagePublisher.Publish(IApplicationEvent applicationEvent)</summary>
        </member>
        <member name="T:LightstoneApp.Infrastructure.Data.Core.Services.Fakes.StubICommitDispatchScheduler">
            <summary>Stub type of LightstoneApp.Infrastructure.Data.Core.Services.ICommitDispatchScheduler</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Services.Fakes.StubICommitDispatchScheduler.#ctor">
            <summary>Initializes a new instance of type StubICommitDispatchScheduler</summary>
        </member>
        <member name="F:LightstoneApp.Infrastructure.Data.Core.Services.Fakes.StubICommitDispatchScheduler.IsSynchronousGet">
            <summary>Sets the stub of ICommitDispatchScheduler.get_IsSynchronous()</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Services.Fakes.StubICommitDispatchScheduler.laidc::LightstoneApp#Infrastructure#Data#Core#Services#ICommitDispatchScheduler#ScheduleDispatch(LightstoneApp.Infrastructure.Data.Core.Commits.Commit)">
            <summary>Sets the stub of ICommitDispatchScheduler.ScheduleDispatch(Commit commit)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Services.Fakes.StubICommitDispatchScheduler.laidc::LightstoneApp#Infrastructure#Data#Core#Services#ICommitDispatchScheduler#ScheduleDispatch(System.Collections.Generic.IEnumerable{LightstoneApp.Infrastructure.Data.Core.Commits.Commit})">
            <summary>Sets the stub of ICommitDispatchScheduler.ScheduleDispatch(IEnumerable`1&lt;Commit&gt; commits)</summary>
        </member>
        <member name="F:LightstoneApp.Infrastructure.Data.Core.Services.Fakes.StubICommitDispatchScheduler.ScheduleDispatchCommit">
            <summary>Sets the stub of ICommitDispatchScheduler.ScheduleDispatch(Commit commit)</summary>
        </member>
        <member name="F:LightstoneApp.Infrastructure.Data.Core.Services.Fakes.StubICommitDispatchScheduler.ScheduleDispatchIEnumerableOfCommit">
            <summary>Sets the stub of ICommitDispatchScheduler.ScheduleDispatch(IEnumerable`1&lt;Commit&gt; commits)</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Services.Fakes.StubICommitDispatchScheduler.laidc::LightstoneApp#Infrastructure#Data#Core#Services#ICommitDispatchScheduler#IsSynchronous">
            <summary>Sets the stub of ICommitDispatchScheduler.get_IsSynchronous()</summary>
        </member>
        <member name="T:LightstoneApp.Infrastructure.Data.Core.Services.Fakes.StubIRepository">
            <summary>Stub type of LightstoneApp.Infrastructure.Data.Core.Services.IRepository</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Services.Fakes.StubIRepository.#ctor">
            <summary>Initializes a new instance of type StubIRepository</summary>
        </member>
        <member name="F:LightstoneApp.Infrastructure.Data.Core.Services.Fakes.StubIRepository.CommitChanges">
            <summary>Sets the stub of IRepository.CommitChanges()</summary>
        </member>
        <member name="F:LightstoneApp.Infrastructure.Data.Core.Services.Fakes.StubIRepository.Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Services.Fakes.StubIRepository.GetByIdOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0})">
            <summary>Sets stubs of GetById(String aggregateId)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Services.Fakes.StubIRepository.GetByIdOf1StringArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String[],``0[]})">
            <summary>Sets stubs of GetById(String[] aggregateIds)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Services.Fakes.StubIRepository.laidc::LightstoneApp#Infrastructure#Data#Core#Services#IRepository#CommitChanges">
            <summary>Sets the stub of IRepository.CommitChanges()</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Services.Fakes.StubIRepository.laidc::LightstoneApp#Infrastructure#Data#Core#Services#IRepository#GetById``1(System.String)">
            <summary>Sets the stub of IRepository.GetById(String aggregateId)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Services.Fakes.StubIRepository.laidc::LightstoneApp#Infrastructure#Data#Core#Services#IRepository#GetById``1(System.String[])">
            <summary>Sets the stub of IRepository.GetById(String[] aggregateIds)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Services.Fakes.StubIRepository.laidc::LightstoneApp#Infrastructure#Data#Core#Services#IRepository#Save``1(``0)">
            <summary>Sets the stub of IRepository.Save(!!0 aggregate)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Services.Fakes.StubIRepository.SaveOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0})">
            <summary>Sets stubs of Save(!!0 aggregate)</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Services.Fakes.StubIRepository.global::System#IDisposable#Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="T:LightstoneApp.Infrastructure.Data.Core.Services.Fakes.StubIRepositoryFactory">
            <summary>Stub type of LightstoneApp.Infrastructure.Data.Core.Services.IRepositoryFactory</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Services.Fakes.StubIRepositoryFactory.#ctor">
            <summary>Initializes a new instance of type StubIRepositoryFactory</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Services.Fakes.StubIRepositoryFactory.laidc::LightstoneApp#Infrastructure#Data#Core#Services#IRepositoryFactory#OpenSession">
            <summary>Sets the stub of IRepositoryFactory.OpenSession()</summary>
        </member>
        <member name="F:LightstoneApp.Infrastructure.Data.Core.Services.Fakes.StubIRepositoryFactory.OpenSession">
            <summary>Sets the stub of IRepositoryFactory.OpenSession()</summary>
        </member>
        <member name="T:LightstoneApp.Infrastructure.Data.Core.Services.Fakes.StubServiceBrokerMessagePublisher">
            <summary>Stub type of LightstoneApp.Infrastructure.Data.Core.Services.ServiceBrokerMessagePublisher</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Services.Fakes.StubServiceBrokerMessagePublisher.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:LightstoneApp.Infrastructure.Data.Core.Services.Fakes.StubServiceBrokerMessagePublisher.InitializeStub">
            <summary>Initializes a new instance of type StubServiceBrokerMessagePublisher</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Services.Fakes.StubServiceBrokerMessagePublisher.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Services.Fakes.StubServiceBrokerMessagePublisher.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:LightstoneApp.Infrastructure.Data.Core.Services.Fakes.StubServiceBrokerMessagePublisher.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
    </members>
</doc>
