@using UserManagement.Api.ViewModels
@*@inherits Nancy.ViewEngines.Razor.NancyRazorViewBase<LookupViewModel>*@

@Html.Partial("Shared/PageHeader", new HeaderViewModel("Users", ""))

<div class="box">

    <div class="box-header"></div>
    <table id="table"></table>

</div>
<script>

    $('#table').bootstrapTable({
        url: '/Users',
        search: true,
        showRefresh: true,
        showColumns: true,
        pagination: true,
        pageNumber: 1,
        pageSize: 10,
        pageList: [10, 25, 50, 100, 'All'],
        columns: [{
            field: 'id',
            title: 'Item ID',
            visible: false
        }, {
            field: 'userName',
            title: 'Username',
            sortable: true
        }, {
            field: 'firstName',
            title: 'First Name'
        }, {
            field: 'lastName',
            title: 'Last Name',
            sortable: true
        }, {
            field: 'userTypeValue',
            title: 'User Type',
            sortable: true,
            formatter: userFormatter
        }, {
            field: 'role',
            title: 'Role',
            sortable: true,
            formatter: roleFormatter
        }, {
            field: 'customers',
            title: 'Customers',
            formatter: customerClientFormatter
        }
        //, {
        //    field: 'clients',
        //    title: 'Clients',
        //    formatter: customerClientFormatter
        //}
        , {
            field: '',
            title: '',
            formatter: gridActionFormatter

        }]
    });

    function userFormatter(value, row, index) {

        var state = "";

        $.ajax({
            async: false,
            type: 'GET',
            url: '/ValueEntities/Lookup/' + row.userTypeId,
            success: function (response) {
                //callback

                state = response.data.value;
            }
        });

        return state;
    }

    function roleFormatter(value, row, index) {

        var state = "";

        $.ajax({
            async: false,
            type: 'GET',
            url: '/ValueEntities/Lookup/' + row.roleIds[0],
            success: function (response) {
                //callback

                state = response.data.value;
            }
        });

        return state;
    }

    function customerClientFormatter(value, row, index) {

        var stringBuilder = "";
        if (value) {

            var count = value.length;

            for (customerObj in value) {

                stringBuilder += value[customerObj].name;
                count--;

                if (count > 0) stringBuilder += ", ";
            }
        } else {
            stringBuilder += "~";
        }

        return stringBuilder;
    }

    function gridActionFormatter(value, row, index) {

        return [
            '<div class="row">' +
                        '<div id="indexEdit" class="col-lg-2"><a class="btn btn-primary entity-edit" href="#/Users/' + row.id + '">Edit</a></div>' +
                        '<div id="indexDelete" class="col-lg-1"><a class="btn btn-danger entity-remove" href="#/Users/Delete/' + row.id + '">Delete</a></div>' +
                        '</div>'
        ].join('');
    };

    $("<a>", { "class": "btn btn-default entity-add pull-left", href: "#/Users/Add", text: "Add" }).appendTo($("div.box-header"));

    UserManagement.overrideDataTablesStyling();
</script>