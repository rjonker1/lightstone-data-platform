@using System
@using System.Collections
@using System.Collections.Generic
@using System.Linq
@using Nancy.ViewEngines.Razor.HtmlHelpers;
@using UserManagement.Api.ViewModels
@using UserManagement.Domain.Dtos
@using UserManagement.Domain.Entities
@inherits Nancy.ViewEngines.Razor.NancyRazorViewBase<UserManagement.Domain.Dtos.UserDto>
@{
    var isCreate = Model.Id == new Guid();
    var pageHeadingViewModel = new PageHeadingViewModel("User detail", isCreate ? "Add" : "Update");
    var method = isCreate ? "POST" : "POST";
    var url = isCreate ? "/Users" : "/Users/" + Model.Id;
    var count = 0;
}
@Html.Partial("Shared/PageHeading", pageHeadingViewModel)

<div class="box dark">
    <header>
        <div class="icons">
            <i class="fa fa-edit"></i>
        </div>
        <h5>Input Text Fields</h5>
        <div class="toolbar">
            <nav style="padding: 8px;">
                <a class="btn btn-default btn-xs collapse-box" href="javascript:;">
                    <i class="fa fa-minus"></i>
                </a>
                <a class="btn btn-default btn-xs full-box" href="javascript:;">
                    <i class="fa fa-expand"></i>
                </a>
                <a class="btn btn-danger btn-xs close-box" href="javascript:;">
                    <i class="fa fa-times"></i>
                </a>
            </nav>
        </div>
    </header>
    <div class="body collapse in" id="div-1" aria-expanded="true" style="">
        <form action="@url" method="@method" class="form-horizontal">
            <div class="form-group">
                @Html.LabelFor(x => x.FirstName, new { @class = "control-label col-lg-4" })
                <div class="col-lg-3">
                    @Html.TextBoxFor(x => x.FirstName, new { @class = "form-control", placeholder = "" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.LastName, new { @class = "control-label col-lg-4" })
                <div class="col-lg-3">
                    @Html.TextBoxFor(x => x.LastName, new { @class = "form-control", placeholder = "" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.IdNumber, new { @class = "control-label col-lg-4" })
                <div class="col-lg-3">
                    @Html.TextBoxFor(x => x.IdNumber, new { @class = "form-control", placeholder = "" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.ContactNumber, new { @class = "control-label col-lg-4" })
                <div class="col-lg-3">
                    @Html.TextBoxFor(x => x.ContactNumber, new { @class = "form-control", placeholder = "" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.UserName, new { @class = "control-label col-lg-4" })
                <div class="col-lg-3">
                    @Html.TextBoxFor(x => x.UserName, new { @class = "form-control", placeholder = "" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.Password, new { @class = "control-label col-lg-4" })
                <div class="col-lg-3">
                    @Html.TextBoxFor(x => x.Password, new { @class = "form-control", placeholder = "" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.UserTypeId, new { @class = "control-label col-lg-4" })
                <div class="col-lg-3">
                    @*@Html.DropDownListFor(x => x.ProvinceId, "", (IEnumerable<SelectListItem>)ViewBag.Provinces.Value, Model.ProvinceId, new { @class = "chosen-select", data_placeholder = "Choose a province..." })*@
                    <select name="UserTypeId" data-placeholder="User Type..." class="chosen-select">
                        <option value=""></option>
                        @foreach (SelectListItem item in ViewBag.UserTypes.Value)
                        {
                            var isSelected = item.Value == Model.UserTypeId.ToString();
                            <option selected="@isSelected" value="@item.Value">@item.Text</option>
                        }
                    </select>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.RoleIds, new { @class = "control-label col-lg-4" })
                <div class="col-lg-3">
                    @*@Html.DropDownListFor(x => x.ProvinceId, "", (IEnumerable<SelectListItem>)ViewBag.Provinces.Value, Model.ProvinceId, new { @class = "chosen-select", data_placeholder = "Choose a province..." })*@
                    <select name="RoleIds" data-placeholder="Role..." multiple class="chosen-select">
                        @foreach (SelectListItem item in ViewBag.Roles.Value)
                        {
                            var isSelected = Model.RoleIds != null && Model.RoleIds.Contains(new Guid(item.Value));
                            <option selected="@isSelected" value="@item.Value">@item.Text</option>
                        }
                    </select>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.CustomerIds, new { @class = "control-label col-lg-4" })
                <div class="col-lg-3 chosen-autocomplete" data-type="@typeof(Customer).AssemblyQualifiedName">
                    <select id="CustomerIds" name="CustomerIds" data-placeholder="Role..." multiple class="chosen-select">
                        @foreach (NamedEntityDto item in Model.Customers)
                        {
                            var isSelected = Model.Customers != null && Model.Customers.Select(x => x.Id).Contains(item.Id);
                            <option selected="@isSelected" value="@item.Id">@item.Name</option>
                        }
                    </select>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.ClientUsers, new { @class = "control-label col-lg-4" })
                <div class="col-lg-3 auto-list-complete" data-type="@typeof(Client).AssemblyQualifiedName">
                    <input id="ClientIds" class="form-control" type="text" />
                    <ul>
                        @foreach (var cu in Model.ClientUsers)
                        {
                            <li>
                                <input type="hidden" id="@cu.ClientId" name="ClientId[@count]" value="@cu.ClientId" />
                                <label>@cu.ClientName</label>
                                <input type="text" class="form-control" name="UserAlias[@count]" value="@cu.UserAlias" />
                            </li>
                            count++;
                        }
                    </ul>
                </div>
            </div>
            <div class="form-group">
                <div class="col-lg-4"></div>
                <div class="col-lg-3">
                    <input type="submit" class="btn btn-primary" value="Save">
                </div>
            </div>
        </form>
    </div>
</div>
