@using System
@using System.Linq
@*@using Nancy.ViewEngines.Razor.HtmlHelpers;*@
@using UserManagement.Api.Helpers.NancyRazorHelpers
@using UserManagement.Api.ViewModels
@using UserManagement.Domain.Dtos
@using UserManagement.Domain.Entities
@inherits Nancy.ViewEngines.Razor.NancyRazorViewBase<UserManagement.Domain.Dtos.UserDto>
@{
    var isCreate = Model.Id == new Guid();
    var pageHeadingViewModel = new HeaderViewModel("User detail", isCreate ? "Create a new user" : "Update existing user");
    var method = isCreate ? "POST" : "PUT";
    var url = isCreate ? "/Users" : "/Users/" + Model.Id;
    var count = 0;
}
@Html.Partial("Shared/PageHeader", pageHeadingViewModel)

<div class="box">
    @Html.Partial("Shared/BoxHeader", new HeaderViewModel("User Info", "", "glyphicon glyphicon-user", Model))
    <form action="@url" method="@method" class="form-horizontal">
        <div class="box-body">

            <div class="form-group">

                <label class="control-label col-lg-4">Name</label>
                <div class="input-group col-lg-2">
                    <span class="input-group-addon glyphicon glyphicon-pencil" id="basic-addon1"></span>
                    <div aria-describedby="basic-addon1">
                        @Html.TextBoxFor(x => x.FirstName, new { @class = "form-control", placeholder = "" })
                    </div>
                </div>
                <div class="col-lg-6">
                    @Html.ValidationMessageFor(x => x.FirstName)
                </div>

            </div>
            <div class="form-group">

                <label class="control-label col-lg-4">Surname</label>
                <div class="input-group col-lg-2">
                    <span class="input-group-addon glyphicon glyphicon-pencil" id="basic-addon1"></span>
                    <div aria-describedby="basic-addon1">
                        @Html.TextBoxFor(x => x.LastName, new { @class = "form-control", placeholder = "" })
                    </div>
                </div>
                <div class="col-lg-6">
                    @Html.ValidationMessageFor(x => x.LastName)
                </div>

            </div>
            <div class="form-group">

                <label class="control-label col-lg-4">ID Number</label>
                <div class="input-group col-lg-2">
                    <span class="input-group-addon glyphicon glyphicon-barcode" id="basic-addon1"></span>
                    <div aria-describedby="basic-addon1">
                        @Html.TextBoxFor(x => x.IdNumber, new { @class = "form-control", placeholder = "" })
                    </div>
                </div>
                <div class="col-lg-6">
                    @Html.ValidationMessageFor(x => x.IdNumber)
                </div>

            </div>
            <div class="form-group">

                <label class="control-label col-lg-4">Contact Number</label>
                <div class="input-group col-lg-2">
                    <span class="input-group-addon glyphicon glyphicon-book" id="basic-addon1"></span>
                    <div aria-describedby="basic-addon1">
                        @Html.TextBoxFor(x => x.ContactNumber, new { @class = "form-control", placeholder = "" })
                    </div>
                </div>
                <div class="col-lg-6">
                    @Html.ValidationMessageFor(x => x.ContactNumber)
                </div>

            </div>
            <div class="form-group">

                <label class="control-label col-lg-4">Username</label>
                <div class="input-group col-lg-2">
                    <span class="input-group-addon glyphicon glyphicon-pencil" id="basic-addon1"></span>
                    <div aria-describedby="basic-addon1">
                        @Html.TextBoxFor(x => x.UserName, new { @class = "form-control", placeholder = "" })
                    </div>
                </div>
                <div class="col-lg-6">
                    @Html.ValidationMessageFor(x => x.UserName)
                </div>

            </div>
            <div class="form-group">

                <label class="control-label col-lg-4">Password</label>
                <div class="input-group col-lg-2">
                    <span class="input-group-addon glyphicon glyphicon-certificate" id="basic-addon1"></span>
                    <div aria-describedby="basic-addon1">
                        @Html.TextBoxFor(x => x.Password, new { @class = "form-control", placeholder = "", type = "password" })
                    </div>
                </div>
                <div class="col-lg-6">
                    @Html.ValidationMessageFor(x => x.Password)
                </div>

            </div>
            <div class="form-group">

                <label class="control-label col-lg-4">User Type</label>
                <div class="input-group col-lg-2">
                    <select name="UserTypeId" data-placeholder="Choose user type..." class="chosen-select">
                        <option value=""></option>
                        @foreach (SelectListItem item in ViewBag.UserTypes.Value)
                        {
                            var isSelected = item.Value == Model.UserTypeId.ToString();
                            <option selected="@isSelected" value="@item.Value">@item.Text</option>
                        }
                    </select>
                </div>
                <div class="col-lg-6">
                    @Html.ValidationMessageFor(x => x.UserTypeId)
                </div>

            </div>
            <div class="form-group">

                <label class="control-label col-lg-4">Roles</label>
                <div class="input-group col-lg-2">
                    <select name="RoleIds" data-placeholder="Search Roles..." multiple class="chosen-select">
                        @foreach (SelectListItem item in ViewBag.Roles.Value)
                        {
                            var isSelected = Model.RoleIds != null && Model.RoleIds.Contains(new Guid(item.Value));
                            <option selected="@isSelected" value="@item.Value">@item.Text</option>
                        }
                    </select>
                </div>
                <div class="col-lg-6">
                    @Html.ValidationMessageFor(x => x.RoleIds)
                </div>

            </div>
            <div class="form-group">

                <label class="control-label col-lg-4">Customers</label>
                <div class="input-group col-lg-2 entity-autocomplete" data-url="/NamedEntities" data-type="@typeof(Customer).AssemblyQualifiedName">
                    <select id="CustomerIds" name="CustomerIds" data-placeholder="Search Customers..." multiple class="chosen-select">
                        @foreach (NamedEntityDto item in Model.Customers)
                        {
                            var isSelected = Model.Customers != null && Model.Customers.Select(x => x.Id).Contains(item.Id);
                            <option selected="@isSelected" value="@item.Id">@item.Name</option>
                        }
                    </select>
                </div>
                <div class="col-lg-6">
                    @Html.ValidationMessageFor(x => x.CustomerIds)
                </div>

            </div>
            <div class="form-group">

                <label class="control-label col-lg-4">Clients</label>
                <div class="input-group col-lg-2 auto-list-complete user-alias" data-type="@typeof(Client).AssemblyQualifiedName">
                    <input id="ClientIds" class="form-control" type="text" />
                    <div class="list-group">
                        @foreach (var cu in Model.ClientUsers)
                        {
                            <div class="list-group-item">
                                <div class="pull-left">
                                    <a class="btn btn-danger btn-xs close-box" href="javascript:;">
                                        <i class="fa fa-times"></i>
                                    </a>
                                </div>
                                <input type="hidden" id="@cu.ClientId" name="ClientId[@count]" value="@cu.ClientId" />
                                <label>@cu.ClientName</label>
                                <input type="text" class="form-control" name="UserAlias[@count]" value="@cu.UserAlias" />
                            </div>
                            count++;
                        }
                    </div>
                </div>
                <div class="col-lg-6">
                    @Html.ValidationMessageFor(x => x.ClientUsers)
                </div>

            </div>
        </div>
        @Html.Partial("Shared/BoxFooter")
    </form>
</div>
