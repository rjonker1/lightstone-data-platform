@*@using Nancy.ViewEngines.Razor.HtmlHelpers;*@
@using System
@using UserManagement.Api.Helpers.NancyRazorHelpers
@using UserManagement.Api.ViewModels
@using UserManagement.Domain.Enums
@inherits Nancy.ViewEngines.Razor.NancyRazorViewBase<UserManagement.Domain.Dtos.CustomerDto>

<div class="box">
    @Html.Partial("Shared/BoxHeader", new HeaderViewModel("Contact Info", "", "glyphicon glyphicon-book", Model))
    <div class="box-body">
        @Html.HiddenFor(x => x.ContactDetailId)
        <div class="form-group">

            <label class="control-label col-lg-4">* Contact Person</label>
            <div class="input-group col-lg-2">
                <span class="input-group-addon glyphicon glyphicon-user" id="basic-addon1"></span>
                <div aria-describedby="basic-addon1">
                    @Html.TextBoxFor(x => x.ContactDetailContactPerson, new { @class = "form-control", placeholder = "" })
                </div>
            </div>
            <div class="col-lg-6">
                @Html.ValidationMessageFor(x => x.ContactDetailContactPerson)
            </div>

        </div>
        <div class="form-group">

            <label class="control-label col-lg-4">Contact Number</label>
            <div class="input-group col-lg-2">
                <span class="input-group-addon" id="basic-addon1"><b>123</b></span>
                <div aria-describedby="basic-addon1">
                    @Html.TextBoxFor(x => x.ContactDetailContactNumber, new { @class = "form-control", placeholder = "" })
                </div>
            </div>
            <div class="col-lg-6">
                @Html.ValidationMessageFor(x => x.ContactDetailContactNumber)
            </div>

        </div> 
        <div class="form-group">

            <label class="control-label col-lg-4">Contact Type</label>
            <div class="input-group col-lg-2">
                <select id="contactTypeSelect" name="ContactDetailContactType" data-placeholder="Select contact type" class="chosen-select">
                    <option value=""></option>
                    @foreach (var item in Enum.GetValues(typeof(ContactType)))
                    {
                        var isSelected = item.ToString() == Model.ContactDetailContactType.ToString();
                        <option selected="@isSelected" value="@item">@item</option>
                    }
                </select>
            </div>
            <div class="col-lg-6">
                @*@Html.ValidationMessageFor(x => x.UserTypeId)*@
            </div>
        </div>     
        <div class="form-group">

            <label class="control-label col-lg-4">Email Address</label>
            <div class="input-group col-lg-2">
                <span class="input-group-addon glyphicon glyphicon-envelope" id="basic-addon1"></span>
                <div aria-describedby="basic-addon1">
                    @Html.TextBoxFor(x => x.ContactDetailEmailAddress, new { @class = "form-control", placeholder = "" })
                </div>
            </div>
            <div class="col-lg-6">
                @Html.ValidationMessageFor(x => x.ContactDetailEmailAddress)
            </div>

        </div>
        @Html.Partial("Shared/BoxFooter")
    </div>
</div>