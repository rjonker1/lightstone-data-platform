@using UserManagement.Api.ViewModels
@using UserManagement.Domain.Entities
@*@inherits Nancy.ViewEngines.Razor.NancyRazorViewBase<LookupViewModel>*@

@Html.Partial("Shared/PageHeader", new HeaderViewModel("Customers", ""))

<div class="box">

    <div class="box-header"></div>
    <table id="table"></table>

</div>
<script>

    $('#table').bootstrapTable({
        url: '/Customers',
        search: true,
        showRefresh: true,
        showColumns: true,
        pagination: true,
        pageNumber: 1,
        pageSize: 10,
        pageList: [10, 25, 50, 100, 'All'],
        columns: [{
            field: 'id',
            title: 'Item ID',
            visible: false
        }, {
            field: 'name',
            title: 'Customer Name',
            sortable: true
        }, {
            field: 'accountOwnerName',
            title: 'Account Owner Name'
            //formatter: gridUsersFormatter,
            //events: userGridActionEvents
        }, {
            field: 'created',
            title: 'Created Date',
            //formatter: gridProductsFormatter,
            //events: productGridActionEvents
        }, {
            field: 'modified',
            title: 'Modified Date',
            sortable: true
        }, {
            field: 'platformStatusValue',
            title: 'Platform State',
            srtable: true
            //formatter: platformFormatter
        }, {
            field: 'commercialStateValue',
            title: 'Commercial State',
            sortable: true
            //formatter: commercialFormatter
        }, {
            field: '',
            title: '',
            formatter: gridActionFormatter

        }]
    });

    //function platformFormatter(value, row, index) {

    //    var state = "";

    //    $.ajax({
    //        async: false,
    //        type: 'GET',
    //        url: '/ValueEntities/Lookup/' + row.platformStatusId,
    //        success: function (response) {
    //            //callback

    //            state = response.data.value;
    //        }
    //    });

    //    return state;
    //}

    //function commercialFormatter(value, row, index) {

    //    var state = "";

    //    $.ajax({
    //        async: false,
    //        type: 'GET',
    //        url: '/ValueEntities/Lookup/' + row.commercialStateId,
    //        success: function (response) {
    //            //callback

    //            state = response.data.value;
    //        }
    //    });

    //    return state;
    //}

    function gridActionFormatter(value, row, index) {

        var lockUnlock = '<a class="btn btn-warning entity-lock" href="#/Customers/Lock/' + row.id + '" title="Lock"><i class="fa fa-lock"></i></a>';
        var icon = '<i class="fa fa-comment-o"></i>';
        if (row.isLocked == true) lockUnlock = '<a class="btn btn-success entity-lock" href="#/Customers/UnLock/' + row.id + '" title="Unlock"><i class="fa fa-lock"></i></a>';
        if (row.hasNotes == true) icon = '<i class="fa fa-comment"></i>';

        return [
                '<a class="btn btn-primary entity-edit" href="#/Customers/' + row.id + '" title="Edit"><i class="fa fa-pencil-square-o"></i></a>' +
                '<a class="btn btn-danger entity-remove" href="#/Customers/Delete/' + row.id + '" title="Delete"><i class="fa fa-times"></i></a>' +
                '' + lockUnlock + '' +
                '<a class="btn btn-default notes-view" href="/Notes/@typeof(CustomerNote).AssemblyQualifiedName/' + row.id + '/Customers" onclick="return false;" title="Notes">' + icon + '</a>'
        ].join('');
    };

    $("<a>", { "class": "btn btn-default entity-add pull-left", href: "#/Customers/Add", text: "Add" }).appendTo($("div.box-header"));

    UserManagement.overrideDataTablesStyling();

    $('#table').on('post-body.bs.table', function (e, row, $element) {
        bindNoteViewEvent();
    });
</script>