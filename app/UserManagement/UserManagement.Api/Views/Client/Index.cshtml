@using UserManagement.Api.ViewModels

@Html.Partial("Shared/PageHeader", new HeaderViewModel("Clients", "All clients"))

<div class="box">

    <div class="box-header"></div>
    <table id="table"></table>

</div>

@*<div id="dropzone">
        <form action="http://www.torrentplease.com/dropzone.php" class="dropzone dz-clickable" id="demo-upload">

            <div class="dz-message">
                Drop files here or click to upload.<br>
                <span class="note">(This is just a demo dropzone. Selected files are <strong>not</strong> actually uploaded.)</span>
            </div>

        </form>
    </div>*@

@*<div class="jumbotron">
        <form action="~/Home/SaveUploadedFile" method="post" enctype="multipart/form-data" class="dropzone" id="dropzoneForm" style="width: 50px; background: none; border: none;">
            <div class="fallback">
                <input name="file" type="file" multiple />
                <input type="submit" value="Upload" />
            </div>
        </form>
    </div>*@

<script src="http://pufferapp.com/wp-content/themes/framework/vendor/plugins/dropzone/dropzone.min.js"></script>
<link rel="stylesheet" href="http://pufferapp.com/wp-content/themes/framework/vendor/plugins/dropzone/css/dropzone.css">

@*<form action="/" method="post" class="dropzone" id="my-awesome-dropzone"></form>*@

@*<div id="dZUpload" class="dropzone">
    <div class="dz-default dz-message"></div>
</div>*@

<script>

    //$(document).ready(function () {
    //    Dropzone.autoDiscover = false;
    //    //Simple Dropzonejs 
    //    $("#dZUpload").dropzone({
    //        url: "/",
    //        addRemoveLinks: true,
    //        success: function (file, response) {
    //            var imgName = response;
    //            file.previewElement.classList.add("dz-success");
    //            console.log("Successfully uploaded :" + imgName);
    //        },
    //        error: function (file, response) {
    //            file.previewElement.classList.add("dz-error");
    //        }
    //    });
    //});

    //$('#my-awesome-dropzone').dropzone({
    //    maxFilesize: 5,
    //    addRemoveLinks: true,
    //    dictResponseError: 'Server not Configured',
    //    acceptedFiles: ".png,.jpg,.gif,.bmp,.jpeg",
    //    init: function () {
    //        console.log('test');
    //        var self = this;
    //        // config
    //        self.options.addRemoveLinks = true;
    //        self.options.dictRemoveFile = "Delete";
    //        //New file added
    //        self.on("addedfile", function (file) {
    //            console.log('new file added ', file);
    //        });
    //        // Send file starts
    //        self.on("sending", function (file) {
    //            console.log('upload started', file);
    //            $('.meter').show();
    //        });

    //        // File upload Progress
    //        self.on("totaluploadprogress", function (progress) {
    //            console.log("progress ", progress);
    //            $('.roller').width(progress + '%');
    //        });

    //        self.on("queuecomplete", function (progress) {
    //            $('.meter').delay(999).slideUp(999);
    //        });

    //        // On removing file
    //        self.on("removedfile", function (file) {
    //            console.log(file);
    //        });
    //    }

    //});

    $('#table').bootstrapTable({
        url: '/Clients',
        search: true,
        showRefresh: true,
        showColumns: true,
        pagination: true,
        pageNumber: 1,
        pageSize: 10,
        pageList: [10, 25, 50, 100, 'All'],
        columns: [{
            field: 'id',
            title: 'Item ID',
            visible: false
        }, {
            field: 'name',
            title: 'Name',
            sortable: true
        }, {
            field: 'contactDetailLegalEntityName',
            title: 'Owner',
            sortable: true
        }, {
            field: 'created',
            title: 'Created Date',
            //formatter: gridProductsFormatter,
            //events: productGridActionEvents
        }, {
            field: 'platformStateValue',
            title: 'Platform State',
            //formatter: gridTransactionsFormatter
        }, {
            field: 'commercialStateValue',
            title: 'Commercial State',
            sortable: true
        }, {
            field: '',
            title: '',
            formatter: gridActionFormatter

        }]
    });

    function gridActionFormatter(value, row, index) {

        var lockUnlock = '<a class="btn btn-warning entity-lock" href="#/Clients/Lock/' + row.id + '">Lock</a>';

        if (row.isLocked == true) lockUnlock = '<a class="btn btn-success entity-lock" href="#/Clients/UnLock/' + row.id + '">UnLock</a>';

        return [
            '<div class="row" style="width: 240px;">' +
            '<div id="indexEdit" class="col-md-1"><a class="btn btn-primary entity-edit" href="#/Clients/' + row.id + '">Edit</a></div>' +
            '<div class="col-md-1" />' +
            '<div id="indexDelete" class="col-md-2"><a class="btn btn-danger entity-remove" href="#/Clients/Delete/' + row.id + '">Delete</a></div>' +
            '<div class="col-md-2" />' +
            '<div id="indexLock" class="col-md-1">' + lockUnlock + '</div>' +
            '</div>'
        ].join('');
    };

    $("<a>", { "class": "btn btn-default entity-add pull-left", href: "#/Clients/Add", text: "Add" }).appendTo($("div.box-header"));

    UserManagement.overrideDataTablesStyling();
</script>
