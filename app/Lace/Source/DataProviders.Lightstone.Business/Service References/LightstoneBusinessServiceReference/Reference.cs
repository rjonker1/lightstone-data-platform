//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Lace.Domain.DataProviders.Lightstone.Business.Company.LightstoneBusinessServiceReference {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://lightstonebusiness.co.za/", ConfigurationName="LightstoneBusinessServiceReference.apiSoap")]
    public interface apiSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/authenticateUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Guid authenticateUser(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/authenticateUser", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Guid> authenticateUserAsync(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/logOutUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool logOutUser(string user_token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/logOutUser", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> logOutUserAsync(string user_token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/returnCompanies", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet returnCompanies(string user_token, string company_name, string company_regnum, string company_vatnumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/returnCompanies", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> returnCompaniesAsync(string user_token, string company_name, string company_regnum, string company_vatnumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/returnCompaniesClient", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet returnCompaniesClient(string user_token, string company_name, string company_regnum, string company_vatnumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/returnCompaniesClient", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> returnCompaniesClientAsync(string user_token, string company_name, string company_regnum, string company_vatnumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/returnCompanyConfirmDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet returnCompanyConfirmDetails(string user_token, long companyid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/returnCompanyConfirmDetails", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> returnCompanyConfirmDetailsAsync(string user_token, long companyid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/confirmCompany", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Lace.Domain.DataProviders.Lightstone.Business.Company.LightstoneBusinessServiceReference.reportTrans confirmCompany(string user_token, long company_id, string trackingnumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/confirmCompany", ReplyAction="*")]
        System.Threading.Tasks.Task<Lace.Domain.DataProviders.Lightstone.Business.Company.LightstoneBusinessServiceReference.reportTrans> confirmCompanyAsync(string user_token, long company_id, string trackingnumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/returnCompanyDirectors", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet returnCompanyDirectors(string rc_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/returnCompanyDirectors", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> returnCompanyDirectorsAsync(string rc_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/processDirector", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool processDirector(System.Guid rc_id, System.Guid user_id, long directorid, string firstname, string surname, string idnumber, string address1, string address2, string postalcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/processDirector", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> processDirectorAsync(System.Guid rc_id, System.Guid user_id, long directorid, string firstname, string surname, string idnumber, string address1, string address2, string postalcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/returnCompanyReport", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet returnCompanyReport(string rc_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/returnCompanyReport", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> returnCompanyReportAsync(string rc_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/returnCompanyReportTiers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet returnCompanyReportTiers(string rc_id, long companyid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/returnCompanyReportTiers", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> returnCompanyReportTiersAsync(string rc_id, long companyid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/returnCompanyProps", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet returnCompanyProps(long companyid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/returnCompanyProps", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> returnCompanyPropsAsync(long companyid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/confirmCompany_Short", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Lace.Domain.DataProviders.Lightstone.Business.Company.LightstoneBusinessServiceReference.reportTrans confirmCompany_Short(string user_token, long company_id, string trackingnumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/confirmCompany_Short", ReplyAction="*")]
        System.Threading.Tasks.Task<Lace.Domain.DataProviders.Lightstone.Business.Company.LightstoneBusinessServiceReference.reportTrans> confirmCompany_ShortAsync(string user_token, long company_id, string trackingnumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/returnCompanyReport_Short", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet returnCompanyReport_Short(string rcs_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/returnCompanyReport_Short", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> returnCompanyReport_ShortAsync(string rcs_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/confirmCompany_Comprehensive", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Lace.Domain.DataProviders.Lightstone.Business.Company.LightstoneBusinessServiceReference.reportTrans confirmCompany_Comprehensive(string user_token, long company_id, string trackingnumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/confirmCompany_Comprehensive", ReplyAction="*")]
        System.Threading.Tasks.Task<Lace.Domain.DataProviders.Lightstone.Business.Company.LightstoneBusinessServiceReference.reportTrans> confirmCompany_ComprehensiveAsync(string user_token, long company_id, string trackingnumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/returnDirectors_Comprehensive", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet returnDirectors_Comprehensive(string rcc_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/returnDirectors_Comprehensive", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> returnDirectors_ComprehensiveAsync(string rcc_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/processDirector_Comprehensive", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool processDirector_Comprehensive(System.Guid rcc_id, System.Guid user_id, long directorid, string firstname, string surname, string idnumber, string address1, string address2, string postalcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/processDirector_Comprehensive", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> processDirector_ComprehensiveAsync(System.Guid rcc_id, System.Guid user_id, long directorid, string firstname, string surname, string idnumber, string address1, string address2, string postalcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/returnCompanyReport_Comprehensive", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet returnCompanyReport_Comprehensive(string rcc_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/returnCompanyReport_Comprehensive", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> returnCompanyReport_ComprehensiveAsync(string rcc_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/returnDirectors", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet returnDirectors(string user_token, string firstname, string surname, string idnumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/returnDirectors", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> returnDirectorsAsync(string user_token, string firstname, string surname, string idnumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/confirmDirector", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Lace.Domain.DataProviders.Lightstone.Business.Company.LightstoneBusinessServiceReference.reportTrans confirmDirector(string user_token, long directorid, string idnumber, string trackingnumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/confirmDirector", ReplyAction="*")]
        System.Threading.Tasks.Task<Lace.Domain.DataProviders.Lightstone.Business.Company.LightstoneBusinessServiceReference.reportTrans> confirmDirectorAsync(string user_token, long directorid, string idnumber, string trackingnumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/returnDirectorReport", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet returnDirectorReport(string rd_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/returnDirectorReport", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> returnDirectorReportAsync(string rd_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/returnDirectorProps", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet returnDirectorProps(long directorid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/returnDirectorProps", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> returnDirectorPropsAsync(long directorid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/returnProspects", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet returnProspects(Lace.Domain.DataProviders.Lightstone.Business.Company.LightstoneBusinessServiceReference.request_propspect rp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/returnProspects", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> returnProspectsAsync(Lace.Domain.DataProviders.Lightstone.Business.Company.LightstoneBusinessServiceReference.request_propspect rp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/returnUserHistory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet returnUserHistory(string user_token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/returnUserHistory", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> returnUserHistoryAsync(string user_token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/checkValidToken", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool checkValidToken(string user_token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/checkValidToken", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> checkValidTokenAsync(string user_token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/confirmPropertyAndInsert", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Lace.Domain.DataProviders.Lightstone.Business.Company.LightstoneBusinessServiceReference.reportTrans confirmPropertyAndInsert(string user_token, long prop_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/confirmPropertyAndInsert", ReplyAction="*")]
        System.Threading.Tasks.Task<Lace.Domain.DataProviders.Lightstone.Business.Company.LightstoneBusinessServiceReference.reportTrans> confirmPropertyAndInsertAsync(string user_token, long prop_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/returnPropertyReport", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet returnPropertyReport(System.Guid rp_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/returnPropertyReport", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> returnPropertyReportAsync(System.Guid rp_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/returnAVS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet returnAVS(System.Guid ac_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/returnAVS", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> returnAVSAsync(System.Guid ac_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/confirmBankCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Lace.Domain.DataProviders.Lightstone.Business.Company.LightstoneBusinessServiceReference.reportTrans confirmBankCode(string user_token, long companyid, string trackingnumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/confirmBankCode", ReplyAction="*")]
        System.Threading.Tasks.Task<Lace.Domain.DataProviders.Lightstone.Business.Company.LightstoneBusinessServiceReference.reportTrans> confirmBankCodeAsync(string user_token, long companyid, string trackingnumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/insertBankCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void insertBankCode(System.Guid rb_id, System.Guid user_id, string RB_AccountNumber, string RB_Bank, string RB_BranchName, string RB_Branchcode, string RB_Amount, string RB_Period, string RB_Express, string RB_BankCode, string RB_TradingAs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/insertBankCode", ReplyAction="*")]
        System.Threading.Tasks.Task insertBankCodeAsync(System.Guid rb_id, System.Guid user_id, string RB_AccountNumber, string RB_Bank, string RB_BranchName, string RB_Branchcode, string RB_Amount, string RB_Period, string RB_Express, string RB_BankCode, string RB_TradingAs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/updateBankCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void updateBankCode(System.Guid user_id, string RB_BankCode, string RB_BankCodeDate, System.Guid rb_id, string rb_amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/updateBankCode", ReplyAction="*")]
        System.Threading.Tasks.Task updateBankCodeAsync(System.Guid user_id, string RB_BankCode, string RB_BankCodeDate, System.Guid rb_id, string rb_amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/returnBankCodeReport", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet returnBankCodeReport(string rb_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/returnBankCodeReport", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> returnBankCodeReportAsync(string rb_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/returnPersonalDetailsFromCell", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet returnPersonalDetailsFromCell(string user_token, string cellnumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/returnPersonalDetailsFromCell", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> returnPersonalDetailsFromCellAsync(string user_token, string cellnumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/returnAlertCompanies", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet returnAlertCompanies(string user_token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/returnAlertCompanies", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> returnAlertCompaniesAsync(string user_token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/confirmTradeReferences", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Lace.Domain.DataProviders.Lightstone.Business.Company.LightstoneBusinessServiceReference.reportTrans confirmTradeReferences(string user_token, long companyid, string trackingnumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/confirmTradeReferences", ReplyAction="*")]
        System.Threading.Tasks.Task<Lace.Domain.DataProviders.Lightstone.Business.Company.LightstoneBusinessServiceReference.reportTrans> confirmTradeReferencesAsync(string user_token, long companyid, string trackingnumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/insertTradeReference_Company", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void insertTradeReference_Company(System.Guid rt_id, long companyid, string companyname, string companyregnum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/insertTradeReference_Company", ReplyAction="*")]
        System.Threading.Tasks.Task insertTradeReference_CompanyAsync(System.Guid rt_id, long companyid, string companyname, string companyregnum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/updateTradeReferenceReport", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void updateTradeReferenceReport(System.Guid rt_id, int RT_RefCount, string RT_TradingAs, string RT_Address1, string RT_Address2, string RT_Address3, string RT_AddressCode, string RT_PhoneNumber, string RT_Contact, string trackingnumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/updateTradeReferenceReport", ReplyAction="*")]
        System.Threading.Tasks.Task updateTradeReferenceReportAsync(System.Guid rt_id, int RT_RefCount, string RT_TradingAs, string RT_Address1, string RT_Address2, string RT_Address3, string RT_AddressCode, string RT_PhoneNumber, string RT_Contact, string trackingnumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/updateTradeReference", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void updateTradeReference(
                    System.Guid rtc_id, 
                    string RTC_PaymentProfile, 
                    string RTC_OutstandingBalance, 
                    int RTC_Known_Years, 
                    int RTC_Known_Months, 
                    string RTC_CreditLimit, 
                    string RTC_AVGPurchase, 
                    string RTC_Terms, 
                    string RTC_Discount, 
                    string RTC_RefName, 
                    string RTC_Memo, 
                    string RTC_Address1, 
                    string RTC_Address2, 
                    string RTC_Address3, 
                    string RTC_AreaCode, 
                    string RTC_Phone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/updateTradeReference", ReplyAction="*")]
        System.Threading.Tasks.Task updateTradeReferenceAsync(
                    System.Guid rtc_id, 
                    string RTC_PaymentProfile, 
                    string RTC_OutstandingBalance, 
                    int RTC_Known_Years, 
                    int RTC_Known_Months, 
                    string RTC_CreditLimit, 
                    string RTC_AVGPurchase, 
                    string RTC_Terms, 
                    string RTC_Discount, 
                    string RTC_RefName, 
                    string RTC_Memo, 
                    string RTC_Address1, 
                    string RTC_Address2, 
                    string RTC_Address3, 
                    string RTC_AreaCode, 
                    string RTC_Phone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/updateTradeReferenceProgress", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void updateTradeReferenceProgress(System.Guid rt_id, System.Guid user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/updateTradeReferenceProgress", ReplyAction="*")]
        System.Threading.Tasks.Task updateTradeReferenceProgressAsync(System.Guid rt_id, System.Guid user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/returnTradeReferenceReport", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet returnTradeReferenceReport(string rt_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/returnTradeReferenceReport", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> returnTradeReferenceReportAsync(string rt_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/confirmConsumer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Lace.Domain.DataProviders.Lightstone.Business.Company.LightstoneBusinessServiceReference.reportTrans confirmConsumer(string user_token, string idnumber, string firstname, string surname, string dateofbirth, string trackingnumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/confirmConsumer", ReplyAction="*")]
        System.Threading.Tasks.Task<Lace.Domain.DataProviders.Lightstone.Business.Company.LightstoneBusinessServiceReference.reportTrans> confirmConsumerAsync(string user_token, string idnumber, string firstname, string surname, string dateofbirth, string trackingnumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/returnConsumerReport", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet returnConsumerReport(string rco_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/returnConsumerReport", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> returnConsumerReportAsync(string rco_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/returnCompanyDefaults", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet returnCompanyDefaults(string rd_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/returnCompanyDefaults", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> returnCompanyDefaultsAsync(string rd_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/returnUserDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet returnUserDetails(string key, string user_token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/returnUserDetails", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> returnUserDetailsAsync(string key, string user_token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/returnUserSetting", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool returnUserSetting(string user_token, int setting_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lightstonebusiness.co.za/returnUserSetting", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> returnUserSettingAsync(string user_token, int setting_id);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://lightstonebusiness.co.za/")]
    public partial class reportTrans : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool paidField;
        
        private System.Guid report_guidField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool paid {
            get {
                return this.paidField;
            }
            set {
                this.paidField = value;
                this.RaisePropertyChanged("paid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public System.Guid report_guid {
            get {
                return this.report_guidField;
            }
            set {
                this.report_guidField = value;
                this.RaisePropertyChanged("report_guid");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://lightstonebusiness.co.za/")]
    public partial class request_propspect : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string user_tokenField;
        
        private long prov_idField;
        
        private long munic_idField;
        
        private long sub_idField;
        
        private long est_idField;
        
        private double radiusField;
        
        private double xField;
        
        private double yField;
        
        private string siccodeField;
        
        private int groupscoreField;
        
        private string sizecatField;
        
        private string companynameField;
        
        private string tradingasField;
        
        private string vatnumberField;
        
        private System.Nullable<System.DateTime> dateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string user_token {
            get {
                return this.user_tokenField;
            }
            set {
                this.user_tokenField = value;
                this.RaisePropertyChanged("user_token");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public long prov_id {
            get {
                return this.prov_idField;
            }
            set {
                this.prov_idField = value;
                this.RaisePropertyChanged("prov_id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public long munic_id {
            get {
                return this.munic_idField;
            }
            set {
                this.munic_idField = value;
                this.RaisePropertyChanged("munic_id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public long sub_id {
            get {
                return this.sub_idField;
            }
            set {
                this.sub_idField = value;
                this.RaisePropertyChanged("sub_id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public long est_id {
            get {
                return this.est_idField;
            }
            set {
                this.est_idField = value;
                this.RaisePropertyChanged("est_id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public double radius {
            get {
                return this.radiusField;
            }
            set {
                this.radiusField = value;
                this.RaisePropertyChanged("radius");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public double x {
            get {
                return this.xField;
            }
            set {
                this.xField = value;
                this.RaisePropertyChanged("x");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public double y {
            get {
                return this.yField;
            }
            set {
                this.yField = value;
                this.RaisePropertyChanged("y");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string siccode {
            get {
                return this.siccodeField;
            }
            set {
                this.siccodeField = value;
                this.RaisePropertyChanged("siccode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public int groupscore {
            get {
                return this.groupscoreField;
            }
            set {
                this.groupscoreField = value;
                this.RaisePropertyChanged("groupscore");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string sizecat {
            get {
                return this.sizecatField;
            }
            set {
                this.sizecatField = value;
                this.RaisePropertyChanged("sizecat");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string companyname {
            get {
                return this.companynameField;
            }
            set {
                this.companynameField = value;
                this.RaisePropertyChanged("companyname");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public string tradingas {
            get {
                return this.tradingasField;
            }
            set {
                this.tradingasField = value;
                this.RaisePropertyChanged("tradingas");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public string vatnumber {
            get {
                return this.vatnumberField;
            }
            set {
                this.vatnumberField = value;
                this.RaisePropertyChanged("vatnumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=14)]
        public System.Nullable<System.DateTime> date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
                this.RaisePropertyChanged("date");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface apiSoapChannel : Lace.Domain.DataProviders.Lightstone.Business.Company.LightstoneBusinessServiceReference.apiSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class apiSoapClient : System.ServiceModel.ClientBase<Lace.Domain.DataProviders.Lightstone.Business.Company.LightstoneBusinessServiceReference.apiSoap>, Lace.Domain.DataProviders.Lightstone.Business.Company.LightstoneBusinessServiceReference.apiSoap {
        
        public apiSoapClient() {
        }
        
        public apiSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public apiSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public apiSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public apiSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Guid authenticateUser(string email, string password) {
            return base.Channel.authenticateUser(email, password);
        }
        
        public System.Threading.Tasks.Task<System.Guid> authenticateUserAsync(string email, string password) {
            return base.Channel.authenticateUserAsync(email, password);
        }
        
        public bool logOutUser(string user_token) {
            return base.Channel.logOutUser(user_token);
        }
        
        public System.Threading.Tasks.Task<bool> logOutUserAsync(string user_token) {
            return base.Channel.logOutUserAsync(user_token);
        }
        
        public System.Data.DataSet returnCompanies(string user_token, string company_name, string company_regnum, string company_vatnumber) {
            return base.Channel.returnCompanies(user_token, company_name, company_regnum, company_vatnumber);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> returnCompaniesAsync(string user_token, string company_name, string company_regnum, string company_vatnumber) {
            return base.Channel.returnCompaniesAsync(user_token, company_name, company_regnum, company_vatnumber);
        }
        
        public System.Data.DataSet returnCompaniesClient(string user_token, string company_name, string company_regnum, string company_vatnumber) {
            return base.Channel.returnCompaniesClient(user_token, company_name, company_regnum, company_vatnumber);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> returnCompaniesClientAsync(string user_token, string company_name, string company_regnum, string company_vatnumber) {
            return base.Channel.returnCompaniesClientAsync(user_token, company_name, company_regnum, company_vatnumber);
        }
        
        public System.Data.DataSet returnCompanyConfirmDetails(string user_token, long companyid) {
            return base.Channel.returnCompanyConfirmDetails(user_token, companyid);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> returnCompanyConfirmDetailsAsync(string user_token, long companyid) {
            return base.Channel.returnCompanyConfirmDetailsAsync(user_token, companyid);
        }
        
        public Lace.Domain.DataProviders.Lightstone.Business.Company.LightstoneBusinessServiceReference.reportTrans confirmCompany(string user_token, long company_id, string trackingnumber) {
            return base.Channel.confirmCompany(user_token, company_id, trackingnumber);
        }
        
        public System.Threading.Tasks.Task<Lace.Domain.DataProviders.Lightstone.Business.Company.LightstoneBusinessServiceReference.reportTrans> confirmCompanyAsync(string user_token, long company_id, string trackingnumber) {
            return base.Channel.confirmCompanyAsync(user_token, company_id, trackingnumber);
        }
        
        public System.Data.DataSet returnCompanyDirectors(string rc_id) {
            return base.Channel.returnCompanyDirectors(rc_id);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> returnCompanyDirectorsAsync(string rc_id) {
            return base.Channel.returnCompanyDirectorsAsync(rc_id);
        }
        
        public bool processDirector(System.Guid rc_id, System.Guid user_id, long directorid, string firstname, string surname, string idnumber, string address1, string address2, string postalcode) {
            return base.Channel.processDirector(rc_id, user_id, directorid, firstname, surname, idnumber, address1, address2, postalcode);
        }
        
        public System.Threading.Tasks.Task<bool> processDirectorAsync(System.Guid rc_id, System.Guid user_id, long directorid, string firstname, string surname, string idnumber, string address1, string address2, string postalcode) {
            return base.Channel.processDirectorAsync(rc_id, user_id, directorid, firstname, surname, idnumber, address1, address2, postalcode);
        }
        
        public System.Data.DataSet returnCompanyReport(string rc_id) {
            return base.Channel.returnCompanyReport(rc_id);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> returnCompanyReportAsync(string rc_id) {
            return base.Channel.returnCompanyReportAsync(rc_id);
        }
        
        public System.Data.DataSet returnCompanyReportTiers(string rc_id, long companyid) {
            return base.Channel.returnCompanyReportTiers(rc_id, companyid);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> returnCompanyReportTiersAsync(string rc_id, long companyid) {
            return base.Channel.returnCompanyReportTiersAsync(rc_id, companyid);
        }
        
        public System.Data.DataSet returnCompanyProps(long companyid) {
            return base.Channel.returnCompanyProps(companyid);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> returnCompanyPropsAsync(long companyid) {
            return base.Channel.returnCompanyPropsAsync(companyid);
        }
        
        public Lace.Domain.DataProviders.Lightstone.Business.Company.LightstoneBusinessServiceReference.reportTrans confirmCompany_Short(string user_token, long company_id, string trackingnumber) {
            return base.Channel.confirmCompany_Short(user_token, company_id, trackingnumber);
        }
        
        public System.Threading.Tasks.Task<Lace.Domain.DataProviders.Lightstone.Business.Company.LightstoneBusinessServiceReference.reportTrans> confirmCompany_ShortAsync(string user_token, long company_id, string trackingnumber) {
            return base.Channel.confirmCompany_ShortAsync(user_token, company_id, trackingnumber);
        }
        
        public System.Data.DataSet returnCompanyReport_Short(string rcs_id) {
            return base.Channel.returnCompanyReport_Short(rcs_id);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> returnCompanyReport_ShortAsync(string rcs_id) {
            return base.Channel.returnCompanyReport_ShortAsync(rcs_id);
        }
        
        public Lace.Domain.DataProviders.Lightstone.Business.Company.LightstoneBusinessServiceReference.reportTrans confirmCompany_Comprehensive(string user_token, long company_id, string trackingnumber) {
            return base.Channel.confirmCompany_Comprehensive(user_token, company_id, trackingnumber);
        }
        
        public System.Threading.Tasks.Task<Lace.Domain.DataProviders.Lightstone.Business.Company.LightstoneBusinessServiceReference.reportTrans> confirmCompany_ComprehensiveAsync(string user_token, long company_id, string trackingnumber) {
            return base.Channel.confirmCompany_ComprehensiveAsync(user_token, company_id, trackingnumber);
        }
        
        public System.Data.DataSet returnDirectors_Comprehensive(string rcc_id) {
            return base.Channel.returnDirectors_Comprehensive(rcc_id);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> returnDirectors_ComprehensiveAsync(string rcc_id) {
            return base.Channel.returnDirectors_ComprehensiveAsync(rcc_id);
        }
        
        public bool processDirector_Comprehensive(System.Guid rcc_id, System.Guid user_id, long directorid, string firstname, string surname, string idnumber, string address1, string address2, string postalcode) {
            return base.Channel.processDirector_Comprehensive(rcc_id, user_id, directorid, firstname, surname, idnumber, address1, address2, postalcode);
        }
        
        public System.Threading.Tasks.Task<bool> processDirector_ComprehensiveAsync(System.Guid rcc_id, System.Guid user_id, long directorid, string firstname, string surname, string idnumber, string address1, string address2, string postalcode) {
            return base.Channel.processDirector_ComprehensiveAsync(rcc_id, user_id, directorid, firstname, surname, idnumber, address1, address2, postalcode);
        }
        
        public System.Data.DataSet returnCompanyReport_Comprehensive(string rcc_id) {
            return base.Channel.returnCompanyReport_Comprehensive(rcc_id);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> returnCompanyReport_ComprehensiveAsync(string rcc_id) {
            return base.Channel.returnCompanyReport_ComprehensiveAsync(rcc_id);
        }
        
        public System.Data.DataSet returnDirectors(string user_token, string firstname, string surname, string idnumber) {
            return base.Channel.returnDirectors(user_token, firstname, surname, idnumber);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> returnDirectorsAsync(string user_token, string firstname, string surname, string idnumber) {
            return base.Channel.returnDirectorsAsync(user_token, firstname, surname, idnumber);
        }
        
        public Lace.Domain.DataProviders.Lightstone.Business.Company.LightstoneBusinessServiceReference.reportTrans confirmDirector(string user_token, long directorid, string idnumber, string trackingnumber) {
            return base.Channel.confirmDirector(user_token, directorid, idnumber, trackingnumber);
        }
        
        public System.Threading.Tasks.Task<Lace.Domain.DataProviders.Lightstone.Business.Company.LightstoneBusinessServiceReference.reportTrans> confirmDirectorAsync(string user_token, long directorid, string idnumber, string trackingnumber) {
            return base.Channel.confirmDirectorAsync(user_token, directorid, idnumber, trackingnumber);
        }
        
        public System.Data.DataSet returnDirectorReport(string rd_id) {
            return base.Channel.returnDirectorReport(rd_id);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> returnDirectorReportAsync(string rd_id) {
            return base.Channel.returnDirectorReportAsync(rd_id);
        }
        
        public System.Data.DataSet returnDirectorProps(long directorid) {
            return base.Channel.returnDirectorProps(directorid);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> returnDirectorPropsAsync(long directorid) {
            return base.Channel.returnDirectorPropsAsync(directorid);
        }
        
        public System.Data.DataSet returnProspects(Lace.Domain.DataProviders.Lightstone.Business.Company.LightstoneBusinessServiceReference.request_propspect rp) {
            return base.Channel.returnProspects(rp);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> returnProspectsAsync(Lace.Domain.DataProviders.Lightstone.Business.Company.LightstoneBusinessServiceReference.request_propspect rp) {
            return base.Channel.returnProspectsAsync(rp);
        }
        
        public System.Data.DataSet returnUserHistory(string user_token) {
            return base.Channel.returnUserHistory(user_token);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> returnUserHistoryAsync(string user_token) {
            return base.Channel.returnUserHistoryAsync(user_token);
        }
        
        public bool checkValidToken(string user_token) {
            return base.Channel.checkValidToken(user_token);
        }
        
        public System.Threading.Tasks.Task<bool> checkValidTokenAsync(string user_token) {
            return base.Channel.checkValidTokenAsync(user_token);
        }
        
        public Lace.Domain.DataProviders.Lightstone.Business.Company.LightstoneBusinessServiceReference.reportTrans confirmPropertyAndInsert(string user_token, long prop_id) {
            return base.Channel.confirmPropertyAndInsert(user_token, prop_id);
        }
        
        public System.Threading.Tasks.Task<Lace.Domain.DataProviders.Lightstone.Business.Company.LightstoneBusinessServiceReference.reportTrans> confirmPropertyAndInsertAsync(string user_token, long prop_id) {
            return base.Channel.confirmPropertyAndInsertAsync(user_token, prop_id);
        }
        
        public System.Data.DataSet returnPropertyReport(System.Guid rp_id) {
            return base.Channel.returnPropertyReport(rp_id);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> returnPropertyReportAsync(System.Guid rp_id) {
            return base.Channel.returnPropertyReportAsync(rp_id);
        }
        
        public System.Data.DataSet returnAVS(System.Guid ac_id) {
            return base.Channel.returnAVS(ac_id);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> returnAVSAsync(System.Guid ac_id) {
            return base.Channel.returnAVSAsync(ac_id);
        }
        
        public Lace.Domain.DataProviders.Lightstone.Business.Company.LightstoneBusinessServiceReference.reportTrans confirmBankCode(string user_token, long companyid, string trackingnumber) {
            return base.Channel.confirmBankCode(user_token, companyid, trackingnumber);
        }
        
        public System.Threading.Tasks.Task<Lace.Domain.DataProviders.Lightstone.Business.Company.LightstoneBusinessServiceReference.reportTrans> confirmBankCodeAsync(string user_token, long companyid, string trackingnumber) {
            return base.Channel.confirmBankCodeAsync(user_token, companyid, trackingnumber);
        }
        
        public void insertBankCode(System.Guid rb_id, System.Guid user_id, string RB_AccountNumber, string RB_Bank, string RB_BranchName, string RB_Branchcode, string RB_Amount, string RB_Period, string RB_Express, string RB_BankCode, string RB_TradingAs) {
            base.Channel.insertBankCode(rb_id, user_id, RB_AccountNumber, RB_Bank, RB_BranchName, RB_Branchcode, RB_Amount, RB_Period, RB_Express, RB_BankCode, RB_TradingAs);
        }
        
        public System.Threading.Tasks.Task insertBankCodeAsync(System.Guid rb_id, System.Guid user_id, string RB_AccountNumber, string RB_Bank, string RB_BranchName, string RB_Branchcode, string RB_Amount, string RB_Period, string RB_Express, string RB_BankCode, string RB_TradingAs) {
            return base.Channel.insertBankCodeAsync(rb_id, user_id, RB_AccountNumber, RB_Bank, RB_BranchName, RB_Branchcode, RB_Amount, RB_Period, RB_Express, RB_BankCode, RB_TradingAs);
        }
        
        public void updateBankCode(System.Guid user_id, string RB_BankCode, string RB_BankCodeDate, System.Guid rb_id, string rb_amount) {
            base.Channel.updateBankCode(user_id, RB_BankCode, RB_BankCodeDate, rb_id, rb_amount);
        }
        
        public System.Threading.Tasks.Task updateBankCodeAsync(System.Guid user_id, string RB_BankCode, string RB_BankCodeDate, System.Guid rb_id, string rb_amount) {
            return base.Channel.updateBankCodeAsync(user_id, RB_BankCode, RB_BankCodeDate, rb_id, rb_amount);
        }
        
        public System.Data.DataSet returnBankCodeReport(string rb_id) {
            return base.Channel.returnBankCodeReport(rb_id);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> returnBankCodeReportAsync(string rb_id) {
            return base.Channel.returnBankCodeReportAsync(rb_id);
        }
        
        public System.Data.DataSet returnPersonalDetailsFromCell(string user_token, string cellnumber) {
            return base.Channel.returnPersonalDetailsFromCell(user_token, cellnumber);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> returnPersonalDetailsFromCellAsync(string user_token, string cellnumber) {
            return base.Channel.returnPersonalDetailsFromCellAsync(user_token, cellnumber);
        }
        
        public System.Data.DataSet returnAlertCompanies(string user_token) {
            return base.Channel.returnAlertCompanies(user_token);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> returnAlertCompaniesAsync(string user_token) {
            return base.Channel.returnAlertCompaniesAsync(user_token);
        }
        
        public Lace.Domain.DataProviders.Lightstone.Business.Company.LightstoneBusinessServiceReference.reportTrans confirmTradeReferences(string user_token, long companyid, string trackingnumber) {
            return base.Channel.confirmTradeReferences(user_token, companyid, trackingnumber);
        }
        
        public System.Threading.Tasks.Task<Lace.Domain.DataProviders.Lightstone.Business.Company.LightstoneBusinessServiceReference.reportTrans> confirmTradeReferencesAsync(string user_token, long companyid, string trackingnumber) {
            return base.Channel.confirmTradeReferencesAsync(user_token, companyid, trackingnumber);
        }
        
        public void insertTradeReference_Company(System.Guid rt_id, long companyid, string companyname, string companyregnum) {
            base.Channel.insertTradeReference_Company(rt_id, companyid, companyname, companyregnum);
        }
        
        public System.Threading.Tasks.Task insertTradeReference_CompanyAsync(System.Guid rt_id, long companyid, string companyname, string companyregnum) {
            return base.Channel.insertTradeReference_CompanyAsync(rt_id, companyid, companyname, companyregnum);
        }
        
        public void updateTradeReferenceReport(System.Guid rt_id, int RT_RefCount, string RT_TradingAs, string RT_Address1, string RT_Address2, string RT_Address3, string RT_AddressCode, string RT_PhoneNumber, string RT_Contact, string trackingnumber) {
            base.Channel.updateTradeReferenceReport(rt_id, RT_RefCount, RT_TradingAs, RT_Address1, RT_Address2, RT_Address3, RT_AddressCode, RT_PhoneNumber, RT_Contact, trackingnumber);
        }
        
        public System.Threading.Tasks.Task updateTradeReferenceReportAsync(System.Guid rt_id, int RT_RefCount, string RT_TradingAs, string RT_Address1, string RT_Address2, string RT_Address3, string RT_AddressCode, string RT_PhoneNumber, string RT_Contact, string trackingnumber) {
            return base.Channel.updateTradeReferenceReportAsync(rt_id, RT_RefCount, RT_TradingAs, RT_Address1, RT_Address2, RT_Address3, RT_AddressCode, RT_PhoneNumber, RT_Contact, trackingnumber);
        }
        
        public void updateTradeReference(
                    System.Guid rtc_id, 
                    string RTC_PaymentProfile, 
                    string RTC_OutstandingBalance, 
                    int RTC_Known_Years, 
                    int RTC_Known_Months, 
                    string RTC_CreditLimit, 
                    string RTC_AVGPurchase, 
                    string RTC_Terms, 
                    string RTC_Discount, 
                    string RTC_RefName, 
                    string RTC_Memo, 
                    string RTC_Address1, 
                    string RTC_Address2, 
                    string RTC_Address3, 
                    string RTC_AreaCode, 
                    string RTC_Phone) {
            base.Channel.updateTradeReference(rtc_id, RTC_PaymentProfile, RTC_OutstandingBalance, RTC_Known_Years, RTC_Known_Months, RTC_CreditLimit, RTC_AVGPurchase, RTC_Terms, RTC_Discount, RTC_RefName, RTC_Memo, RTC_Address1, RTC_Address2, RTC_Address3, RTC_AreaCode, RTC_Phone);
        }
        
        public System.Threading.Tasks.Task updateTradeReferenceAsync(
                    System.Guid rtc_id, 
                    string RTC_PaymentProfile, 
                    string RTC_OutstandingBalance, 
                    int RTC_Known_Years, 
                    int RTC_Known_Months, 
                    string RTC_CreditLimit, 
                    string RTC_AVGPurchase, 
                    string RTC_Terms, 
                    string RTC_Discount, 
                    string RTC_RefName, 
                    string RTC_Memo, 
                    string RTC_Address1, 
                    string RTC_Address2, 
                    string RTC_Address3, 
                    string RTC_AreaCode, 
                    string RTC_Phone) {
            return base.Channel.updateTradeReferenceAsync(rtc_id, RTC_PaymentProfile, RTC_OutstandingBalance, RTC_Known_Years, RTC_Known_Months, RTC_CreditLimit, RTC_AVGPurchase, RTC_Terms, RTC_Discount, RTC_RefName, RTC_Memo, RTC_Address1, RTC_Address2, RTC_Address3, RTC_AreaCode, RTC_Phone);
        }
        
        public void updateTradeReferenceProgress(System.Guid rt_id, System.Guid user_id) {
            base.Channel.updateTradeReferenceProgress(rt_id, user_id);
        }
        
        public System.Threading.Tasks.Task updateTradeReferenceProgressAsync(System.Guid rt_id, System.Guid user_id) {
            return base.Channel.updateTradeReferenceProgressAsync(rt_id, user_id);
        }
        
        public System.Data.DataSet returnTradeReferenceReport(string rt_id) {
            return base.Channel.returnTradeReferenceReport(rt_id);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> returnTradeReferenceReportAsync(string rt_id) {
            return base.Channel.returnTradeReferenceReportAsync(rt_id);
        }
        
        public Lace.Domain.DataProviders.Lightstone.Business.Company.LightstoneBusinessServiceReference.reportTrans confirmConsumer(string user_token, string idnumber, string firstname, string surname, string dateofbirth, string trackingnumber) {
            return base.Channel.confirmConsumer(user_token, idnumber, firstname, surname, dateofbirth, trackingnumber);
        }
        
        public System.Threading.Tasks.Task<Lace.Domain.DataProviders.Lightstone.Business.Company.LightstoneBusinessServiceReference.reportTrans> confirmConsumerAsync(string user_token, string idnumber, string firstname, string surname, string dateofbirth, string trackingnumber) {
            return base.Channel.confirmConsumerAsync(user_token, idnumber, firstname, surname, dateofbirth, trackingnumber);
        }
        
        public System.Data.DataSet returnConsumerReport(string rco_id) {
            return base.Channel.returnConsumerReport(rco_id);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> returnConsumerReportAsync(string rco_id) {
            return base.Channel.returnConsumerReportAsync(rco_id);
        }
        
        public System.Data.DataSet returnCompanyDefaults(string rd_id) {
            return base.Channel.returnCompanyDefaults(rd_id);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> returnCompanyDefaultsAsync(string rd_id) {
            return base.Channel.returnCompanyDefaultsAsync(rd_id);
        }
        
        public System.Data.DataSet returnUserDetails(string key, string user_token) {
            return base.Channel.returnUserDetails(key, user_token);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> returnUserDetailsAsync(string key, string user_token) {
            return base.Channel.returnUserDetailsAsync(key, user_token);
        }
        
        public bool returnUserSetting(string user_token, int setting_id) {
            return base.Channel.returnUserSetting(user_token, setting_id);
        }
        
        public System.Threading.Tasks.Task<bool> returnUserSettingAsync(string user_token, int setting_id) {
            return base.Channel.returnUserSettingAsync(user_token, setting_id);
        }
    }
}
