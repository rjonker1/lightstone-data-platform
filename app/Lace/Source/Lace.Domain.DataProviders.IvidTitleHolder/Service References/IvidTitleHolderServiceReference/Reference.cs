//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18449
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Lace.Domain.DataProviders.IvidTitleHolder.IvidTitleHolderServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.ubiquitech.co.za/schemas/ivid-titleholder/", ConfigurationName="IvidTitleHolderServiceReference.IvidTitleholderService")]
    public interface IvidTitleholderService {
        
        // CODEGEN: Generating message contract since the operation RegistrationInformationQuery is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Lace.Domain.DataProviders.IvidTitleHolder.IvidTitleHolderServiceReference.RegistrationInformationQueryResponse1 RegistrationInformationQuery(Lace.Domain.DataProviders.IvidTitleHolder.IvidTitleHolderServiceReference.RegistrationInformationQueryRequest1 request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<Lace.Domain.DataProviders.IvidTitleHolder.IvidTitleHolderServiceReference.RegistrationInformationQueryResponse1> RegistrationInformationQueryAsync(Lace.Domain.DataProviders.IvidTitleHolder.IvidTitleHolderServiceReference.RegistrationInformationQueryRequest1 request);
        
        // CODEGEN: Generating message contract since the operation TitleholderQuery is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Lace.Domain.DataProviders.IvidTitleHolder.IvidTitleHolderServiceReference.TitleholderQueryResponse1 TitleholderQuery(Lace.Domain.DataProviders.IvidTitleHolder.IvidTitleHolderServiceReference.TitleholderQueryRequest1 request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<Lace.Domain.DataProviders.IvidTitleHolder.IvidTitleHolderServiceReference.TitleholderQueryResponse1> TitleholderQueryAsync(Lace.Domain.DataProviders.IvidTitleHolder.IvidTitleHolderServiceReference.TitleholderQueryRequest1 request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.ubiquitech.co.za/schemas/ivid-titleholder/")]
    public partial class RegistrationInformationQueryRequest : object, System.ComponentModel.INotifyPropertyChanged {
        
        private RequesterDetailsElement requesterDetailsField;
        
        private RegistrationInformationCriteriaElement criteriaField;
        
        private DealerIdentificationElement[] dealerField;
        
        private string uniqueReferenceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public RequesterDetailsElement RequesterDetails {
            get {
                return this.requesterDetailsField;
            }
            set {
                this.requesterDetailsField = value;
                this.RaisePropertyChanged("RequesterDetails");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public RegistrationInformationCriteriaElement Criteria {
            get {
                return this.criteriaField;
            }
            set {
                this.criteriaField = value;
                this.RaisePropertyChanged("Criteria");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Dealer", Order=2)]
        public DealerIdentificationElement[] Dealer {
            get {
                return this.dealerField;
            }
            set {
                this.dealerField = value;
                this.RaisePropertyChanged("Dealer");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string UniqueReference {
            get {
                return this.uniqueReferenceField;
            }
            set {
                this.uniqueReferenceField = value;
                this.RaisePropertyChanged("UniqueReference");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.ubiquitech.co.za/schemas/ivid-titleholder/")]
    public partial class RequesterDetailsElement : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string requesterNameField;
        
        private string requesterPhoneField;
        
        private string requesterEmailField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string requesterName {
            get {
                return this.requesterNameField;
            }
            set {
                this.requesterNameField = value;
                this.RaisePropertyChanged("requesterName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string requesterPhone {
            get {
                return this.requesterPhoneField;
            }
            set {
                this.requesterPhoneField = value;
                this.RaisePropertyChanged("requesterPhone");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string requesterEmail {
            get {
                return this.requesterEmailField;
            }
            set {
                this.requesterEmailField = value;
                this.RaisePropertyChanged("requesterEmail");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.ubiquitech.co.za/schemas/ivid-titleholder/")]
    public partial class RegistrationInformationErrorElement : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string errorCodeField;
        
        private string errorDescriptionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
                this.RaisePropertyChanged("errorCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string errorDescription {
            get {
                return this.errorDescriptionField;
            }
            set {
                this.errorDescriptionField = value;
                this.RaisePropertyChanged("errorDescription");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.ubiquitech.co.za/schemas/ivid-titleholder/")]
    public partial class RegistrationInformationElement : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string bankCodeField;
        
        private string vinField;
        
        private string engineNumberField;
        
        private string natisRegisterNumberField;
        
        private string ownerIdNumberField;
        
        private string ownerNameField;
        
        private string makeField;
        
        private string modelField;
        
        private string descriptionField;
        
        private string yearOfLiabilityForLicensingField;
        
        private System.DateTime documentIssueDateField;
        
        private bool documentIssueDateFieldSpecified;
        
        private string accountNumberField;
        
        private string titleholderIdNumberField;
        
        private string titleholderNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string bankCode {
            get {
                return this.bankCodeField;
            }
            set {
                this.bankCodeField = value;
                this.RaisePropertyChanged("bankCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string vin {
            get {
                return this.vinField;
            }
            set {
                this.vinField = value;
                this.RaisePropertyChanged("vin");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string engineNumber {
            get {
                return this.engineNumberField;
            }
            set {
                this.engineNumberField = value;
                this.RaisePropertyChanged("engineNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string natisRegisterNumber {
            get {
                return this.natisRegisterNumberField;
            }
            set {
                this.natisRegisterNumberField = value;
                this.RaisePropertyChanged("natisRegisterNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ownerIdNumber {
            get {
                return this.ownerIdNumberField;
            }
            set {
                this.ownerIdNumberField = value;
                this.RaisePropertyChanged("ownerIdNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ownerName {
            get {
                return this.ownerNameField;
            }
            set {
                this.ownerNameField = value;
                this.RaisePropertyChanged("ownerName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string make {
            get {
                return this.makeField;
            }
            set {
                this.makeField = value;
                this.RaisePropertyChanged("make");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string model {
            get {
                return this.modelField;
            }
            set {
                this.modelField = value;
                this.RaisePropertyChanged("model");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("description");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string yearOfLiabilityForLicensing {
            get {
                return this.yearOfLiabilityForLicensingField;
            }
            set {
                this.yearOfLiabilityForLicensingField = value;
                this.RaisePropertyChanged("yearOfLiabilityForLicensing");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="date")]
        public System.DateTime documentIssueDate {
            get {
                return this.documentIssueDateField;
            }
            set {
                this.documentIssueDateField = value;
                this.RaisePropertyChanged("documentIssueDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool documentIssueDateSpecified {
            get {
                return this.documentIssueDateFieldSpecified;
            }
            set {
                this.documentIssueDateFieldSpecified = value;
                this.RaisePropertyChanged("documentIssueDateSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string accountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
                this.RaisePropertyChanged("accountNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string titleholderIdNumber {
            get {
                return this.titleholderIdNumberField;
            }
            set {
                this.titleholderIdNumberField = value;
                this.RaisePropertyChanged("titleholderIdNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string titleholderName {
            get {
                return this.titleholderNameField;
            }
            set {
                this.titleholderNameField = value;
                this.RaisePropertyChanged("titleholderName");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.ubiquitech.co.za/schemas/ivid-titleholder/")]
    public partial class DealerIdentificationElement : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string dealerCodeField;
        
        private string bankCodeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string dealerCode {
            get {
                return this.dealerCodeField;
            }
            set {
                this.dealerCodeField = value;
                this.RaisePropertyChanged("dealerCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string bankCode {
            get {
                return this.bankCodeField;
            }
            set {
                this.bankCodeField = value;
                this.RaisePropertyChanged("bankCode");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.ubiquitech.co.za/schemas/ivid-titleholder/")]
    public partial class RegistrationInformationCriteriaElement : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string itemField;
        
        private ItemChoiceType itemElementNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AccountNumber", typeof(string), Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("VIN", typeof(string), Order=0)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
                this.RaisePropertyChanged("Item");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType ItemElementName {
            get {
                return this.itemElementNameField;
            }
            set {
                this.itemElementNameField = value;
                this.RaisePropertyChanged("ItemElementName");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.ubiquitech.co.za/schemas/ivid-titleholder/", IncludeInSchema=false)]
    public enum ItemChoiceType {
        
        /// <remarks/>
        AccountNumber,
        
        /// <remarks/>
        VIN,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.ubiquitech.co.za/schemas/ivid-titleholder/")]
    public partial class RegistrationInformationQueryResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private object itemField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Error", typeof(RegistrationInformationErrorElement), Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("Success", typeof(RegistrationInformationElement), Order=0)]
        public object Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
                this.RaisePropertyChanged("Item");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class RegistrationInformationQueryRequest1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.ubiquitech.co.za/schemas/ivid-titleholder/", Order=0)]
        public Lace.Domain.DataProviders.IvidTitleHolder.IvidTitleHolderServiceReference.RegistrationInformationQueryRequest RegistrationInformationQueryRequest;
        
        public RegistrationInformationQueryRequest1() {
        }
        
        public RegistrationInformationQueryRequest1(Lace.Domain.DataProviders.IvidTitleHolder.IvidTitleHolderServiceReference.RegistrationInformationQueryRequest RegistrationInformationQueryRequest) {
            this.RegistrationInformationQueryRequest = RegistrationInformationQueryRequest;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class RegistrationInformationQueryResponse1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.ubiquitech.co.za/schemas/ivid-titleholder/", Order=0)]
        public Lace.Domain.DataProviders.IvidTitleHolder.IvidTitleHolderServiceReference.RegistrationInformationQueryResponse RegistrationInformationQueryResponse;
        
        public RegistrationInformationQueryResponse1() {
        }
        
        public RegistrationInformationQueryResponse1(Lace.Domain.DataProviders.IvidTitleHolder.IvidTitleHolderServiceReference.RegistrationInformationQueryResponse RegistrationInformationQueryResponse) {
            this.RegistrationInformationQueryResponse = RegistrationInformationQueryResponse;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.ubiquitech.co.za/schemas/ivid-titleholder/")]
    public partial class TitleholderQueryRequest : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string vinField;
        
        private RequesterDetailsElement requesterDetailsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string vin {
            get {
                return this.vinField;
            }
            set {
                this.vinField = value;
                this.RaisePropertyChanged("vin");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public RequesterDetailsElement requesterDetails {
            get {
                return this.requesterDetailsField;
            }
            set {
                this.requesterDetailsField = value;
                this.RaisePropertyChanged("requesterDetails");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.ubiquitech.co.za/schemas/ivid-titleholder/")]
    public partial class TitleholderQueryResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string bankNameField;
        
        private bool flaggedOnAnprField;
        
        private bool partialResponseField;
        
        private string accountNumberField;
        
        private System.DateTime accountOpenDateField;
        
        private bool accountOpenDateFieldSpecified;
        
        private System.DateTime accountClosedDateField;
        
        private bool accountClosedDateFieldSpecified;
        
        private string yearOfLiabilityForLicensingField;
        
        private string makeField;
        
        private string modelField;
        
        private string vinField;
        
        private string engineNumberField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string bankName {
            get {
                return this.bankNameField;
            }
            set {
                this.bankNameField = value;
                this.RaisePropertyChanged("bankName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public bool flaggedOnAnpr {
            get {
                return this.flaggedOnAnprField;
            }
            set {
                this.flaggedOnAnprField = value;
                this.RaisePropertyChanged("flaggedOnAnpr");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public bool partialResponse {
            get {
                return this.partialResponseField;
            }
            set {
                this.partialResponseField = value;
                this.RaisePropertyChanged("partialResponse");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string accountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
                this.RaisePropertyChanged("accountNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date", Order=4)]
        public System.DateTime accountOpenDate {
            get {
                return this.accountOpenDateField;
            }
            set {
                this.accountOpenDateField = value;
                this.RaisePropertyChanged("accountOpenDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool accountOpenDateSpecified {
            get {
                return this.accountOpenDateFieldSpecified;
            }
            set {
                this.accountOpenDateFieldSpecified = value;
                this.RaisePropertyChanged("accountOpenDateSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date", Order=5)]
        public System.DateTime accountClosedDate {
            get {
                return this.accountClosedDateField;
            }
            set {
                this.accountClosedDateField = value;
                this.RaisePropertyChanged("accountClosedDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool accountClosedDateSpecified {
            get {
                return this.accountClosedDateFieldSpecified;
            }
            set {
                this.accountClosedDateFieldSpecified = value;
                this.RaisePropertyChanged("accountClosedDateSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string yearOfLiabilityForLicensing {
            get {
                return this.yearOfLiabilityForLicensingField;
            }
            set {
                this.yearOfLiabilityForLicensingField = value;
                this.RaisePropertyChanged("yearOfLiabilityForLicensing");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string make {
            get {
                return this.makeField;
            }
            set {
                this.makeField = value;
                this.RaisePropertyChanged("make");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string model {
            get {
                return this.modelField;
            }
            set {
                this.modelField = value;
                this.RaisePropertyChanged("model");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string vin {
            get {
                return this.vinField;
            }
            set {
                this.vinField = value;
                this.RaisePropertyChanged("vin");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string engineNumber {
            get {
                return this.engineNumberField;
            }
            set {
                this.engineNumberField = value;
                this.RaisePropertyChanged("engineNumber");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class TitleholderQueryRequest1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.ubiquitech.co.za/schemas/ivid-titleholder/", Order=0)]
        public Lace.Domain.DataProviders.IvidTitleHolder.IvidTitleHolderServiceReference.TitleholderQueryRequest TitleholderQueryRequest;
        
        public TitleholderQueryRequest1() {
        }
        
        public TitleholderQueryRequest1(Lace.Domain.DataProviders.IvidTitleHolder.IvidTitleHolderServiceReference.TitleholderQueryRequest TitleholderQueryRequest) {
            this.TitleholderQueryRequest = TitleholderQueryRequest;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class TitleholderQueryResponse1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.ubiquitech.co.za/schemas/ivid-titleholder/", Order=0)]
        public Lace.Domain.DataProviders.IvidTitleHolder.IvidTitleHolderServiceReference.TitleholderQueryResponse TitleholderQueryResponse;
        
        public TitleholderQueryResponse1() {
        }
        
        public TitleholderQueryResponse1(Lace.Domain.DataProviders.IvidTitleHolder.IvidTitleHolderServiceReference.TitleholderQueryResponse TitleholderQueryResponse) {
            this.TitleholderQueryResponse = TitleholderQueryResponse;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IvidTitleholderServiceChannel : Lace.Domain.DataProviders.IvidTitleHolder.IvidTitleHolderServiceReference.IvidTitleholderService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IvidTitleholderServiceClient : System.ServiceModel.ClientBase<Lace.Domain.DataProviders.IvidTitleHolder.IvidTitleHolderServiceReference.IvidTitleholderService>, Lace.Domain.DataProviders.IvidTitleHolder.IvidTitleHolderServiceReference.IvidTitleholderService {
        
        public IvidTitleholderServiceClient() {
        }
        
        public IvidTitleholderServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public IvidTitleholderServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IvidTitleholderServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IvidTitleholderServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Lace.Domain.DataProviders.IvidTitleHolder.IvidTitleHolderServiceReference.RegistrationInformationQueryResponse1 Lace.Domain.DataProviders.IvidTitleHolder.IvidTitleHolderServiceReference.IvidTitleholderService.RegistrationInformationQuery(Lace.Domain.DataProviders.IvidTitleHolder.IvidTitleHolderServiceReference.RegistrationInformationQueryRequest1 request) {
            return base.Channel.RegistrationInformationQuery(request);
        }
        
        public Lace.Domain.DataProviders.IvidTitleHolder.IvidTitleHolderServiceReference.RegistrationInformationQueryResponse RegistrationInformationQuery(Lace.Domain.DataProviders.IvidTitleHolder.IvidTitleHolderServiceReference.RegistrationInformationQueryRequest RegistrationInformationQueryRequest) {
            Lace.Domain.DataProviders.IvidTitleHolder.IvidTitleHolderServiceReference.RegistrationInformationQueryRequest1 inValue = new Lace.Domain.DataProviders.IvidTitleHolder.IvidTitleHolderServiceReference.RegistrationInformationQueryRequest1();
            inValue.RegistrationInformationQueryRequest = RegistrationInformationQueryRequest;
            Lace.Domain.DataProviders.IvidTitleHolder.IvidTitleHolderServiceReference.RegistrationInformationQueryResponse1 retVal = ((Lace.Domain.DataProviders.IvidTitleHolder.IvidTitleHolderServiceReference.IvidTitleholderService)(this)).RegistrationInformationQuery(inValue);
            return retVal.RegistrationInformationQueryResponse;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Lace.Domain.DataProviders.IvidTitleHolder.IvidTitleHolderServiceReference.RegistrationInformationQueryResponse1> Lace.Domain.DataProviders.IvidTitleHolder.IvidTitleHolderServiceReference.IvidTitleholderService.RegistrationInformationQueryAsync(Lace.Domain.DataProviders.IvidTitleHolder.IvidTitleHolderServiceReference.RegistrationInformationQueryRequest1 request) {
            return base.Channel.RegistrationInformationQueryAsync(request);
        }
        
        public System.Threading.Tasks.Task<Lace.Domain.DataProviders.IvidTitleHolder.IvidTitleHolderServiceReference.RegistrationInformationQueryResponse1> RegistrationInformationQueryAsync(Lace.Domain.DataProviders.IvidTitleHolder.IvidTitleHolderServiceReference.RegistrationInformationQueryRequest RegistrationInformationQueryRequest) {
            Lace.Domain.DataProviders.IvidTitleHolder.IvidTitleHolderServiceReference.RegistrationInformationQueryRequest1 inValue = new Lace.Domain.DataProviders.IvidTitleHolder.IvidTitleHolderServiceReference.RegistrationInformationQueryRequest1();
            inValue.RegistrationInformationQueryRequest = RegistrationInformationQueryRequest;
            return ((Lace.Domain.DataProviders.IvidTitleHolder.IvidTitleHolderServiceReference.IvidTitleholderService)(this)).RegistrationInformationQueryAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Lace.Domain.DataProviders.IvidTitleHolder.IvidTitleHolderServiceReference.TitleholderQueryResponse1 Lace.Domain.DataProviders.IvidTitleHolder.IvidTitleHolderServiceReference.IvidTitleholderService.TitleholderQuery(Lace.Domain.DataProviders.IvidTitleHolder.IvidTitleHolderServiceReference.TitleholderQueryRequest1 request) {
            return base.Channel.TitleholderQuery(request);
        }
        
        public Lace.Domain.DataProviders.IvidTitleHolder.IvidTitleHolderServiceReference.TitleholderQueryResponse TitleholderQuery(Lace.Domain.DataProviders.IvidTitleHolder.IvidTitleHolderServiceReference.TitleholderQueryRequest TitleholderQueryRequest) {
            Lace.Domain.DataProviders.IvidTitleHolder.IvidTitleHolderServiceReference.TitleholderQueryRequest1 inValue = new Lace.Domain.DataProviders.IvidTitleHolder.IvidTitleHolderServiceReference.TitleholderQueryRequest1();
            inValue.TitleholderQueryRequest = TitleholderQueryRequest;
            Lace.Domain.DataProviders.IvidTitleHolder.IvidTitleHolderServiceReference.TitleholderQueryResponse1 retVal = ((Lace.Domain.DataProviders.IvidTitleHolder.IvidTitleHolderServiceReference.IvidTitleholderService)(this)).TitleholderQuery(inValue);
            return retVal.TitleholderQueryResponse;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Lace.Domain.DataProviders.IvidTitleHolder.IvidTitleHolderServiceReference.TitleholderQueryResponse1> Lace.Domain.DataProviders.IvidTitleHolder.IvidTitleHolderServiceReference.IvidTitleholderService.TitleholderQueryAsync(Lace.Domain.DataProviders.IvidTitleHolder.IvidTitleHolderServiceReference.TitleholderQueryRequest1 request) {
            return base.Channel.TitleholderQueryAsync(request);
        }
        
        public System.Threading.Tasks.Task<Lace.Domain.DataProviders.IvidTitleHolder.IvidTitleHolderServiceReference.TitleholderQueryResponse1> TitleholderQueryAsync(Lace.Domain.DataProviders.IvidTitleHolder.IvidTitleHolderServiceReference.TitleholderQueryRequest TitleholderQueryRequest) {
            Lace.Domain.DataProviders.IvidTitleHolder.IvidTitleHolderServiceReference.TitleholderQueryRequest1 inValue = new Lace.Domain.DataProviders.IvidTitleHolder.IvidTitleHolderServiceReference.TitleholderQueryRequest1();
            inValue.TitleholderQueryRequest = TitleholderQueryRequest;
            return ((Lace.Domain.DataProviders.IvidTitleHolder.IvidTitleHolderServiceReference.IvidTitleholderService)(this)).TitleholderQueryAsync(inValue);
        }
    }
}
