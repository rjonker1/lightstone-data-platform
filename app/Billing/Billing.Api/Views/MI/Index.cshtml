@using Billing.Api.ViewModels
@Html.Partial("Shared/PageHeader", new HeaderViewModel("M.I.", ""))

<section class="content">
    <div class="row">
        <div class="col-md-3">
            <div class="box box-solid">
                <div class="box-header with-border">
                    <h3 class="box-title">Filter Options:</h3>
                    <button type="button" class="view btn btn-primary btn-md" style="float: right;">Filter</button>
                </div>
                <div class="box-body no-padding">
                    <ul class="nav nav-pills nav-stacked">
                        <li>
                            <div class="input-group">
                                <span class="input-group-addon glyphicon glyphicon-pencil" id="basic-addon1"></span>
                                <input type="text" class="form-control" placeholder="Client / Customer" aria-describedby="basic-addon1">
                            </div>
                        </li>
                        <li>
                            <div class="input-group">
                                <span class="input-group-addon glyphicon glyphicon-pencil" id="basic-addon1"></span>
                                <input type="text" class="form-control" placeholder="Username" aria-describedby="basic-addon1">
                            </div>
                        </li>
                        <li>
                            <div class="input-group">
                                <span class="input-group-addon glyphicon glyphicon-pencil" id="basic-addon1"></span>
                                <input type="text" class="form-control" placeholder="Product type" aria-describedby="basic-addon1">
                            </div>
                        </li>
                        <li>
                            <div class="input-group">
                                <span class="input-group-addon glyphicon glyphicon-pencil" id="basic-addon1"></span>
                                <input type="text" class="form-control" placeholder="Account Manager" aria-describedby="basic-addon1">
                            </div>
                        </li>
                        <li>
                            <div class="input-group">
                                <span class="input-group-addon glyphicon glyphicon-pencil" id="basic-addon1"></span>
                                <input type="text" class="form-control" placeholder="Industry" aria-describedby="basic-addon1">
                            </div>
                        </li>
                    </ul>
                </div><!-- /.box-body -->
            </div><!-- /. box -->
        
            <div class="box box-solid">
                <!-- Donut chart -->
                <div class="box box-primary">
                    <div class="box-header">
                        <i class="fa fa-bar-chart-o"></i>
                        <h3 class="box-title">Donut Chart</h3>
                    </div>
                    <div class="box-body">
                        <div id="donut-chart" style="height: 300px;"></div>
                    </div><!-- /.box-body-->
                </div><!-- /.box -->
            </div><!-- /.box -->
            
        </div><!-- /.col -->
        <div class="col-md-9">
            <div class="box box-primary">
                @*<div class="box-header with-border">
                    <h3 class="box-title">Inbox</h3>
                    <div class="box-tools pull-right">
                        <div class="has-feedback">
                            <input type="text" class="form-control input-sm" placeholder="Search Mail" />
                            <span class="glyphicon glyphicon-search form-control-feedback"></span>
                        </div>
                    </div><!-- /.box-tools -->
                </div><!-- /.box-header -->*@

                <table id="table"></table>

            </div><!-- /. box -->
        </div><!-- /.col -->
    </div><!-- /.row -->
</section><!-- /.content -->


@*<div class="box">

    <table id="table"></table>

    <h2 id="detail-table-header"></h2>
    <table id="detail"></table>

    
</div>*@

<!-- FLOT CHARTS -->
<script src="~/Scripts/flot/jquery.flot.min.js" type="text/javascript"></script>
<!-- FLOT RESIZE PLUGIN - allows the chart to redraw when the window is resized -->
<script src="~/Scripts/flot/jquery.flot.resize.min.js" type="text/javascript"></script>
<!-- FLOT PIE PLUGIN - also used to draw donut charts -->
<script src="~/Scripts/flot/jquery.flot.pie.min.js" type="text/javascript"></script>
<!-- FLOT CATEGORIES PLUGIN - Used to draw bar charts -->
<script src="~/Scripts/flot/jquery.flot.categories.min.js" type="text/javascript"></script>

<script>

    $('#table').bootstrapTable({
        url: "/MI",
        search: true,
        showRefresh: true,
        showColumns: true,
        pagination: true,
        pageNumber: 1,
        pageSize: 10,
        pageList: [10, 25, 50, 100, 'All'],
        columns: [{
            field: 'id',
            title: 'Item ID',
            visible: false
        }, {
            field: 'totalCoS',
            title: 'Cost Of Sale (Total)',
            sortable: true,
            //formatter: gridCOSFormatter
        }, {
            field: 'totalRevenue',
            title: 'Revenue (Total)',
            sortable: true
        }, {
            field: 'nonBillable',
            title: 'Non-Billable (Total)',
            sortable: true
        }]
    });


    $.get("/MI")
    .done(function (data) {
        console.log(data);
    });

    Billing.overrideDataTablesStyling();


    $(function () {

        /*
         * Flot Interactive Chart
         * -----------------------
         */
        // We use an inline data source in the example, usually data would
        // be fetched from a server
        var data = [], totalPoints = 100;
        function getRandomData() {

            if (data.length > 0)
                data = data.slice(1);

            // Do a random walk
            while (data.length < totalPoints) {

                var prev = data.length > 0 ? data[data.length - 1] : 50,
                        y = prev + Math.random() * 10 - 5;

                if (y < 0) {
                    y = 0;
                } else if (y > 100) {
                    y = 100;
                }

                data.push(y);
            }

            // Zip the generated y values with the x values
            var res = [];
            for (var i = 0; i < data.length; ++i) {
                res.push([i, data[i]]);
            }

            return res;
        }

        /*
         * DONUT CHART
         * -----------
         */

        var donutData = [
          { label: "CoS", data: 30, color: "#3c8dbc" },
          { label: "Revenue", data: 20, color: "#0073b7" },
          { label: "Non-Billable", data: 0, color: "#00c0ef" }
        ];
        $.plot("#donut-chart", donutData, {
            series: {
                pie: {
                    show: true,
                    radius: 1,
                    innerRadius: 0.5,
                    label: {
                        show: true,
                        radius: 2 / 3,
                        formatter: labelFormatter,
                        threshold: 0.1
                    }

                }
            },
            legend: {
                show: false
            }
        });
        /*
         * END DONUT CHART
         */

    });

    /*
     * Custom Label formatter
     * ----------------------
     */
    function labelFormatter(label, series) {
        return "<div style='font-size:13px; text-align:center; padding:2px; color: #fff; font-weight: 600;'>"
                + label
                + "<br/>"
                + Math.round(series.percent) + "%</div>";
    }


</script>